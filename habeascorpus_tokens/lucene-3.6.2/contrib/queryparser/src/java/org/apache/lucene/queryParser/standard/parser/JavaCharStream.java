/* Generated By:JavaCC: Do not edit this line. JavaCharStream.java Version 4.1 */	TokenNameCOMMENT_BLOCK	 Generated By:JavaCC: Do not edit this line. JavaCharStream.java Version 4.1 
/* JavaCCOptions:STATIC=false */	TokenNameCOMMENT_BLOCK	 JavaCCOptions:STATIC=false 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
lucene	TokenNameIdentifier	 lucene
.	TokenNameDOT	
queryParser	TokenNameIdentifier	 query Parser
.	TokenNameDOT	
standard	TokenNameIdentifier	 standard
.	TokenNameDOT	
parser	TokenNameIdentifier	 parser
;	TokenNameSEMICOLON	
/** * An implementation of interface CharStream, where the stream is assumed to * contain only ASCII characters (with java-like unicode escape processing). */	TokenNameCOMMENT_JAVADOC	 An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (with java-like unicode escape processing). 
public	TokenNamepublic	
class	TokenNameclass	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
{	TokenNameLBRACE	
/** Whether parser is static. */	TokenNameCOMMENT_JAVADOC	 Whether parser is static. 
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
boolean	TokenNameboolean	
staticFlag	TokenNameIdentifier	 static Flag
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
hexval	TokenNameIdentifier	 hexval
(	TokenNameLPAREN	
char	TokenNamechar	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
'0'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'1'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'2'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'3'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'4'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'5'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'6'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'7'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
7	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'8'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'9'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'a'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
case	TokenNamecase	
'A'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
10	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'b'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
case	TokenNamecase	
'B'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
11	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'c'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
case	TokenNamecase	
'C'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
12	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'd'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
case	TokenNamecase	
'D'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
13	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'e'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
case	TokenNamecase	
'E'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
14	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'f'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
case	TokenNamecase	
'F'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
15	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// Should never come here 	TokenNameCOMMENT_LINE	Should never come here 
}	TokenNameRBRACE	
/** Position in buffer. */	TokenNameCOMMENT_JAVADOC	 Position in buffer. 
public	TokenNamepublic	
int	TokenNameint	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
bufsize	TokenNameIdentifier	 bufsize
;	TokenNameSEMICOLON	
int	TokenNameint	
available	TokenNameIdentifier	 available
;	TokenNameSEMICOLON	
int	TokenNameint	
tokenBegin	TokenNameIdentifier	 token Begin
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
line	TokenNameIdentifier	 line
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
boolean	TokenNameboolean	
prevCharIsCR	TokenNameIdentifier	 prev Char Is CR
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
boolean	TokenNameboolean	
prevCharIsLF	TokenNameIdentifier	 prev Char Is LF
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
inputStream	TokenNameIdentifier	 input Stream
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
nextCharBuf	TokenNameIdentifier	 next Char Buf
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
buffer	TokenNameIdentifier	 buffer
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
nextCharInd	TokenNameIdentifier	 next Char Ind
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
inBuf	TokenNameIdentifier	 in Buf
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
int	TokenNameint	
tabSize	TokenNameIdentifier	 tab Size
=	TokenNameEQUAL	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
void	TokenNamevoid	
setTabSize	TokenNameIdentifier	 set Tab Size
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
)	TokenNameRPAREN	
{	TokenNameLBRACE	
tabSize	TokenNameIdentifier	 tab Size
=	TokenNameEQUAL	
i	TokenNameIdentifier	 i
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
protected	TokenNameprotected	
int	TokenNameint	
getTabSize	TokenNameIdentifier	 get Tab Size
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tabSize	TokenNameIdentifier	 tab Size
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
protected	TokenNameprotected	
void	TokenNamevoid	
ExpandBuff	TokenNameIdentifier	 Expand Buff
(	TokenNameLPAREN	
boolean	TokenNameboolean	
wrapAround	TokenNameIdentifier	 wrap Around
)	TokenNameRPAREN	
{	TokenNameLBRACE	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
newbuffer	TokenNameIdentifier	 newbuffer
=	TokenNameEQUAL	
new	TokenNamenew	
char	TokenNamechar	
[	TokenNameLBRACKET	
bufsize	TokenNameIdentifier	 bufsize
+	TokenNamePLUS	
2048	TokenNameIntegerLiteral	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
int	TokenNameint	
newbufline	TokenNameIdentifier	 newbufline
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
new	TokenNamenew	
int	TokenNameint	
[	TokenNameLBRACKET	
bufsize	TokenNameIdentifier	 bufsize
+	TokenNamePLUS	
2048	TokenNameIntegerLiteral	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
int	TokenNameint	
newbufcolumn	TokenNameIdentifier	 newbufcolumn
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
new	TokenNamenew	
int	TokenNameint	
[	TokenNameLBRACKET	
bufsize	TokenNameIdentifier	 bufsize
+	TokenNamePLUS	
2048	TokenNameIntegerLiteral	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
wrapAround	TokenNameIdentifier	 wrap Around
)	TokenNameRPAREN	
{	TokenNameLBRACE	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
newbuffer	TokenNameIdentifier	 newbuffer
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
newbuffer	TokenNameIdentifier	 newbuffer
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
buffer	TokenNameIdentifier	 buffer
=	TokenNameEQUAL	
newbuffer	TokenNameIdentifier	 newbuffer
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
bufline	TokenNameIdentifier	 bufline
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
newbufline	TokenNameIdentifier	 newbufline
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
bufline	TokenNameIdentifier	 bufline
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
newbufline	TokenNameIdentifier	 newbufline
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
bufline	TokenNameIdentifier	 bufline
=	TokenNameEQUAL	
newbufline	TokenNameIdentifier	 newbufline
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
bufcolumn	TokenNameIdentifier	 bufcolumn
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
newbufcolumn	TokenNameIdentifier	 newbufcolumn
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
bufcolumn	TokenNameIdentifier	 bufcolumn
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
newbufcolumn	TokenNameIdentifier	 newbufcolumn
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
=	TokenNameEQUAL	
newbufcolumn	TokenNameIdentifier	 newbufcolumn
;	TokenNameSEMICOLON	
bufpos	TokenNameIdentifier	 bufpos
+=	TokenNamePLUS_EQUAL	
(	TokenNameLPAREN	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
newbuffer	TokenNameIdentifier	 newbuffer
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
buffer	TokenNameIdentifier	 buffer
=	TokenNameEQUAL	
newbuffer	TokenNameIdentifier	 newbuffer
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
bufline	TokenNameIdentifier	 bufline
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
newbufline	TokenNameIdentifier	 newbufline
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
bufline	TokenNameIdentifier	 bufline
=	TokenNameEQUAL	
newbufline	TokenNameIdentifier	 newbufline
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
bufcolumn	TokenNameIdentifier	 bufcolumn
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
newbufcolumn	TokenNameIdentifier	 newbufcolumn
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
=	TokenNameEQUAL	
newbufcolumn	TokenNameIdentifier	 newbufcolumn
;	TokenNameSEMICOLON	
bufpos	TokenNameIdentifier	 bufpos
-=	TokenNameMINUS_EQUAL	
tokenBegin	TokenNameIdentifier	 token Begin
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
Throwable	TokenNameIdentifier	 Throwable
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
Error	TokenNameIdentifier	 Error
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
available	TokenNameIdentifier	 available
=	TokenNameEQUAL	
(	TokenNameLPAREN	
bufsize	TokenNameIdentifier	 bufsize
+=	TokenNamePLUS_EQUAL	
2048	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tokenBegin	TokenNameIdentifier	 token Begin
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
protected	TokenNameprotected	
void	TokenNamevoid	
FillBuff	TokenNameIdentifier	 Fill Buff
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
{	TokenNameLBRACE	
int	TokenNameint	
i	TokenNameIdentifier	 i
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
==	TokenNameEQUAL_EQUAL	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
=	TokenNameEQUAL	
nextCharInd	TokenNameIdentifier	 next Char Ind
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
inputStream	TokenNameIdentifier	 input Stream
.	TokenNameDOT	
read	TokenNameIdentifier	 read
(	TokenNameLPAREN	
nextCharBuf	TokenNameIdentifier	 next Char Buf
,	TokenNameCOMMA	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
-	TokenNameMINUS	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
)	TokenNameRPAREN	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
inputStream	TokenNameIdentifier	 input Stream
.	TokenNameDOT	
close	TokenNameIdentifier	 close
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
+=	TokenNamePLUS_EQUAL	
i	TokenNameIdentifier	 i
;	TokenNameSEMICOLON	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
bufpos	TokenNameIdentifier	 bufpos
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
--	TokenNameMINUS_MINUS	
bufpos	TokenNameIdentifier	 bufpos
;	TokenNameSEMICOLON	
backup	TokenNameIdentifier	 backup
(	TokenNameLPAREN	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
line	TokenNameIdentifier	 line
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
column	TokenNameIdentifier	 column
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
throw	TokenNamethrow	
e	TokenNameIdentifier	 e
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
protected	TokenNameprotected	
char	TokenNamechar	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
++	TokenNamePLUS_PLUS	
nextCharInd	TokenNameIdentifier	 next Char Ind
>=	TokenNameGREATER_EQUAL	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
)	TokenNameRPAREN	
FillBuff	TokenNameIdentifier	 Fill Buff
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
nextCharBuf	TokenNameIdentifier	 next Char Buf
[	TokenNameLBRACKET	
nextCharInd	TokenNameIdentifier	 next Char Ind
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** @return starting character for token. */	TokenNameCOMMENT_JAVADOC	 @return starting character for token. 
public	TokenNamepublic	
char	TokenNamechar	
BeginToken	TokenNameIdentifier	 Begin Token
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
inBuf	TokenNameIdentifier	 in Buf
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
--	TokenNameMINUS_MINUS	
inBuf	TokenNameIdentifier	 in Buf
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
++	TokenNamePLUS_PLUS	
bufpos	TokenNameIdentifier	 bufpos
==	TokenNameEQUAL_EQUAL	
bufsize	TokenNameIdentifier	 bufsize
)	TokenNameRPAREN	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
tokenBegin	TokenNameIdentifier	 token Begin
=	TokenNameEQUAL	
bufpos	TokenNameIdentifier	 bufpos
;	TokenNameSEMICOLON	
return	TokenNamereturn	
buffer	TokenNameIdentifier	 buffer
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
tokenBegin	TokenNameIdentifier	 token Begin
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
readChar	TokenNameIdentifier	 read Char
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
protected	TokenNameprotected	
void	TokenNamevoid	
AdjustBuffSize	TokenNameIdentifier	 Adjust Buff Size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
available	TokenNameIdentifier	 available
==	TokenNameEQUAL_EQUAL	
bufsize	TokenNameIdentifier	 bufsize
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
tokenBegin	TokenNameIdentifier	 token Begin
>	TokenNameGREATER	
2048	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
available	TokenNameIdentifier	 available
=	TokenNameEQUAL	
tokenBegin	TokenNameIdentifier	 token Begin
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
ExpandBuff	TokenNameIdentifier	 Expand Buff
(	TokenNameLPAREN	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
available	TokenNameIdentifier	 available
>	TokenNameGREATER	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
available	TokenNameIdentifier	 available
=	TokenNameEQUAL	
bufsize	TokenNameIdentifier	 bufsize
;	TokenNameSEMICOLON	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
tokenBegin	TokenNameIdentifier	 token Begin
-	TokenNameMINUS	
available	TokenNameIdentifier	 available
)	TokenNameRPAREN	
<	TokenNameLESS	
2048	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
ExpandBuff	TokenNameIdentifier	 Expand Buff
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
else	TokenNameelse	
available	TokenNameIdentifier	 available
=	TokenNameEQUAL	
tokenBegin	TokenNameIdentifier	 token Begin
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
protected	TokenNameprotected	
void	TokenNamevoid	
UpdateLineColumn	TokenNameIdentifier	 Update Line Column
(	TokenNameLPAREN	
char	TokenNamechar	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
{	TokenNameLBRACE	
column	TokenNameIdentifier	 column
++	TokenNamePLUS_PLUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
prevCharIsLF	TokenNameIdentifier	 prev Char Is LF
)	TokenNameRPAREN	
{	TokenNameLBRACE	
prevCharIsLF	TokenNameIdentifier	 prev Char Is LF
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
line	TokenNameIdentifier	 line
+=	TokenNamePLUS_EQUAL	
(	TokenNameLPAREN	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
prevCharIsCR	TokenNameIdentifier	 prev Char Is CR
)	TokenNameRPAREN	
{	TokenNameLBRACE	
prevCharIsCR	TokenNameIdentifier	 prev Char Is CR
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
==	TokenNameEQUAL_EQUAL	
'\n'	TokenNameCharacterLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
prevCharIsLF	TokenNameIdentifier	 prev Char Is LF
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
line	TokenNameIdentifier	 line
+=	TokenNamePLUS_EQUAL	
(	TokenNameLPAREN	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
'\r'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
prevCharIsCR	TokenNameIdentifier	 prev Char Is CR
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'\n'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
prevCharIsLF	TokenNameIdentifier	 prev Char Is LF
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
'\t'	TokenNameCharacterLiteral	
:	TokenNameCOLON	
column	TokenNameIdentifier	 column
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
column	TokenNameIdentifier	 column
+=	TokenNamePLUS_EQUAL	
(	TokenNameLPAREN	
tabSize	TokenNameIdentifier	 tab Size
-	TokenNameMINUS	
(	TokenNameLPAREN	
column	TokenNameIdentifier	 column
%	TokenNameREMAINDER	
tabSize	TokenNameIdentifier	 tab Size
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
line	TokenNameIdentifier	 line
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
column	TokenNameIdentifier	 column
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Read a character. */	TokenNameCOMMENT_JAVADOC	 Read a character. 
public	TokenNamepublic	
char	TokenNamechar	
readChar	TokenNameIdentifier	 read Char
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
inBuf	TokenNameIdentifier	 in Buf
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
--	TokenNameMINUS_MINUS	
inBuf	TokenNameIdentifier	 in Buf
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
++	TokenNamePLUS_PLUS	
bufpos	TokenNameIdentifier	 bufpos
==	TokenNameEQUAL_EQUAL	
bufsize	TokenNameIdentifier	 bufsize
)	TokenNameRPAREN	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
buffer	TokenNameIdentifier	 buffer
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
char	TokenNamechar	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
++	TokenNamePLUS_PLUS	
bufpos	TokenNameIdentifier	 bufpos
==	TokenNameEQUAL_EQUAL	
available	TokenNameIdentifier	 available
)	TokenNameRPAREN	
AdjustBuffSize	TokenNameIdentifier	 Adjust Buff Size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
'\\'	TokenNameCharacterLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
UpdateLineColumn	TokenNameIdentifier	 Update Line Column
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
int	TokenNameint	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
;	TokenNameSEMICOLON	
;	TokenNameSEMICOLON	
)	TokenNameRPAREN	
// Read all the backslashes 	TokenNameCOMMENT_LINE	Read all the backslashes 
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
++	TokenNamePLUS_PLUS	
bufpos	TokenNameIdentifier	 bufpos
==	TokenNameEQUAL_EQUAL	
available	TokenNameIdentifier	 available
)	TokenNameRPAREN	
AdjustBuffSize	TokenNameIdentifier	 Adjust Buff Size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
!=	TokenNameNOT_EQUAL	
'\\'	TokenNameCharacterLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
UpdateLineColumn	TokenNameIdentifier	 Update Line Column
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// found a non-backslash char. 	TokenNameCOMMENT_LINE	found a non-backslash char. 
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
==	TokenNameEQUAL_EQUAL	
'u'	TokenNameCharacterLiteral	
)	TokenNameRPAREN	
&&	TokenNameAND_AND	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
&	TokenNameAND	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
--	TokenNameMINUS_MINUS	
bufpos	TokenNameIdentifier	 bufpos
<	TokenNameLESS	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
backup	TokenNameIdentifier	 backup
(	TokenNameLPAREN	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
'\\'	TokenNameCharacterLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
>	TokenNameGREATER	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
backup	TokenNameIdentifier	 backup
(	TokenNameLPAREN	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
'\\'	TokenNameCharacterLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
UpdateLineColumn	TokenNameIdentifier	 Update Line Column
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
++	TokenNamePLUS_PLUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// Here, we have seen an odd number of backslash's followed by a 'u' 	TokenNameCOMMENT_LINE	Here, we have seen an odd number of backslash's followed by a 'u' 
try	TokenNametry	
{	TokenNameLBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
'u'	TokenNameCharacterLiteral	
)	TokenNameRPAREN	
++	TokenNamePLUS_PLUS	
column	TokenNameIdentifier	 column
;	TokenNameSEMICOLON	
buffer	TokenNameIdentifier	 buffer
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
(	TokenNameLPAREN	
char	TokenNamechar	
)	TokenNameRPAREN	
(	TokenNameLPAREN	
hexval	TokenNameIdentifier	 hexval
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
<<	TokenNameLEFT_SHIFT	
12	TokenNameIntegerLiteral	
|	TokenNameOR	
hexval	TokenNameIdentifier	 hexval
(	TokenNameLPAREN	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
<<	TokenNameLEFT_SHIFT	
8	TokenNameIntegerLiteral	
|	TokenNameOR	
hexval	TokenNameIdentifier	 hexval
(	TokenNameLPAREN	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
<<	TokenNameLEFT_SHIFT	
4	TokenNameIntegerLiteral	
|	TokenNameOR	
hexval	TokenNameIdentifier	 hexval
(	TokenNameLPAREN	
ReadByte	TokenNameIdentifier	 Read Byte
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
column	TokenNameIdentifier	 column
+=	TokenNamePLUS_EQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
Error	TokenNameIdentifier	 Error
(	TokenNameLPAREN	
"Invalid escape character at line "	TokenNameStringLiteral	Invalid escape character at line 
+	TokenNamePLUS	
line	TokenNameIdentifier	 line
+	TokenNamePLUS	
" column "	TokenNameStringLiteral	 column 
+	TokenNamePLUS	
column	TokenNameIdentifier	 column
+	TokenNamePLUS	
"."	TokenNameStringLiteral	.
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
==	TokenNameEQUAL_EQUAL	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
return	TokenNamereturn	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
else	TokenNameelse	
{	TokenNameLBRACE	
backup	TokenNameIdentifier	 backup
(	TokenNameLPAREN	
backSlashCnt	TokenNameIdentifier	 back Slash Cnt
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
'\\'	TokenNameCharacterLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
UpdateLineColumn	TokenNameIdentifier	 Update Line Column
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
@	TokenNameAT	
Deprecated	TokenNameIdentifier	 Deprecated
/** * @deprecated * @see #getEndColumn */	TokenNameCOMMENT_JAVADOC	 @deprecated @see #getEndColumn 
public	TokenNamepublic	
int	TokenNameint	
getColumn	TokenNameIdentifier	 get Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
@	TokenNameAT	
Deprecated	TokenNameIdentifier	 Deprecated
/** * @deprecated * @see #getEndLine */	TokenNameCOMMENT_JAVADOC	 @deprecated @see #getEndLine 
public	TokenNamepublic	
int	TokenNameint	
getLine	TokenNameIdentifier	 get Line
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Get end column. */	TokenNameCOMMENT_JAVADOC	 Get end column. 
public	TokenNamepublic	
int	TokenNameint	
getEndColumn	TokenNameIdentifier	 get End Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Get end line. */	TokenNameCOMMENT_JAVADOC	 Get end line. 
public	TokenNamepublic	
int	TokenNameint	
getEndLine	TokenNameIdentifier	 get End Line
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
bufpos	TokenNameIdentifier	 bufpos
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** @return column of token start */	TokenNameCOMMENT_JAVADOC	 @return column of token start 
public	TokenNamepublic	
int	TokenNameint	
getBeginColumn	TokenNameIdentifier	 get Begin Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
tokenBegin	TokenNameIdentifier	 token Begin
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** @return line number of token start */	TokenNameCOMMENT_JAVADOC	 @return line number of token start 
public	TokenNamepublic	
int	TokenNameint	
getBeginLine	TokenNameIdentifier	 get Begin Line
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
tokenBegin	TokenNameIdentifier	 token Begin
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Retreat. */	TokenNameCOMMENT_JAVADOC	 Retreat. 
public	TokenNamepublic	
void	TokenNamevoid	
backup	TokenNameIdentifier	 backup
(	TokenNameLPAREN	
int	TokenNameint	
amount	TokenNameIdentifier	 amount
)	TokenNameRPAREN	
{	TokenNameLBRACE	
inBuf	TokenNameIdentifier	 in Buf
+=	TokenNamePLUS_EQUAL	
amount	TokenNameIdentifier	 amount
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
bufpos	TokenNameIdentifier	 bufpos
-=	TokenNameMINUS_EQUAL	
amount	TokenNameIdentifier	 amount
)	TokenNameRPAREN	
<	TokenNameLESS	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
bufpos	TokenNameIdentifier	 bufpos
+=	TokenNamePLUS_EQUAL	
bufsize	TokenNameIdentifier	 bufsize
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
int	TokenNameint	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
{	TokenNameLBRACE	
inputStream	TokenNameIdentifier	 input Stream
=	TokenNameEQUAL	
dstream	TokenNameIdentifier	 dstream
;	TokenNameSEMICOLON	
line	TokenNameIdentifier	 line
=	TokenNameEQUAL	
startline	TokenNameIdentifier	 startline
;	TokenNameSEMICOLON	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
startcolumn	TokenNameIdentifier	 startcolumn
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
available	TokenNameIdentifier	 available
=	TokenNameEQUAL	
bufsize	TokenNameIdentifier	 bufsize
=	TokenNameEQUAL	
buffersize	TokenNameIdentifier	 buffersize
;	TokenNameSEMICOLON	
buffer	TokenNameIdentifier	 buffer
=	TokenNameEQUAL	
new	TokenNamenew	
char	TokenNamechar	
[	TokenNameLBRACKET	
buffersize	TokenNameIdentifier	 buffersize
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
bufline	TokenNameIdentifier	 bufline
=	TokenNameEQUAL	
new	TokenNamenew	
int	TokenNameint	
[	TokenNameLBRACKET	
buffersize	TokenNameIdentifier	 buffersize
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
=	TokenNameEQUAL	
new	TokenNamenew	
int	TokenNameint	
[	TokenNameLBRACKET	
buffersize	TokenNameIdentifier	 buffersize
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
nextCharBuf	TokenNameIdentifier	 next Char Buf
=	TokenNameEQUAL	
new	TokenNamenew	
char	TokenNamechar	
[	TokenNameLBRACKET	
4096	TokenNameIntegerLiteral	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
int	TokenNameint	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
{	TokenNameLBRACE	
inputStream	TokenNameIdentifier	 input Stream
=	TokenNameEQUAL	
dstream	TokenNameIdentifier	 dstream
;	TokenNameSEMICOLON	
line	TokenNameIdentifier	 line
=	TokenNameEQUAL	
startline	TokenNameIdentifier	 startline
;	TokenNameSEMICOLON	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
startcolumn	TokenNameIdentifier	 startcolumn
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
||	TokenNameOR_OR	
buffersize	TokenNameIdentifier	 buffersize
!=	TokenNameNOT_EQUAL	
buffer	TokenNameIdentifier	 buffer
.	TokenNameDOT	
length	TokenNameIdentifier	 length
)	TokenNameRPAREN	
{	TokenNameLBRACE	
available	TokenNameIdentifier	 available
=	TokenNameEQUAL	
bufsize	TokenNameIdentifier	 bufsize
=	TokenNameEQUAL	
buffersize	TokenNameIdentifier	 buffersize
;	TokenNameSEMICOLON	
buffer	TokenNameIdentifier	 buffer
=	TokenNameEQUAL	
new	TokenNamenew	
char	TokenNamechar	
[	TokenNameLBRACKET	
buffersize	TokenNameIdentifier	 buffersize
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
bufline	TokenNameIdentifier	 bufline
=	TokenNameEQUAL	
new	TokenNamenew	
int	TokenNameint	
[	TokenNameLBRACKET	
buffersize	TokenNameIdentifier	 buffersize
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
=	TokenNameEQUAL	
new	TokenNamenew	
int	TokenNameint	
[	TokenNameLBRACKET	
buffersize	TokenNameIdentifier	 buffersize
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
nextCharBuf	TokenNameIdentifier	 next Char Buf
=	TokenNameEQUAL	
new	TokenNamenew	
char	TokenNamechar	
[	TokenNameLBRACKET	
4096	TokenNameIntegerLiteral	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
prevCharIsLF	TokenNameIdentifier	 prev Char Is LF
=	TokenNameEQUAL	
prevCharIsCR	TokenNameIdentifier	 prev Char Is CR
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
tokenBegin	TokenNameIdentifier	 token Begin
=	TokenNameEQUAL	
inBuf	TokenNameIdentifier	 in Buf
=	TokenNameEQUAL	
maxNextCharInd	TokenNameIdentifier	 max Next Char Ind
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
nextCharInd	TokenNameIdentifier	 next Char Ind
=	TokenNameEQUAL	
bufpos	TokenNameIdentifier	 bufpos
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
)	TokenNameRPAREN	
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Reader	TokenNameIdentifier	 Reader
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
int	TokenNameint	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
UnsupportedEncodingException	TokenNameIdentifier	 Unsupported Encoding Exception
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
encoding	TokenNameIdentifier	 encoding
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStreamReader	TokenNameIdentifier	 Input Stream Reader
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
:	TokenNameCOLON	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStreamReader	TokenNameIdentifier	 Input Stream Reader
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
encoding	TokenNameIdentifier	 encoding
)	TokenNameRPAREN	
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
int	TokenNameint	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStreamReader	TokenNameIdentifier	 Input Stream Reader
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
UnsupportedEncodingException	TokenNameIdentifier	 Unsupported Encoding Exception
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
encoding	TokenNameIdentifier	 encoding
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
UnsupportedEncodingException	TokenNameIdentifier	 Unsupported Encoding Exception
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Constructor. */	TokenNameCOMMENT_JAVADOC	 Constructor. 
public	TokenNamepublic	
JavaCharStream	TokenNameIdentifier	 Java Char Stream
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
int	TokenNameint	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
UnsupportedEncodingException	TokenNameIdentifier	 Unsupported Encoding Exception
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
encoding	TokenNameIdentifier	 encoding
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStreamReader	TokenNameIdentifier	 Input Stream Reader
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
:	TokenNameCOLON	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStreamReader	TokenNameIdentifier	 Input Stream Reader
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
encoding	TokenNameIdentifier	 encoding
)	TokenNameRPAREN	
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
int	TokenNameint	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStreamReader	TokenNameIdentifier	 Input Stream Reader
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
buffersize	TokenNameIdentifier	 buffersize
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
UnsupportedEncodingException	TokenNameIdentifier	 Unsupported Encoding Exception
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
int	TokenNameint	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
int	TokenNameint	
startcolumn	TokenNameIdentifier	 startcolumn
)	TokenNameRPAREN	
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
startline	TokenNameIdentifier	 startline
,	TokenNameCOMMA	
startcolumn	TokenNameIdentifier	 startcolumn
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
encoding	TokenNameIdentifier	 encoding
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
UnsupportedEncodingException	TokenNameIdentifier	 Unsupported Encoding Exception
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
encoding	TokenNameIdentifier	 encoding
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Reinitialise. */	TokenNameCOMMENT_JAVADOC	 Reinitialise. 
public	TokenNamepublic	
void	TokenNamevoid	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
InputStream	TokenNameIdentifier	 Input Stream
dstream	TokenNameIdentifier	 dstream
)	TokenNameRPAREN	
{	TokenNameLBRACE	
ReInit	TokenNameIdentifier	 Re Init
(	TokenNameLPAREN	
dstream	TokenNameIdentifier	 dstream
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
4096	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** @return token image as String */	TokenNameCOMMENT_JAVADOC	 @return token image as String 
public	TokenNamepublic	
String	TokenNameIdentifier	 String
GetImage	TokenNameIdentifier	 Get Image
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
bufpos	TokenNameIdentifier	 bufpos
>=	TokenNameGREATER_EQUAL	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
return	TokenNamereturn	
new	TokenNamenew	
String	TokenNameIdentifier	 String
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
else	TokenNameelse	
return	TokenNamereturn	
new	TokenNamenew	
String	TokenNameIdentifier	 String
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
tokenBegin	TokenNameIdentifier	 token Begin
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
+	TokenNamePLUS	
new	TokenNamenew	
String	TokenNameIdentifier	 String
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** @return suffix */	TokenNameCOMMENT_JAVADOC	 @return suffix 
public	TokenNamepublic	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
GetSuffix	TokenNameIdentifier	 Get Suffix
(	TokenNameLPAREN	
int	TokenNameint	
len	TokenNameIdentifier	 len
)	TokenNameRPAREN	
{	TokenNameLBRACE	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
ret	TokenNameIdentifier	 ret
=	TokenNameEQUAL	
new	TokenNamenew	
char	TokenNamechar	
[	TokenNameLBRACKET	
len	TokenNameIdentifier	 len
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
bufpos	TokenNameIdentifier	 bufpos
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
len	TokenNameIdentifier	 len
)	TokenNameRPAREN	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
-	TokenNameMINUS	
len	TokenNameIdentifier	 len
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
ret	TokenNameIdentifier	 ret
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
len	TokenNameIdentifier	 len
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
else	TokenNameelse	
{	TokenNameLBRACE	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
(	TokenNameLPAREN	
len	TokenNameIdentifier	 len
-	TokenNameMINUS	
bufpos	TokenNameIdentifier	 bufpos
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
ret	TokenNameIdentifier	 ret
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
len	TokenNameIdentifier	 len
-	TokenNameMINUS	
bufpos	TokenNameIdentifier	 bufpos
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
System	TokenNameIdentifier	 System
.	TokenNameDOT	
arraycopy	TokenNameIdentifier	 arraycopy
(	TokenNameLPAREN	
buffer	TokenNameIdentifier	 buffer
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
ret	TokenNameIdentifier	 ret
,	TokenNameCOMMA	
len	TokenNameIdentifier	 len
-	TokenNameMINUS	
bufpos	TokenNameIdentifier	 bufpos
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
bufpos	TokenNameIdentifier	 bufpos
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
return	TokenNamereturn	
ret	TokenNameIdentifier	 ret
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Set buffers back to null when finished. */	TokenNameCOMMENT_JAVADOC	 Set buffers back to null when finished. 
public	TokenNamepublic	
void	TokenNamevoid	
Done	TokenNameIdentifier	 Done
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
nextCharBuf	TokenNameIdentifier	 next Char Buf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
buffer	TokenNameIdentifier	 buffer
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
bufline	TokenNameIdentifier	 bufline
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Method to adjust line and column numbers for the start of a token. */	TokenNameCOMMENT_JAVADOC	 Method to adjust line and column numbers for the start of a token. 
public	TokenNamepublic	
void	TokenNamevoid	
adjustBeginLineColumn	TokenNameIdentifier	 adjust Begin Line Column
(	TokenNameLPAREN	
int	TokenNameint	
newLine	TokenNameIdentifier	 new Line
,	TokenNameCOMMA	
int	TokenNameint	
newCol	TokenNameIdentifier	 new Col
)	TokenNameRPAREN	
{	TokenNameLBRACE	
int	TokenNameint	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
tokenBegin	TokenNameIdentifier	 token Begin
;	TokenNameSEMICOLON	
int	TokenNameint	
len	TokenNameIdentifier	 len
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
bufpos	TokenNameIdentifier	 bufpos
>=	TokenNameGREATER_EQUAL	
tokenBegin	TokenNameIdentifier	 token Begin
)	TokenNameRPAREN	
{	TokenNameLBRACE	
len	TokenNameIdentifier	 len
=	TokenNameEQUAL	
bufpos	TokenNameIdentifier	 bufpos
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
+	TokenNamePLUS	
inBuf	TokenNameIdentifier	 in Buf
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
len	TokenNameIdentifier	 len
=	TokenNameEQUAL	
bufsize	TokenNameIdentifier	 bufsize
-	TokenNameMINUS	
tokenBegin	TokenNameIdentifier	 token Begin
+	TokenNamePLUS	
bufpos	TokenNameIdentifier	 bufpos
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
+	TokenNamePLUS	
inBuf	TokenNameIdentifier	 in Buf
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
j	TokenNameIdentifier	 j
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
nextColDiff	TokenNameIdentifier	 next Col Diff
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
columnDiff	TokenNameIdentifier	 column Diff
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
while	TokenNamewhile	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
len	TokenNameIdentifier	 len
&&	TokenNameAND_AND	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
=	TokenNameEQUAL	
start	TokenNameIdentifier	 start
%	TokenNameREMAINDER	
bufsize	TokenNameIdentifier	 bufsize
]	TokenNameRBRACKET	
==	TokenNameEQUAL_EQUAL	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
++	TokenNamePLUS_PLUS	
start	TokenNameIdentifier	 start
%	TokenNameREMAINDER	
bufsize	TokenNameIdentifier	 bufsize
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
newLine	TokenNameIdentifier	 new Line
;	TokenNameSEMICOLON	
nextColDiff	TokenNameIdentifier	 next Col Diff
=	TokenNameEQUAL	
columnDiff	TokenNameIdentifier	 column Diff
+	TokenNamePLUS	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
k	TokenNameIdentifier	 k
]	TokenNameRBRACKET	
-	TokenNameMINUS	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
newCol	TokenNameIdentifier	 new Col
+	TokenNamePLUS	
columnDiff	TokenNameIdentifier	 column Diff
;	TokenNameSEMICOLON	
columnDiff	TokenNameIdentifier	 column Diff
=	TokenNameEQUAL	
nextColDiff	TokenNameIdentifier	 next Col Diff
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
len	TokenNameIdentifier	 len
)	TokenNameRPAREN	
{	TokenNameLBRACE	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
newLine	TokenNameIdentifier	 new Line
++	TokenNamePLUS_PLUS	
;	TokenNameSEMICOLON	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
newCol	TokenNameIdentifier	 new Col
+	TokenNamePLUS	
columnDiff	TokenNameIdentifier	 column Diff
;	TokenNameSEMICOLON	
while	TokenNamewhile	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
<	TokenNameLESS	
len	TokenNameIdentifier	 len
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
=	TokenNameEQUAL	
start	TokenNameIdentifier	 start
%	TokenNameREMAINDER	
bufsize	TokenNameIdentifier	 bufsize
]	TokenNameRBRACKET	
!=	TokenNameNOT_EQUAL	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
++	TokenNamePLUS_PLUS	
start	TokenNameIdentifier	 start
%	TokenNameREMAINDER	
bufsize	TokenNameIdentifier	 bufsize
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
newLine	TokenNameIdentifier	 new Line
++	TokenNamePLUS_PLUS	
;	TokenNameSEMICOLON	
else	TokenNameelse	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
newLine	TokenNameIdentifier	 new Line
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
line	TokenNameIdentifier	 line
=	TokenNameEQUAL	
bufline	TokenNameIdentifier	 bufline
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
bufcolumn	TokenNameIdentifier	 bufcolumn
[	TokenNameLBRACKET	
j	TokenNameIdentifier	 j
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
/* JavaCC - OriginalChecksum=f19c73b8f7faf94cc4a581e7b2933cc6 (do not edit this line) */	TokenNameCOMMENT_BLOCK	 JavaCC - OriginalChecksum=f19c73b8f7faf94cc4a581e7b2933cc6 (do not edit this line) 
