/** * Autogenerated by Avro * * DO NOT EDIT DIRECTLY */	TokenNameCOMMENT_JAVADOC	 Autogenerated by Avro * DO NOT EDIT DIRECTLY 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
db	TokenNameIdentifier	 db
.	TokenNameDOT	
migration	TokenNameIdentifier	 migration
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
;	TokenNameSEMICOLON	
@	TokenNameAT	
SuppressWarnings	TokenNameIdentifier	 Suppress Warnings
(	TokenNameLPAREN	
"all"	TokenNameStringLiteral	all
)	TokenNameRPAREN	
public	TokenNamepublic	
class	TokenNameclass	
DropKeyspace	TokenNameIdentifier	 Drop Keyspace
extends	TokenNameextends	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
specific	TokenNameIdentifier	 specific
.	TokenNameDOT	
SpecificRecordBase	TokenNameIdentifier	 Specific Record Base
implements	TokenNameimplements	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
specific	TokenNameIdentifier	 specific
.	TokenNameDOT	
SpecificRecord	TokenNameIdentifier	 Specific Record
{	TokenNameLBRACE	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
Schema	TokenNameIdentifier	 Schema
SCHEMA$	TokenNameIdentifier	 SCHEM A$
=	TokenNameEQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
Schema	TokenNameIdentifier	 Schema
.	TokenNameDOT	
parse	TokenNameIdentifier	 parse
(	TokenNameLPAREN	
"{"type":"record","name":"DropKeyspace","namespace":"org.apache.cassandra.db.migration.avro","fields":[{"name":"ksname","type":"string"}]}"	TokenNameStringLiteral	{"type":"record","name":"DropKeyspace","namespace":"org.apache.cassandra.db.migration.avro","fields":[{"name":"ksname","type":"string"}]}
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
lang	TokenNameIdentifier	 lang
.	TokenNameDOT	
CharSequence	TokenNameIdentifier	 Char Sequence
ksname	TokenNameIdentifier	 ksname
;	TokenNameSEMICOLON	
public	TokenNamepublic	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
Schema	TokenNameIdentifier	 Schema
getSchema	TokenNameIdentifier	 get Schema
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
SCHEMA$	TokenNameIdentifier	 SCHEM A$
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// Used by DatumWriter. Applications should not call. 	TokenNameCOMMENT_LINE	Used by DatumWriter. Applications should not call. 
public	TokenNamepublic	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
lang	TokenNameIdentifier	 lang
.	TokenNameDOT	
Object	TokenNameIdentifier	 Object
get	TokenNameIdentifier	 get
(	TokenNameLPAREN	
int	TokenNameint	
field$	TokenNameIdentifier	 field$
)	TokenNameRPAREN	
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
field$	TokenNameIdentifier	 field$
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
0	TokenNameIntegerLiteral	
:	TokenNameCOLON	
return	TokenNamereturn	
ksname	TokenNameIdentifier	 ksname
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
throw	TokenNamethrow	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
AvroRuntimeException	TokenNameIdentifier	 Avro Runtime Exception
(	TokenNameLPAREN	
"Bad index"	TokenNameStringLiteral	Bad index
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
// Used by DatumReader. Applications should not call. 	TokenNameCOMMENT_LINE	Used by DatumReader. Applications should not call. 
@	TokenNameAT	
SuppressWarnings	TokenNameIdentifier	 Suppress Warnings
(	TokenNameLPAREN	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
"unchecked"	TokenNameStringLiteral	unchecked
)	TokenNameRPAREN	
public	TokenNamepublic	
void	TokenNamevoid	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
int	TokenNameint	
field$	TokenNameIdentifier	 field$
,	TokenNameCOMMA	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
lang	TokenNameIdentifier	 lang
.	TokenNameDOT	
Object	TokenNameIdentifier	 Object
value$	TokenNameIdentifier	 value$
)	TokenNameRPAREN	
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
field$	TokenNameIdentifier	 field$
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
0	TokenNameIntegerLiteral	
:	TokenNameCOLON	
ksname	TokenNameIdentifier	 ksname
=	TokenNameEQUAL	
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
lang	TokenNameIdentifier	 lang
.	TokenNameDOT	
CharSequence	TokenNameIdentifier	 Char Sequence
)	TokenNameRPAREN	
value$	TokenNameIdentifier	 value$
;	TokenNameSEMICOLON	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
throw	TokenNamethrow	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
avro	TokenNameIdentifier	 avro
.	TokenNameDOT	
AvroRuntimeException	TokenNameIdentifier	 Avro Runtime Exception
(	TokenNameLPAREN	
"Bad index"	TokenNameStringLiteral	Bad index
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
