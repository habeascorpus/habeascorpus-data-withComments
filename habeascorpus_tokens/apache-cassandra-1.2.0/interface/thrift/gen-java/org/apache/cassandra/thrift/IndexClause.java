/** * Autogenerated by Thrift Compiler (0.7.0) * * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING */	TokenNameCOMMENT_JAVADOC	 Autogenerated by Thrift Compiler (0.7.0) * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
;	TokenNameSEMICOLON	
/* * * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, * software distributed under the License is distributed on an * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY * KIND, either express or implied. See the License for the * specific language governing permissions and limitations * under the License. * */	TokenNameCOMMENT_BLOCK	 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at * http://www.apache.org/licenses/LICENSE-2.0 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. 
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
commons	TokenNameIdentifier	 commons
.	TokenNameDOT	
lang	TokenNameIdentifier	 lang
.	TokenNameDOT	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
HashCodeBuilder	TokenNameIdentifier	 Hash Code Builder
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
List	TokenNameIdentifier	 List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
ArrayList	TokenNameIdentifier	 Array List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Map	TokenNameIdentifier	 Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
HashMap	TokenNameIdentifier	 Hash Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
EnumMap	TokenNameIdentifier	 Enum Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Set	TokenNameIdentifier	 Set
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
HashSet	TokenNameIdentifier	 Hash Set
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
EnumSet	TokenNameIdentifier	 Enum Set
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Collections	TokenNameIdentifier	 Collections
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
BitSet	TokenNameIdentifier	 Bit Set
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
nio	TokenNameIdentifier	 nio
.	TokenNameDOT	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Arrays	TokenNameIdentifier	 Arrays
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
slf4j	TokenNameIdentifier	 slf4j
.	TokenNameDOT	
Logger	TokenNameIdentifier	 Logger
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
slf4j	TokenNameIdentifier	 slf4j
.	TokenNameDOT	
LoggerFactory	TokenNameIdentifier	 Logger Factory
;	TokenNameSEMICOLON	
/** * @Deprecated: use a KeyRange with row_filter in get_range_slices instead */	TokenNameCOMMENT_JAVADOC	 @Deprecated: use a KeyRange with row_filter in get_range_slices instead 
public	TokenNamepublic	
class	TokenNameclass	
IndexClause	TokenNameIdentifier	 Index Clause
implements	TokenNameimplements	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBase	TokenNameIdentifier	 T Base
<	TokenNameLESS	
IndexClause	TokenNameIdentifier	 Index Clause
,	TokenNameCOMMA	
IndexClause	TokenNameIdentifier	 Index Clause
.	TokenNameDOT	
_Fields	TokenNameIdentifier	 Fields
>	TokenNameGREATER	
,	TokenNameCOMMA	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
Serializable	TokenNameIdentifier	 Serializable
,	TokenNameCOMMA	
Cloneable	TokenNameIdentifier	 Cloneable
{	TokenNameLBRACE	
private	TokenNameprivate	
static	TokenNamestatic	
final	TokenNamefinal	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TStruct	TokenNameIdentifier	 T Struct
STRUCT_DESC	TokenNameIdentifier	 STRUCT  DESC
=	TokenNameEQUAL	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TStruct	TokenNameIdentifier	 T Struct
(	TokenNameLPAREN	
"IndexClause"	TokenNameStringLiteral	IndexClause
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
private	TokenNameprivate	
static	TokenNamestatic	
final	TokenNamefinal	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
EXPRESSIONS_FIELD_DESC	TokenNameIdentifier	 EXPRESSIONS  FIELD  DESC
=	TokenNameEQUAL	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
(	TokenNameLPAREN	
"expressions"	TokenNameStringLiteral	expressions
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
LIST	TokenNameIdentifier	 LIST
,	TokenNameCOMMA	
(	TokenNameLPAREN	
short	TokenNameshort	
)	TokenNameRPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
private	TokenNameprivate	
static	TokenNamestatic	
final	TokenNamefinal	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
START_KEY_FIELD_DESC	TokenNameIdentifier	 START  KEY  FIELD  DESC
=	TokenNameEQUAL	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
(	TokenNameLPAREN	
"start_key"	TokenNameStringLiteral	start_key
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
STRING	TokenNameIdentifier	 STRING
,	TokenNameCOMMA	
(	TokenNameLPAREN	
short	TokenNameshort	
)	TokenNameRPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
private	TokenNameprivate	
static	TokenNamestatic	
final	TokenNamefinal	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
COUNT_FIELD_DESC	TokenNameIdentifier	 COUNT  FIELD  DESC
=	TokenNameEQUAL	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
(	TokenNameLPAREN	
"count"	TokenNameStringLiteral	count
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
I32	TokenNameIdentifier	 I32
,	TokenNameCOMMA	
(	TokenNameLPAREN	
short	TokenNameshort	
)	TokenNameRPAREN	
3	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
expressions	TokenNameIdentifier	 expressions
;	TokenNameSEMICOLON	
// required 	TokenNameCOMMENT_LINE	required 
public	TokenNamepublic	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
start_key	TokenNameIdentifier	 start key
;	TokenNameSEMICOLON	
// required 	TokenNameCOMMENT_LINE	required 
public	TokenNamepublic	
int	TokenNameint	
count	TokenNameIdentifier	 count
;	TokenNameSEMICOLON	
// required 	TokenNameCOMMENT_LINE	required 
/** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */	TokenNameCOMMENT_JAVADOC	 The set of fields this struct contains, along with convenience methods for finding and manipulating them. 
public	TokenNamepublic	
enum	TokenNameenum	
_Fields	TokenNameIdentifier	 Fields
implements	TokenNameimplements	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TFieldIdEnum	TokenNameIdentifier	 T Field Id Enum
{	TokenNameLBRACE	
EXPRESSIONS	TokenNameIdentifier	 EXPRESSIONS
(	TokenNameLPAREN	
(	TokenNameLPAREN	
short	TokenNameshort	
)	TokenNameRPAREN	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
"expressions"	TokenNameStringLiteral	expressions
)	TokenNameRPAREN	
,	TokenNameCOMMA	
START_KEY	TokenNameIdentifier	 START  KEY
(	TokenNameLPAREN	
(	TokenNameLPAREN	
short	TokenNameshort	
)	TokenNameRPAREN	
2	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
"start_key"	TokenNameStringLiteral	start_key
)	TokenNameRPAREN	
,	TokenNameCOMMA	
COUNT	TokenNameIdentifier	 COUNT
(	TokenNameLPAREN	
(	TokenNameLPAREN	
short	TokenNameshort	
)	TokenNameRPAREN	
3	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
"count"	TokenNameStringLiteral	count
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
private	TokenNameprivate	
static	TokenNamestatic	
final	TokenNamefinal	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
_Fields	TokenNameIdentifier	 Fields
>	TokenNameGREATER	
byName	TokenNameIdentifier	 by Name
=	TokenNameEQUAL	
new	TokenNamenew	
HashMap	TokenNameIdentifier	 Hash Map
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
_Fields	TokenNameIdentifier	 Fields
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
for	TokenNamefor	
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
field	TokenNameIdentifier	 field
:	TokenNameCOLON	
EnumSet	TokenNameIdentifier	 Enum Set
.	TokenNameDOT	
allOf	TokenNameIdentifier	 all Of
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
.	TokenNameDOT	
class	TokenNameclass	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
byName	TokenNameIdentifier	 by Name
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
getFieldName	TokenNameIdentifier	 get Field Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
field	TokenNameIdentifier	 field
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
/** * Find the _Fields constant that matches fieldId, or null if its not found. */	TokenNameCOMMENT_JAVADOC	 Find the _Fields constant that matches fieldId, or null if its not found. 
public	TokenNamepublic	
static	TokenNamestatic	
_Fields	TokenNameIdentifier	 Fields
findByThriftId	TokenNameIdentifier	 find By Thrift Id
(	TokenNameLPAREN	
int	TokenNameint	
fieldId	TokenNameIdentifier	 field Id
)	TokenNameRPAREN	
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
fieldId	TokenNameIdentifier	 field Id
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// EXPRESSIONS 	TokenNameCOMMENT_LINE	EXPRESSIONS 
return	TokenNamereturn	
EXPRESSIONS	TokenNameIdentifier	 EXPRESSIONS
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// START_KEY 	TokenNameCOMMENT_LINE	START_KEY 
return	TokenNamereturn	
START_KEY	TokenNameIdentifier	 START  KEY
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// COUNT 	TokenNameCOMMENT_LINE	COUNT 
return	TokenNamereturn	
COUNT	TokenNameIdentifier	 COUNT
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
return	TokenNamereturn	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
/** * Find the _Fields constant that matches fieldId, throwing an exception * if it is not found. */	TokenNameCOMMENT_JAVADOC	 Find the _Fields constant that matches fieldId, throwing an exception if it is not found. 
public	TokenNamepublic	
static	TokenNamestatic	
_Fields	TokenNameIdentifier	 Fields
findByThriftIdOrThrow	TokenNameIdentifier	 find By Thrift Id Or Throw
(	TokenNameLPAREN	
int	TokenNameint	
fieldId	TokenNameIdentifier	 field Id
)	TokenNameRPAREN	
{	TokenNameLBRACE	
_Fields	TokenNameIdentifier	 Fields
fields	TokenNameIdentifier	 fields
=	TokenNameEQUAL	
findByThriftId	TokenNameIdentifier	 find By Thrift Id
(	TokenNameLPAREN	
fieldId	TokenNameIdentifier	 field Id
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
fields	TokenNameIdentifier	 fields
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
throw	TokenNamethrow	
new	TokenNamenew	
IllegalArgumentException	TokenNameIdentifier	 Illegal Argument Exception
(	TokenNameLPAREN	
"Field "	TokenNameStringLiteral	Field 
+	TokenNamePLUS	
fieldId	TokenNameIdentifier	 field Id
+	TokenNamePLUS	
" doesn't exist!"	TokenNameStringLiteral	 doesn't exist!
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
fields	TokenNameIdentifier	 fields
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Find the _Fields constant that matches name, or null if its not found. */	TokenNameCOMMENT_JAVADOC	 Find the _Fields constant that matches name, or null if its not found. 
public	TokenNamepublic	
static	TokenNamestatic	
_Fields	TokenNameIdentifier	 Fields
findByName	TokenNameIdentifier	 find By Name
(	TokenNameLPAREN	
String	TokenNameIdentifier	 String
name	TokenNameIdentifier	 name
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
byName	TokenNameIdentifier	 by Name
.	TokenNameDOT	
get	TokenNameIdentifier	 get
(	TokenNameLPAREN	
name	TokenNameIdentifier	 name
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
private	TokenNameprivate	
final	TokenNamefinal	
short	TokenNameshort	
_thriftId	TokenNameIdentifier	 thrift Id
;	TokenNameSEMICOLON	
private	TokenNameprivate	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
_fieldName	TokenNameIdentifier	 field Name
;	TokenNameSEMICOLON	
_Fields	TokenNameIdentifier	 Fields
(	TokenNameLPAREN	
short	TokenNameshort	
thriftId	TokenNameIdentifier	 thrift Id
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
fieldName	TokenNameIdentifier	 field Name
)	TokenNameRPAREN	
{	TokenNameLBRACE	
_thriftId	TokenNameIdentifier	 thrift Id
=	TokenNameEQUAL	
thriftId	TokenNameIdentifier	 thrift Id
;	TokenNameSEMICOLON	
_fieldName	TokenNameIdentifier	 field Name
=	TokenNameEQUAL	
fieldName	TokenNameIdentifier	 field Name
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
short	TokenNameshort	
getThriftFieldId	TokenNameIdentifier	 get Thrift Field Id
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
_thriftId	TokenNameIdentifier	 thrift Id
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getFieldName	TokenNameIdentifier	 get Field Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
_fieldName	TokenNameIdentifier	 field Name
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
// isset id assignments 	TokenNameCOMMENT_LINE	isset id assignments 
private	TokenNameprivate	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
__COUNT_ISSET_ID	TokenNameIdentifier	 COUNT  ISSET  ID
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
private	TokenNameprivate	
BitSet	TokenNameIdentifier	 Bit Set
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
_Fields	TokenNameIdentifier	 Fields
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
>	TokenNameGREATER	
metaDataMap	TokenNameIdentifier	 meta Data Map
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
_Fields	TokenNameIdentifier	 Fields
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
>	TokenNameGREATER	
tmpMap	TokenNameIdentifier	 tmp Map
=	TokenNameEQUAL	
new	TokenNamenew	
EnumMap	TokenNameIdentifier	 Enum Map
<	TokenNameLESS	
_Fields	TokenNameIdentifier	 Fields
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
>	TokenNameGREATER	
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
.	TokenNameDOT	
class	TokenNameclass	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tmpMap	TokenNameIdentifier	 tmp Map
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
.	TokenNameDOT	
EXPRESSIONS	TokenNameIdentifier	 EXPRESSIONS
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
(	TokenNameLPAREN	
"expressions"	TokenNameStringLiteral	expressions
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TFieldRequirementType	TokenNameIdentifier	 T Field Requirement Type
.	TokenNameDOT	
REQUIRED	TokenNameIdentifier	 REQUIRED
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
ListMetaData	TokenNameIdentifier	 List Meta Data
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
LIST	TokenNameIdentifier	 LIST
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
StructMetaData	TokenNameIdentifier	 Struct Meta Data
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
STRUCT	TokenNameIdentifier	 STRUCT
,	TokenNameCOMMA	
IndexExpression	TokenNameIdentifier	 Index Expression
.	TokenNameDOT	
class	TokenNameclass	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tmpMap	TokenNameIdentifier	 tmp Map
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
.	TokenNameDOT	
START_KEY	TokenNameIdentifier	 START  KEY
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
(	TokenNameLPAREN	
"start_key"	TokenNameStringLiteral	start_key
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TFieldRequirementType	TokenNameIdentifier	 T Field Requirement Type
.	TokenNameDOT	
REQUIRED	TokenNameIdentifier	 REQUIRED
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldValueMetaData	TokenNameIdentifier	 Field Value Meta Data
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
STRING	TokenNameIdentifier	 STRING
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tmpMap	TokenNameIdentifier	 tmp Map
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
.	TokenNameDOT	
COUNT	TokenNameIdentifier	 COUNT
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
(	TokenNameLPAREN	
"count"	TokenNameStringLiteral	count
,	TokenNameCOMMA	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TFieldRequirementType	TokenNameIdentifier	 T Field Requirement Type
.	TokenNameDOT	
REQUIRED	TokenNameIdentifier	 REQUIRED
,	TokenNameCOMMA	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldValueMetaData	TokenNameIdentifier	 Field Value Meta Data
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
I32	TokenNameIdentifier	 I32
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
metaDataMap	TokenNameIdentifier	 meta Data Map
=	TokenNameEQUAL	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
unmodifiableMap	TokenNameIdentifier	 unmodifiable Map
(	TokenNameLPAREN	
tmpMap	TokenNameIdentifier	 tmp Map
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
meta_data	TokenNameIdentifier	 meta data
.	TokenNameDOT	
FieldMetaData	TokenNameIdentifier	 Field Meta Data
.	TokenNameDOT	
addStructMetaDataMap	TokenNameIdentifier	 add Struct Meta Data Map
(	TokenNameLPAREN	
IndexClause	TokenNameIdentifier	 Index Clause
.	TokenNameDOT	
class	TokenNameclass	
,	TokenNameCOMMA	
metaDataMap	TokenNameIdentifier	 meta Data Map
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
=	TokenNameEQUAL	
100	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
(	TokenNameLPAREN	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
expressions	TokenNameIdentifier	 expressions
,	TokenNameCOMMA	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
start_key	TokenNameIdentifier	 start key
,	TokenNameCOMMA	
int	TokenNameint	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
expressions	TokenNameIdentifier	 expressions
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
start_key	TokenNameIdentifier	 start key
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
=	TokenNameEQUAL	
count	TokenNameIdentifier	 count
;	TokenNameSEMICOLON	
setCountIsSet	TokenNameIdentifier	 set Count Is Set
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Performs a deep copy on <i>other</i>. */	TokenNameCOMMENT_JAVADOC	 Performs a deep copy on <i>other</i>. 
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
(	TokenNameLPAREN	
IndexClause	TokenNameIdentifier	 Index Clause
other	TokenNameIdentifier	 other
)	TokenNameRPAREN	
{	TokenNameLBRACE	
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
.	TokenNameDOT	
clear	TokenNameIdentifier	 clear
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
.	TokenNameDOT	
or	TokenNameIdentifier	 or
(	TokenNameLPAREN	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
__this__expressions	TokenNameIdentifier	 this  expressions
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
IndexExpression	TokenNameIdentifier	 Index Expression
other_element	TokenNameIdentifier	 other element
:	TokenNameCOLON	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
{	TokenNameLBRACE	
__this__expressions	TokenNameIdentifier	 this  expressions
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
new	TokenNamenew	
IndexExpression	TokenNameIdentifier	 Index Expression
(	TokenNameLPAREN	
other_element	TokenNameIdentifier	 other element
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
__this__expressions	TokenNameIdentifier	 this  expressions
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBaseHelper	TokenNameIdentifier	 T Base Helper
.	TokenNameDOT	
copyBinary	TokenNameIdentifier	 copy Binary
(	TokenNameLPAREN	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
=	TokenNameEQUAL	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
count	TokenNameIdentifier	 count
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
deepCopy	TokenNameIdentifier	 deep Copy
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
new	TokenNamenew	
IndexClause	TokenNameIdentifier	 Index Clause
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
@	TokenNameAT	
Override	TokenNameIdentifier	 Override
public	TokenNamepublic	
void	TokenNamevoid	
clear	TokenNameIdentifier	 clear
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
=	TokenNameEQUAL	
100	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
int	TokenNameint	
getExpressionsSize	TokenNameIdentifier	 get Expressions Size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
?	TokenNameQUESTION	
0	TokenNameIntegerLiteral	
:	TokenNameCOLON	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Iterator	TokenNameIdentifier	 Iterator
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
getExpressionsIterator	TokenNameIdentifier	 get Expressions Iterator
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
?	TokenNameQUESTION	
null	TokenNamenull	
:	TokenNameCOLON	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
.	TokenNameDOT	
iterator	TokenNameIdentifier	 iterator
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
addToExpressions	TokenNameIdentifier	 add To Expressions
(	TokenNameLPAREN	
IndexExpression	TokenNameIdentifier	 Index Expression
elem	TokenNameIdentifier	 elem
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
elem	TokenNameIdentifier	 elem
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
getExpressions	TokenNameIdentifier	 get Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
setExpressions	TokenNameIdentifier	 set Expressions
(	TokenNameLPAREN	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
expressions	TokenNameIdentifier	 expressions
;	TokenNameSEMICOLON	
return	TokenNamereturn	
this	TokenNamethis	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
unsetExpressions	TokenNameIdentifier	 unset Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Returns true if field expressions is set (has been assigned a value) and false otherwise */	TokenNameCOMMENT_JAVADOC	 Returns true if field expressions is set (has been assigned a value) and false otherwise 
public	TokenNamepublic	
boolean	TokenNameboolean	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
setExpressionsIsSet	TokenNameIdentifier	 set Expressions Is Set
(	TokenNameLPAREN	
boolean	TokenNameboolean	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
public	TokenNamepublic	
byte	TokenNamebyte	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
getStart_key	TokenNameIdentifier	 get Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
setStart_key	TokenNameIdentifier	 set Start key
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBaseHelper	TokenNameIdentifier	 T Base Helper
.	TokenNameDOT	
rightSize	TokenNameIdentifier	 right Size
(	TokenNameLPAREN	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
start_key	TokenNameIdentifier	 start key
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
null	TokenNamenull	
:	TokenNameCOLON	
start_key	TokenNameIdentifier	 start key
.	TokenNameDOT	
array	TokenNameIdentifier	 array
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
bufferForStart_key	TokenNameIdentifier	 buffer For Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
start_key	TokenNameIdentifier	 start key
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
setStart_key	TokenNameIdentifier	 set Start key
(	TokenNameLPAREN	
byte	TokenNamebyte	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
{	TokenNameLBRACE	
setStart_key	TokenNameIdentifier	 set Start key
(	TokenNameLPAREN	
start_key	TokenNameIdentifier	 start key
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
(	TokenNameLPAREN	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
)	TokenNameRPAREN	
null	TokenNamenull	
:	TokenNameCOLON	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
.	TokenNameDOT	
wrap	TokenNameIdentifier	 wrap
(	TokenNameLPAREN	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
this	TokenNamethis	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
setStart_key	TokenNameIdentifier	 set Start key
(	TokenNameLPAREN	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
start_key	TokenNameIdentifier	 start key
;	TokenNameSEMICOLON	
return	TokenNamereturn	
this	TokenNamethis	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
unsetStart_key	TokenNameIdentifier	 unset Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Returns true if field start_key is set (has been assigned a value) and false otherwise */	TokenNameCOMMENT_JAVADOC	 Returns true if field start_key is set (has been assigned a value) and false otherwise 
public	TokenNamepublic	
boolean	TokenNameboolean	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
setStart_keyIsSet	TokenNameIdentifier	 set Start key Is Set
(	TokenNameLPAREN	
boolean	TokenNameboolean	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
public	TokenNamepublic	
int	TokenNameint	
getCount	TokenNameIdentifier	 get Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
IndexClause	TokenNameIdentifier	 Index Clause
setCount	TokenNameIdentifier	 set Count
(	TokenNameLPAREN	
int	TokenNameint	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
=	TokenNameEQUAL	
count	TokenNameIdentifier	 count
;	TokenNameSEMICOLON	
setCountIsSet	TokenNameIdentifier	 set Count Is Set
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
this	TokenNamethis	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
unsetCount	TokenNameIdentifier	 unset Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
.	TokenNameDOT	
clear	TokenNameIdentifier	 clear
(	TokenNameLPAREN	
__COUNT_ISSET_ID	TokenNameIdentifier	 COUNT  ISSET  ID
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Returns true if field count is set (has been assigned a value) and false otherwise */	TokenNameCOMMENT_JAVADOC	 Returns true if field count is set (has been assigned a value) and false otherwise 
public	TokenNamepublic	
boolean	TokenNameboolean	
isSetCount	TokenNameIdentifier	 is Set Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
.	TokenNameDOT	
get	TokenNameIdentifier	 get
(	TokenNameLPAREN	
__COUNT_ISSET_ID	TokenNameIdentifier	 COUNT  ISSET  ID
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
setCountIsSet	TokenNameIdentifier	 set Count Is Set
(	TokenNameLPAREN	
boolean	TokenNameboolean	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
{	TokenNameLBRACE	
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
.	TokenNameDOT	
set	TokenNameIdentifier	 set
(	TokenNameLPAREN	
__COUNT_ISSET_ID	TokenNameIdentifier	 COUNT  ISSET  ID
,	TokenNameCOMMA	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
setFieldValue	TokenNameIdentifier	 set Field Value
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
field	TokenNameIdentifier	 field
,	TokenNameCOMMA	
Object	TokenNameIdentifier	 Object
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
EXPRESSIONS	TokenNameIdentifier	 EXPRESSIONS
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
value	TokenNameIdentifier	 value
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
unsetExpressions	TokenNameIdentifier	 unset Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
setExpressions	TokenNameIdentifier	 set Expressions
(	TokenNameLPAREN	
(	TokenNameLPAREN	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
)	TokenNameRPAREN	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
START_KEY	TokenNameIdentifier	 START  KEY
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
value	TokenNameIdentifier	 value
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
unsetStart_key	TokenNameIdentifier	 unset Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
setStart_key	TokenNameIdentifier	 set Start key
(	TokenNameLPAREN	
(	TokenNameLPAREN	
ByteBuffer	TokenNameIdentifier	 Byte Buffer
)	TokenNameRPAREN	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
COUNT	TokenNameIdentifier	 COUNT
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
value	TokenNameIdentifier	 value
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
unsetCount	TokenNameIdentifier	 unset Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
setCount	TokenNameIdentifier	 set Count
(	TokenNameLPAREN	
(	TokenNameLPAREN	
Integer	TokenNameIdentifier	 Integer
)	TokenNameRPAREN	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getFieldValue	TokenNameIdentifier	 get Field Value
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
field	TokenNameIdentifier	 field
)	TokenNameRPAREN	
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
EXPRESSIONS	TokenNameIdentifier	 EXPRESSIONS
:	TokenNameCOLON	
return	TokenNamereturn	
getExpressions	TokenNameIdentifier	 get Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
case	TokenNamecase	
START_KEY	TokenNameIdentifier	 START  KEY
:	TokenNameCOLON	
return	TokenNamereturn	
getStart_key	TokenNameIdentifier	 get Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
case	TokenNamecase	
COUNT	TokenNameIdentifier	 COUNT
:	TokenNameCOLON	
return	TokenNamereturn	
Integer	TokenNameIdentifier	 Integer
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
getCount	TokenNameIdentifier	 get Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
IllegalStateException	TokenNameIdentifier	 Illegal State Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */	TokenNameCOMMENT_JAVADOC	 Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise 
public	TokenNamepublic	
boolean	TokenNameboolean	
isSet	TokenNameIdentifier	 is Set
(	TokenNameLPAREN	
_Fields	TokenNameIdentifier	 Fields
field	TokenNameIdentifier	 field
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
IllegalArgumentException	TokenNameIdentifier	 Illegal Argument Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
EXPRESSIONS	TokenNameIdentifier	 EXPRESSIONS
:	TokenNameCOLON	
return	TokenNamereturn	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
case	TokenNamecase	
START_KEY	TokenNameIdentifier	 START  KEY
:	TokenNameCOLON	
return	TokenNamereturn	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
case	TokenNamecase	
COUNT	TokenNameIdentifier	 COUNT
:	TokenNameCOLON	
return	TokenNamereturn	
isSetCount	TokenNameIdentifier	 is Set Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
IllegalStateException	TokenNameIdentifier	 Illegal State Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
@	TokenNameAT	
Override	TokenNameIdentifier	 Override
public	TokenNamepublic	
boolean	TokenNameboolean	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
Object	TokenNameIdentifier	 Object
that	TokenNameIdentifier	 that
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
that	TokenNameIdentifier	 that
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
that	TokenNameIdentifier	 that
instanceof	TokenNameinstanceof	
IndexClause	TokenNameIdentifier	 Index Clause
)	TokenNameRPAREN	
return	TokenNamereturn	
this	TokenNamethis	
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
(	TokenNameLPAREN	
IndexClause	TokenNameIdentifier	 Index Clause
)	TokenNameRPAREN	
that	TokenNameIdentifier	 that
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
boolean	TokenNameboolean	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
IndexClause	TokenNameIdentifier	 Index Clause
that	TokenNameIdentifier	 that
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
that	TokenNameIdentifier	 that
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
this_present_expressions	TokenNameIdentifier	 this present expressions
=	TokenNameEQUAL	
true	TokenNametrue	
&&	TokenNameAND_AND	
this	TokenNamethis	
.	TokenNameDOT	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
that_present_expressions	TokenNameIdentifier	 that present expressions
=	TokenNameEQUAL	
true	TokenNametrue	
&&	TokenNameAND_AND	
that	TokenNameIdentifier	 that
.	TokenNameDOT	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this_present_expressions	TokenNameIdentifier	 this present expressions
||	TokenNameOR_OR	
that_present_expressions	TokenNameIdentifier	 that present expressions
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
(	TokenNameLPAREN	
this_present_expressions	TokenNameIdentifier	 this present expressions
&&	TokenNameAND_AND	
that_present_expressions	TokenNameIdentifier	 that present expressions
)	TokenNameRPAREN	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
that	TokenNameIdentifier	 that
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
boolean	TokenNameboolean	
this_present_start_key	TokenNameIdentifier	 this present start key
=	TokenNameEQUAL	
true	TokenNametrue	
&&	TokenNameAND_AND	
this	TokenNamethis	
.	TokenNameDOT	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
that_present_start_key	TokenNameIdentifier	 that present start key
=	TokenNameEQUAL	
true	TokenNametrue	
&&	TokenNameAND_AND	
that	TokenNameIdentifier	 that
.	TokenNameDOT	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this_present_start_key	TokenNameIdentifier	 this present start key
||	TokenNameOR_OR	
that_present_start_key	TokenNameIdentifier	 that present start key
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
(	TokenNameLPAREN	
this_present_start_key	TokenNameIdentifier	 this present start key
&&	TokenNameAND_AND	
that_present_start_key	TokenNameIdentifier	 that present start key
)	TokenNameRPAREN	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
that	TokenNameIdentifier	 that
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
boolean	TokenNameboolean	
this_present_count	TokenNameIdentifier	 this present count
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
that_present_count	TokenNameIdentifier	 that present count
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this_present_count	TokenNameIdentifier	 this present count
||	TokenNameOR_OR	
that_present_count	TokenNameIdentifier	 that present count
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
(	TokenNameLPAREN	
this_present_count	TokenNameIdentifier	 this present count
&&	TokenNameAND_AND	
that_present_count	TokenNameIdentifier	 that present count
)	TokenNameRPAREN	
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
!=	TokenNameNOT_EQUAL	
that	TokenNameIdentifier	 that
.	TokenNameDOT	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
return	TokenNamereturn	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
return	TokenNamereturn	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
@	TokenNameAT	
Override	TokenNameIdentifier	 Override
public	TokenNamepublic	
int	TokenNameint	
hashCode	TokenNameIdentifier	 hash Code
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
HashCodeBuilder	TokenNameIdentifier	 Hash Code Builder
builder	TokenNameIdentifier	 builder
=	TokenNameEQUAL	
new	TokenNamenew	
HashCodeBuilder	TokenNameIdentifier	 Hash Code Builder
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
present_expressions	TokenNameIdentifier	 present expressions
=	TokenNameEQUAL	
true	TokenNametrue	
&&	TokenNameAND_AND	
(	TokenNameLPAREN	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
present_expressions	TokenNameIdentifier	 present expressions
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
present_expressions	TokenNameIdentifier	 present expressions
)	TokenNameRPAREN	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
present_start_key	TokenNameIdentifier	 present start key
=	TokenNameEQUAL	
true	TokenNametrue	
&&	TokenNameAND_AND	
(	TokenNameLPAREN	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
present_start_key	TokenNameIdentifier	 present start key
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
present_start_key	TokenNameIdentifier	 present start key
)	TokenNameRPAREN	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
present_count	TokenNameIdentifier	 present count
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
present_count	TokenNameIdentifier	 present count
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
present_count	TokenNameIdentifier	 present count
)	TokenNameRPAREN	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
builder	TokenNameIdentifier	 builder
.	TokenNameDOT	
toHashCode	TokenNameIdentifier	 to Hash Code
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
int	TokenNameint	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
IndexClause	TokenNameIdentifier	 Index Clause
other	TokenNameIdentifier	 other
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
getClass	TokenNameIdentifier	 get Class
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
getClass	TokenNameIdentifier	 get Class
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
getClass	TokenNameIdentifier	 get Class
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
getName	TokenNameIdentifier	 get Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
other	TokenNameIdentifier	 other
.	TokenNameDOT	
getClass	TokenNameIdentifier	 get Class
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
getName	TokenNameIdentifier	 get Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
int	TokenNameint	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
IndexClause	TokenNameIdentifier	 Index Clause
typedOther	TokenNameIdentifier	 typed Other
=	TokenNameEQUAL	
(	TokenNameLPAREN	
IndexClause	TokenNameIdentifier	 Index Clause
)	TokenNameRPAREN	
other	TokenNameIdentifier	 other
;	TokenNameSEMICOLON	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
Boolean	TokenNameIdentifier	 Boolean
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
typedOther	TokenNameIdentifier	 typed Other
.	TokenNameDOT	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
lastComparison	TokenNameIdentifier	 last Comparison
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
lastComparison	TokenNameIdentifier	 last Comparison
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
isSetExpressions	TokenNameIdentifier	 is Set Expressions
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBaseHelper	TokenNameIdentifier	 T Base Helper
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
,	TokenNameCOMMA	
typedOther	TokenNameIdentifier	 typed Other
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
lastComparison	TokenNameIdentifier	 last Comparison
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
lastComparison	TokenNameIdentifier	 last Comparison
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
Boolean	TokenNameIdentifier	 Boolean
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
typedOther	TokenNameIdentifier	 typed Other
.	TokenNameDOT	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
lastComparison	TokenNameIdentifier	 last Comparison
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
lastComparison	TokenNameIdentifier	 last Comparison
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
isSetStart_key	TokenNameIdentifier	 is Set Start key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBaseHelper	TokenNameIdentifier	 T Base Helper
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
,	TokenNameCOMMA	
typedOther	TokenNameIdentifier	 typed Other
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
lastComparison	TokenNameIdentifier	 last Comparison
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
lastComparison	TokenNameIdentifier	 last Comparison
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
Boolean	TokenNameIdentifier	 Boolean
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
isSetCount	TokenNameIdentifier	 is Set Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
typedOther	TokenNameIdentifier	 typed Other
.	TokenNameDOT	
isSetCount	TokenNameIdentifier	 is Set Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
lastComparison	TokenNameIdentifier	 last Comparison
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
lastComparison	TokenNameIdentifier	 last Comparison
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
isSetCount	TokenNameIdentifier	 is Set Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
lastComparison	TokenNameIdentifier	 last Comparison
=	TokenNameEQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBaseHelper	TokenNameIdentifier	 T Base Helper
.	TokenNameDOT	
compareTo	TokenNameIdentifier	 compare To
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
,	TokenNameCOMMA	
typedOther	TokenNameIdentifier	 typed Other
.	TokenNameDOT	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
lastComparison	TokenNameIdentifier	 last Comparison
!=	TokenNameNOT_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
lastComparison	TokenNameIdentifier	 last Comparison
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
_Fields	TokenNameIdentifier	 Fields
fieldForId	TokenNameIdentifier	 field For Id
(	TokenNameLPAREN	
int	TokenNameint	
fieldId	TokenNameIdentifier	 field Id
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
_Fields	TokenNameIdentifier	 Fields
.	TokenNameDOT	
findByThriftId	TokenNameIdentifier	 find By Thrift Id
(	TokenNameLPAREN	
fieldId	TokenNameIdentifier	 field Id
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
read	TokenNameIdentifier	 read
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocol	TokenNameIdentifier	 T Protocol
iprot	TokenNameIdentifier	 iprot
)	TokenNameRPAREN	
throws	TokenNamethrows	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TException	TokenNameIdentifier	 T Exception
{	TokenNameLBRACE	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TField	TokenNameIdentifier	 T Field
field	TokenNameIdentifier	 field
;	TokenNameSEMICOLON	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readStructBegin	TokenNameIdentifier	 read Struct Begin
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
field	TokenNameIdentifier	 field
=	TokenNameEQUAL	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readFieldBegin	TokenNameIdentifier	 read Field Begin
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
==	TokenNameEQUAL_EQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
STOP	TokenNameIdentifier	 STOP
)	TokenNameRPAREN	
{	TokenNameLBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
id	TokenNameIdentifier	 id
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// EXPRESSIONS 	TokenNameCOMMENT_LINE	EXPRESSIONS 
if	TokenNameif	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
==	TokenNameEQUAL_EQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
LIST	TokenNameIdentifier	 LIST
)	TokenNameRPAREN	
{	TokenNameLBRACE	
{	TokenNameLBRACE	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TList	TokenNameIdentifier	 T List
_list12	TokenNameIdentifier	 list12
=	TokenNameEQUAL	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readListBegin	TokenNameIdentifier	 read List Begin
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
IndexExpression	TokenNameIdentifier	 Index Expression
>	TokenNameGREATER	
(	TokenNameLPAREN	
_list12	TokenNameIdentifier	 list12
.	TokenNameDOT	
size	TokenNameIdentifier	 size
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
_i13	TokenNameIdentifier	 i13
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
_i13	TokenNameIdentifier	 i13
<	TokenNameLESS	
_list12	TokenNameIdentifier	 list12
.	TokenNameDOT	
size	TokenNameIdentifier	 size
;	TokenNameSEMICOLON	
++	TokenNamePLUS_PLUS	
_i13	TokenNameIdentifier	 i13
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IndexExpression	TokenNameIdentifier	 Index Expression
_elem14	TokenNameIdentifier	 elem14
;	TokenNameSEMICOLON	
// required 	TokenNameCOMMENT_LINE	required 
_elem14	TokenNameIdentifier	 elem14
=	TokenNameEQUAL	
new	TokenNamenew	
IndexExpression	TokenNameIdentifier	 Index Expression
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
_elem14	TokenNameIdentifier	 elem14
.	TokenNameDOT	
read	TokenNameIdentifier	 read
(	TokenNameLPAREN	
iprot	TokenNameIdentifier	 iprot
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
_elem14	TokenNameIdentifier	 elem14
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readListEnd	TokenNameIdentifier	 read List End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolUtil	TokenNameIdentifier	 T Protocol Util
.	TokenNameDOT	
skip	TokenNameIdentifier	 skip
(	TokenNameLPAREN	
iprot	TokenNameIdentifier	 iprot
,	TokenNameCOMMA	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// START_KEY 	TokenNameCOMMENT_LINE	START_KEY 
if	TokenNameif	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
==	TokenNameEQUAL_EQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
STRING	TokenNameIdentifier	 STRING
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
=	TokenNameEQUAL	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readBinary	TokenNameIdentifier	 read Binary
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolUtil	TokenNameIdentifier	 T Protocol Util
.	TokenNameDOT	
skip	TokenNameIdentifier	 skip
(	TokenNameLPAREN	
iprot	TokenNameIdentifier	 iprot
,	TokenNameCOMMA	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// COUNT 	TokenNameCOMMENT_LINE	COUNT 
if	TokenNameif	
(	TokenNameLPAREN	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
==	TokenNameEQUAL_EQUAL	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
I32	TokenNameIdentifier	 I32
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
=	TokenNameEQUAL	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readI32	TokenNameIdentifier	 read I32
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
setCountIsSet	TokenNameIdentifier	 set Count Is Set
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolUtil	TokenNameIdentifier	 T Protocol Util
.	TokenNameDOT	
skip	TokenNameIdentifier	 skip
(	TokenNameLPAREN	
iprot	TokenNameIdentifier	 iprot
,	TokenNameCOMMA	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolUtil	TokenNameIdentifier	 T Protocol Util
.	TokenNameDOT	
skip	TokenNameIdentifier	 skip
(	TokenNameLPAREN	
iprot	TokenNameIdentifier	 iprot
,	TokenNameCOMMA	
field	TokenNameIdentifier	 field
.	TokenNameDOT	
type	TokenNameIdentifier	 type
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readFieldEnd	TokenNameIdentifier	 read Field End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
iprot	TokenNameIdentifier	 iprot
.	TokenNameDOT	
readStructEnd	TokenNameIdentifier	 read Struct End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// check for required fields of primitive type, which can't be checked in the validate method 	TokenNameCOMMENT_LINE	check for required fields of primitive type, which can't be checked in the validate method 
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
isSetCount	TokenNameIdentifier	 is Set Count
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolException	TokenNameIdentifier	 T Protocol Exception
(	TokenNameLPAREN	
"Required field 'count' was not found in serialized data! Struct: "	TokenNameStringLiteral	Required field 'count' was not found in serialized data! Struct: 
+	TokenNamePLUS	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
validate	TokenNameIdentifier	 validate
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
write	TokenNameIdentifier	 write
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocol	TokenNameIdentifier	 T Protocol
oprot	TokenNameIdentifier	 oprot
)	TokenNameRPAREN	
throws	TokenNamethrows	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TException	TokenNameIdentifier	 T Exception
{	TokenNameLBRACE	
validate	TokenNameIdentifier	 validate
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeStructBegin	TokenNameIdentifier	 write Struct Begin
(	TokenNameLPAREN	
STRUCT_DESC	TokenNameIdentifier	 STRUCT  DESC
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldBegin	TokenNameIdentifier	 write Field Begin
(	TokenNameLPAREN	
EXPRESSIONS_FIELD_DESC	TokenNameIdentifier	 EXPRESSIONS  FIELD  DESC
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
{	TokenNameLBRACE	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeListBegin	TokenNameIdentifier	 write List Begin
(	TokenNameLPAREN	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TList	TokenNameIdentifier	 T List
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TType	TokenNameIdentifier	 T Type
.	TokenNameDOT	
STRUCT	TokenNameIdentifier	 STRUCT
,	TokenNameCOMMA	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
IndexExpression	TokenNameIdentifier	 Index Expression
_iter15	TokenNameIdentifier	 iter15
:	TokenNameCOLON	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
{	TokenNameLBRACE	
_iter15	TokenNameIdentifier	 iter15
.	TokenNameDOT	
write	TokenNameIdentifier	 write
(	TokenNameLPAREN	
oprot	TokenNameIdentifier	 oprot
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeListEnd	TokenNameIdentifier	 write List End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldEnd	TokenNameIdentifier	 write Field End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldBegin	TokenNameIdentifier	 write Field Begin
(	TokenNameLPAREN	
START_KEY_FIELD_DESC	TokenNameIdentifier	 START  KEY  FIELD  DESC
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeBinary	TokenNameIdentifier	 write Binary
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldEnd	TokenNameIdentifier	 write Field End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldBegin	TokenNameIdentifier	 write Field Begin
(	TokenNameLPAREN	
COUNT_FIELD_DESC	TokenNameIdentifier	 COUNT  FIELD  DESC
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeI32	TokenNameIdentifier	 write I32
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldEnd	TokenNameIdentifier	 write Field End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeFieldStop	TokenNameIdentifier	 write Field Stop
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
oprot	TokenNameIdentifier	 oprot
.	TokenNameDOT	
writeStructEnd	TokenNameIdentifier	 write Struct End
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
@	TokenNameAT	
Override	TokenNameIdentifier	 Override
public	TokenNamepublic	
String	TokenNameIdentifier	 String
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringBuilder	TokenNameIdentifier	 String Builder
sb	TokenNameIdentifier	 sb
=	TokenNameEQUAL	
new	TokenNamenew	
StringBuilder	TokenNameIdentifier	 String Builder
(	TokenNameLPAREN	
"IndexClause("	TokenNameStringLiteral	IndexClause(
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
first	TokenNameIdentifier	 first
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
"expressions:"	TokenNameStringLiteral	expressions:
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
"null"	TokenNameStringLiteral	null
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
expressions	TokenNameIdentifier	 expressions
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
first	TokenNameIdentifier	 first
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
first	TokenNameIdentifier	 first
)	TokenNameRPAREN	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
", "	TokenNameStringLiteral	, 
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
"start_key:"	TokenNameStringLiteral	start_key:
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
"null"	TokenNameStringLiteral	null
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TBaseHelper	TokenNameIdentifier	 T Base Helper
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
start_key	TokenNameIdentifier	 start key
,	TokenNameCOMMA	
sb	TokenNameIdentifier	 sb
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
first	TokenNameIdentifier	 first
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
first	TokenNameIdentifier	 first
)	TokenNameRPAREN	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
", "	TokenNameStringLiteral	, 
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
"count:"	TokenNameStringLiteral	count:
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
this	TokenNamethis	
.	TokenNameDOT	
count	TokenNameIdentifier	 count
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
first	TokenNameIdentifier	 first
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
append	TokenNameIdentifier	 append
(	TokenNameLPAREN	
")"	TokenNameStringLiteral	)
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
sb	TokenNameIdentifier	 sb
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
validate	TokenNameIdentifier	 validate
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TException	TokenNameIdentifier	 T Exception
{	TokenNameLBRACE	
// check for required fields 	TokenNameCOMMENT_LINE	check for required fields 
if	TokenNameif	
(	TokenNameLPAREN	
expressions	TokenNameIdentifier	 expressions
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolException	TokenNameIdentifier	 T Protocol Exception
(	TokenNameLPAREN	
"Required field 'expressions' was not present! Struct: "	TokenNameStringLiteral	Required field 'expressions' was not present! Struct: 
+	TokenNamePLUS	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
start_key	TokenNameIdentifier	 start key
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TProtocolException	TokenNameIdentifier	 T Protocol Exception
(	TokenNameLPAREN	
"Required field 'start_key' was not present! Struct: "	TokenNameStringLiteral	Required field 'start_key' was not present! Struct: 
+	TokenNamePLUS	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// alas, we cannot check 'count' because it's a primitive and you chose the non-beans generator. 	TokenNameCOMMENT_LINE	alas, we cannot check 'count' because it's a primitive and you chose the non-beans generator. 
}	TokenNameRBRACE	
private	TokenNameprivate	
void	TokenNamevoid	
writeObject	TokenNameIdentifier	 write Object
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
ObjectOutputStream	TokenNameIdentifier	 Object Output Stream
out	TokenNameIdentifier	 out
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
write	TokenNameIdentifier	 write
(	TokenNameLPAREN	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TCompactProtocol	TokenNameIdentifier	 T Compact Protocol
(	TokenNameLPAREN	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
transport	TokenNameIdentifier	 transport
.	TokenNameDOT	
TIOStreamTransport	TokenNameIdentifier	 TIO Stream Transport
(	TokenNameLPAREN	
out	TokenNameIdentifier	 out
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TException	TokenNameIdentifier	 T Exception
te	TokenNameIdentifier	 te
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
(	TokenNameLPAREN	
te	TokenNameIdentifier	 te
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
private	TokenNameprivate	
void	TokenNamevoid	
readObject	TokenNameIdentifier	 read Object
(	TokenNameLPAREN	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
ObjectInputStream	TokenNameIdentifier	 Object Input Stream
in	TokenNameIdentifier	 in
)	TokenNameRPAREN	
throws	TokenNamethrows	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
,	TokenNameCOMMA	
ClassNotFoundException	TokenNameIdentifier	 Class Not Found Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor. 	TokenNameCOMMENT_LINE	it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor. 
__isset_bit_vector	TokenNameIdentifier	 isset bit vector
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
read	TokenNameIdentifier	 read
(	TokenNameLPAREN	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
protocol	TokenNameIdentifier	 protocol
.	TokenNameDOT	
TCompactProtocol	TokenNameIdentifier	 T Compact Protocol
(	TokenNameLPAREN	
new	TokenNamenew	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
transport	TokenNameIdentifier	 transport
.	TokenNameDOT	
TIOStreamTransport	TokenNameIdentifier	 TIO Stream Transport
(	TokenNameLPAREN	
in	TokenNameIdentifier	 in
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
thrift	TokenNameIdentifier	 thrift
.	TokenNameDOT	
TException	TokenNameIdentifier	 T Exception
te	TokenNameIdentifier	 te
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
io	TokenNameIdentifier	 io
.	TokenNameDOT	
IOException	TokenNameIdentifier	 IO Exception
(	TokenNameLPAREN	
te	TokenNameIdentifier	 te
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
