/* Generated By:JavaCC: Do not edit this line. HTMLParserConstants.java */	TokenNameCOMMENT_BLOCK	 Generated By:JavaCC: Do not edit this line. HTMLParserConstants.java 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
lucene	TokenNameIdentifier	 lucene
.	TokenNameDOT	
benchmark	TokenNameIdentifier	 benchmark
.	TokenNameDOT	
byTask	TokenNameIdentifier	 by Task
.	TokenNameDOT	
feeds	TokenNameIdentifier	 feeds
.	TokenNameDOT	
demohtml	TokenNameIdentifier	 demohtml
;	TokenNameSEMICOLON	
/** * Token literal values and constants. * Generated by org.javacc.parser.OtherFilesGen#start() */	TokenNameCOMMENT_JAVADOC	 Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start() 
public	TokenNamepublic	
interface	TokenNameinterface	
HTMLParserConstants	TokenNameIdentifier	 HTML Parser Constants
{	TokenNameLBRACE	
/** End of File. */	TokenNameCOMMENT_JAVADOC	 End of File. 
int	TokenNameint	
EOF	TokenNameIdentifier	 EOF
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ScriptStart	TokenNameIdentifier	 Script Start
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
TagName	TokenNameIdentifier	 Tag Name
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
DeclName	TokenNameIdentifier	 Decl Name
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Comment1	TokenNameIdentifier	 Comment1
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Comment2	TokenNameIdentifier	 Comment2
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Word	TokenNameIdentifier	 Word
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
LET	TokenNameIdentifier	 LET
=	TokenNameEQUAL	
7	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
NUM	TokenNameIdentifier	 NUM
=	TokenNameEQUAL	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
HEX	TokenNameIdentifier	 HEX
=	TokenNameEQUAL	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Entity	TokenNameIdentifier	 Entity
=	TokenNameEQUAL	
10	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Space	TokenNameIdentifier	 Space
=	TokenNameEQUAL	
11	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
SP	TokenNameIdentifier	 SP
=	TokenNameEQUAL	
12	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Punct	TokenNameIdentifier	 Punct
=	TokenNameEQUAL	
13	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ScriptText	TokenNameIdentifier	 Script Text
=	TokenNameEQUAL	
14	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ScriptEnd	TokenNameIdentifier	 Script End
=	TokenNameEQUAL	
15	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ArgName	TokenNameIdentifier	 Arg Name
=	TokenNameEQUAL	
16	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ArgEquals	TokenNameIdentifier	 Arg Equals
=	TokenNameEQUAL	
17	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
TagEnd	TokenNameIdentifier	 Tag End
=	TokenNameEQUAL	
18	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ArgValue	TokenNameIdentifier	 Arg Value
=	TokenNameEQUAL	
19	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ArgQuote1	TokenNameIdentifier	 Arg Quote1
=	TokenNameEQUAL	
20	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
ArgQuote2	TokenNameIdentifier	 Arg Quote2
=	TokenNameEQUAL	
21	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Quote1Text	TokenNameIdentifier	 Quote1 Text
=	TokenNameEQUAL	
23	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CloseQuote1	TokenNameIdentifier	 Close Quote1
=	TokenNameEQUAL	
24	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
Quote2Text	TokenNameIdentifier	 Quote2 Text
=	TokenNameEQUAL	
25	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CloseQuote2	TokenNameIdentifier	 Close Quote2
=	TokenNameEQUAL	
26	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CommentText1	TokenNameIdentifier	 Comment Text1
=	TokenNameEQUAL	
27	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CommentEnd1	TokenNameIdentifier	 Comment End1
=	TokenNameEQUAL	
28	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CommentText2	TokenNameIdentifier	 Comment Text2
=	TokenNameEQUAL	
29	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CommentEnd2	TokenNameIdentifier	 Comment End2
=	TokenNameEQUAL	
30	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
DEFAULT	TokenNameIdentifier	 DEFAULT
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
WithinScript	TokenNameIdentifier	 Within Script
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
WithinTag	TokenNameIdentifier	 Within Tag
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
AfterEquals	TokenNameIdentifier	 After Equals
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
WithinQuote1	TokenNameIdentifier	 Within Quote1
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
WithinQuote2	TokenNameIdentifier	 Within Quote2
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
WithinComment1	TokenNameIdentifier	 Within Comment1
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
WithinComment2	TokenNameIdentifier	 Within Comment2
=	TokenNameEQUAL	
7	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Literal token values. */	TokenNameCOMMENT_JAVADOC	 Literal token values. 
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
tokenImage	TokenNameIdentifier	 token Image
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"<EOF>"	TokenNameStringLiteral	<EOF>
,	TokenNameCOMMA	
""<script""	TokenNameStringLiteral	"<script"
,	TokenNameCOMMA	
"<TagName>"	TokenNameStringLiteral	<TagName>
,	TokenNameCOMMA	
"<DeclName>"	TokenNameStringLiteral	<DeclName>
,	TokenNameCOMMA	
""<!--""	TokenNameStringLiteral	"<!--"
,	TokenNameCOMMA	
""<!""	TokenNameStringLiteral	"<!"
,	TokenNameCOMMA	
"<Word>"	TokenNameStringLiteral	<Word>
,	TokenNameCOMMA	
"<LET>"	TokenNameStringLiteral	<LET>
,	TokenNameCOMMA	
"<NUM>"	TokenNameStringLiteral	<NUM>
,	TokenNameCOMMA	
"<HEX>"	TokenNameStringLiteral	<HEX>
,	TokenNameCOMMA	
"<Entity>"	TokenNameStringLiteral	<Entity>
,	TokenNameCOMMA	
"<Space>"	TokenNameStringLiteral	<Space>
,	TokenNameCOMMA	
"<SP>"	TokenNameStringLiteral	<SP>
,	TokenNameCOMMA	
"<Punct>"	TokenNameStringLiteral	<Punct>
,	TokenNameCOMMA	
"<ScriptText>"	TokenNameStringLiteral	<ScriptText>
,	TokenNameCOMMA	
"<ScriptEnd>"	TokenNameStringLiteral	<ScriptEnd>
,	TokenNameCOMMA	
"<ArgName>"	TokenNameStringLiteral	<ArgName>
,	TokenNameCOMMA	
""=""	TokenNameStringLiteral	"="
,	TokenNameCOMMA	
"<TagEnd>"	TokenNameStringLiteral	<TagEnd>
,	TokenNameCOMMA	
"<ArgValue>"	TokenNameStringLiteral	<ArgValue>
,	TokenNameCOMMA	
""\'""	TokenNameStringLiteral	"\'"
,	TokenNameCOMMA	
""\"""	TokenNameStringLiteral	"\""
,	TokenNameCOMMA	
"<token of kind 22>"	TokenNameStringLiteral	<token of kind 22>
,	TokenNameCOMMA	
"<Quote1Text>"	TokenNameStringLiteral	<Quote1Text>
,	TokenNameCOMMA	
"<CloseQuote1>"	TokenNameStringLiteral	<CloseQuote1>
,	TokenNameCOMMA	
"<Quote2Text>"	TokenNameStringLiteral	<Quote2Text>
,	TokenNameCOMMA	
"<CloseQuote2>"	TokenNameStringLiteral	<CloseQuote2>
,	TokenNameCOMMA	
"<CommentText1>"	TokenNameStringLiteral	<CommentText1>
,	TokenNameCOMMA	
""-->""	TokenNameStringLiteral	"-->"
,	TokenNameCOMMA	
"<CommentText2>"	TokenNameStringLiteral	<CommentText2>
,	TokenNameCOMMA	
"">""	TokenNameStringLiteral	">"
,	TokenNameCOMMA	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
