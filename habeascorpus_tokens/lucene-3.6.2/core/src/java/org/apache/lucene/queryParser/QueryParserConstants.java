/* Generated By:JavaCC: Do not edit this line. QueryParserConstants.java */	TokenNameCOMMENT_BLOCK	 Generated By:JavaCC: Do not edit this line. QueryParserConstants.java 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
lucene	TokenNameIdentifier	 lucene
.	TokenNameDOT	
queryParser	TokenNameIdentifier	 query Parser
;	TokenNameSEMICOLON	
/** * Token literal values and constants. * Generated by org.javacc.parser.OtherFilesGen#start() */	TokenNameCOMMENT_JAVADOC	 Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start() 
public	TokenNamepublic	
interface	TokenNameinterface	
QueryParserConstants	TokenNameIdentifier	 Query Parser Constants
{	TokenNameLBRACE	
/** End of File. */	TokenNameCOMMENT_JAVADOC	 End of File. 
int	TokenNameint	
EOF	TokenNameIdentifier	 EOF
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
_NUM_CHAR	TokenNameIdentifier	 NUM  CHAR
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
_ESCAPED_CHAR	TokenNameIdentifier	 ESCAPED  CHAR
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
_TERM_START_CHAR	TokenNameIdentifier	 TERM  START  CHAR
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
_TERM_CHAR	TokenNameIdentifier	 TERM  CHAR
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
_WHITESPACE	TokenNameIdentifier	 WHITESPACE
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
_QUOTED_CHAR	TokenNameIdentifier	 QUOTED  CHAR
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
AND	TokenNameIdentifier	 AND
=	TokenNameEQUAL	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
OR	TokenNameIdentifier	 OR
=	TokenNameEQUAL	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
NOT	TokenNameIdentifier	 NOT
=	TokenNameEQUAL	
10	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
PLUS	TokenNameIdentifier	 PLUS
=	TokenNameEQUAL	
11	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
MINUS	TokenNameIdentifier	 MINUS
=	TokenNameEQUAL	
12	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
BAREOPER	TokenNameIdentifier	 BAREOPER
=	TokenNameEQUAL	
13	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
LPAREN	TokenNameIdentifier	 LPAREN
=	TokenNameEQUAL	
14	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RPAREN	TokenNameIdentifier	 RPAREN
=	TokenNameEQUAL	
15	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
COLON	TokenNameIdentifier	 COLON
=	TokenNameEQUAL	
16	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
STAR	TokenNameIdentifier	 STAR
=	TokenNameEQUAL	
17	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
CARAT	TokenNameIdentifier	 CARAT
=	TokenNameEQUAL	
18	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
QUOTED	TokenNameIdentifier	 QUOTED
=	TokenNameEQUAL	
19	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
TERM	TokenNameIdentifier	 TERM
=	TokenNameEQUAL	
20	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
FUZZY_SLOP	TokenNameIdentifier	 FUZZY  SLOP
=	TokenNameEQUAL	
21	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
PREFIXTERM	TokenNameIdentifier	 PREFIXTERM
=	TokenNameEQUAL	
22	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
WILDTERM	TokenNameIdentifier	 WILDTERM
=	TokenNameEQUAL	
23	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEIN_START	TokenNameIdentifier	 RANGEIN  START
=	TokenNameEQUAL	
24	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEEX_START	TokenNameIdentifier	 RANGEEX  START
=	TokenNameEQUAL	
25	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
NUMBER	TokenNameIdentifier	 NUMBER
=	TokenNameEQUAL	
26	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEIN_TO	TokenNameIdentifier	 RANGEIN  TO
=	TokenNameEQUAL	
27	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEIN_END	TokenNameIdentifier	 RANGEIN  END
=	TokenNameEQUAL	
28	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEIN_QUOTED	TokenNameIdentifier	 RANGEIN  QUOTED
=	TokenNameEQUAL	
29	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEIN_GOOP	TokenNameIdentifier	 RANGEIN  GOOP
=	TokenNameEQUAL	
30	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEEX_TO	TokenNameIdentifier	 RANGEEX  TO
=	TokenNameEQUAL	
31	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEEX_END	TokenNameIdentifier	 RANGEEX  END
=	TokenNameEQUAL	
32	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEEX_QUOTED	TokenNameIdentifier	 RANGEEX  QUOTED
=	TokenNameEQUAL	
33	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** RegularExpression Id. */	TokenNameCOMMENT_JAVADOC	 RegularExpression Id. 
int	TokenNameint	
RANGEEX_GOOP	TokenNameIdentifier	 RANGEEX  GOOP
=	TokenNameEQUAL	
34	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
Boost	TokenNameIdentifier	 Boost
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
RangeEx	TokenNameIdentifier	 Range Ex
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
RangeIn	TokenNameIdentifier	 Range In
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Lexical state. */	TokenNameCOMMENT_JAVADOC	 Lexical state. 
int	TokenNameint	
DEFAULT	TokenNameIdentifier	 DEFAULT
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
/** Literal token values. */	TokenNameCOMMENT_JAVADOC	 Literal token values. 
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
tokenImage	TokenNameIdentifier	 token Image
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"<EOF>"	TokenNameStringLiteral	<EOF>
,	TokenNameCOMMA	
"<_NUM_CHAR>"	TokenNameStringLiteral	<_NUM_CHAR>
,	TokenNameCOMMA	
"<_ESCAPED_CHAR>"	TokenNameStringLiteral	<_ESCAPED_CHAR>
,	TokenNameCOMMA	
"<_TERM_START_CHAR>"	TokenNameStringLiteral	<_TERM_START_CHAR>
,	TokenNameCOMMA	
"<_TERM_CHAR>"	TokenNameStringLiteral	<_TERM_CHAR>
,	TokenNameCOMMA	
"<_WHITESPACE>"	TokenNameStringLiteral	<_WHITESPACE>
,	TokenNameCOMMA	
"<_QUOTED_CHAR>"	TokenNameStringLiteral	<_QUOTED_CHAR>
,	TokenNameCOMMA	
"<token of kind 7>"	TokenNameStringLiteral	<token of kind 7>
,	TokenNameCOMMA	
"<AND>"	TokenNameStringLiteral	<AND>
,	TokenNameCOMMA	
"<OR>"	TokenNameStringLiteral	<OR>
,	TokenNameCOMMA	
"<NOT>"	TokenNameStringLiteral	<NOT>
,	TokenNameCOMMA	
""+""	TokenNameStringLiteral	"+"
,	TokenNameCOMMA	
""-""	TokenNameStringLiteral	"-"
,	TokenNameCOMMA	
"<BAREOPER>"	TokenNameStringLiteral	<BAREOPER>
,	TokenNameCOMMA	
""(""	TokenNameStringLiteral	"("
,	TokenNameCOMMA	
"")""	TokenNameStringLiteral	")"
,	TokenNameCOMMA	
"":""	TokenNameStringLiteral	":"
,	TokenNameCOMMA	
""*""	TokenNameStringLiteral	"*"
,	TokenNameCOMMA	
""^""	TokenNameStringLiteral	"^"
,	TokenNameCOMMA	
"<QUOTED>"	TokenNameStringLiteral	<QUOTED>
,	TokenNameCOMMA	
"<TERM>"	TokenNameStringLiteral	<TERM>
,	TokenNameCOMMA	
"<FUZZY_SLOP>"	TokenNameStringLiteral	<FUZZY_SLOP>
,	TokenNameCOMMA	
"<PREFIXTERM>"	TokenNameStringLiteral	<PREFIXTERM>
,	TokenNameCOMMA	
"<WILDTERM>"	TokenNameStringLiteral	<WILDTERM>
,	TokenNameCOMMA	
""[""	TokenNameStringLiteral	"["
,	TokenNameCOMMA	
""{""	TokenNameStringLiteral	"{"
,	TokenNameCOMMA	
"<NUMBER>"	TokenNameStringLiteral	<NUMBER>
,	TokenNameCOMMA	
""TO""	TokenNameStringLiteral	"TO"
,	TokenNameCOMMA	
""]""	TokenNameStringLiteral	"]"
,	TokenNameCOMMA	
"<RANGEIN_QUOTED>"	TokenNameStringLiteral	<RANGEIN_QUOTED>
,	TokenNameCOMMA	
"<RANGEIN_GOOP>"	TokenNameStringLiteral	<RANGEIN_GOOP>
,	TokenNameCOMMA	
""TO""	TokenNameStringLiteral	"TO"
,	TokenNameCOMMA	
""}""	TokenNameStringLiteral	"}"
,	TokenNameCOMMA	
"<RANGEEX_QUOTED>"	TokenNameStringLiteral	<RANGEEX_QUOTED>
,	TokenNameCOMMA	
"<RANGEEX_GOOP>"	TokenNameStringLiteral	<RANGEEX_GOOP>
,	TokenNameCOMMA	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
