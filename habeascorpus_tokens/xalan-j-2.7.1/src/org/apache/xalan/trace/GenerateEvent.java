/* * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */	TokenNameCOMMENT_BLOCK	 Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at * http://www.apache.org/licenses/LICENSE-2.0 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. 
/* * $Id: GenerateEvent.java 468644 2006-10-28 06:56:42Z minchau $ */	TokenNameCOMMENT_BLOCK	 $Id: GenerateEvent.java 468644 2006-10-28 06:56:42Z minchau $ 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
xalan	TokenNameIdentifier	 xalan
.	TokenNameDOT	
trace	TokenNameIdentifier	 trace
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
xalan	TokenNameIdentifier	 xalan
.	TokenNameDOT	
transformer	TokenNameIdentifier	 transformer
.	TokenNameDOT	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
xml	TokenNameIdentifier	 xml
.	TokenNameDOT	
sax	TokenNameIdentifier	 sax
.	TokenNameDOT	
Attributes	TokenNameIdentifier	 Attributes
;	TokenNameSEMICOLON	
/** * Event generated by the XSL processor after it generates a new node in the result tree. * This event responds to and is modeled on the SAX events that are sent to the * formatter listener FormatterToXXX)classes. * * @see org.apache.xml.utils.DOMBuilder * @see org.apache.xml.serializer.ToHTMLStream * @see org.apache.xml.serializer.ToTextStream * @see org.apache.xml.serializer.ToXMLStream * * @xsl.usage advanced */	TokenNameCOMMENT_JAVADOC	 Event generated by the XSL processor after it generates a new node in the result tree. This event responds to and is modeled on the SAX events that are sent to the formatter listener FormatterToXXX)classes. * @see org.apache.xml.utils.DOMBuilder @see org.apache.xml.serializer.ToHTMLStream @see org.apache.xml.serializer.ToTextStream @see org.apache.xml.serializer.ToXMLStream * @xsl.usage advanced 
public	TokenNamepublic	
class	TokenNameclass	
GenerateEvent	TokenNameIdentifier	 Generate Event
implements	TokenNameimplements	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
EventListener	TokenNameIdentifier	 Event Listener
{	TokenNameLBRACE	
/** * The XSLT Transformer, which either directly or indirectly contains most needed information. * * @see org.apache.xalan.transformer.TransformerImpl */	TokenNameCOMMENT_JAVADOC	 The XSLT Transformer, which either directly or indirectly contains most needed information. * @see org.apache.xalan.transformer.TransformerImpl 
public	TokenNamepublic	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
m_processor	TokenNameIdentifier	 m processor
;	TokenNameSEMICOLON	
/** * The type of SAX event that was generated, as enumerated in the EVENTTYPE_XXX constants below. */	TokenNameCOMMENT_JAVADOC	 The type of SAX event that was generated, as enumerated in the EVENTTYPE_XXX constants below. 
public	TokenNamepublic	
int	TokenNameint	
m_eventtype	TokenNameIdentifier	 m eventtype
;	TokenNameSEMICOLON	
/** * Character data from a character or cdata event. */	TokenNameCOMMENT_JAVADOC	 Character data from a character or cdata event. 
public	TokenNamepublic	
char	TokenNamechar	
m_characters	TokenNameIdentifier	 m characters
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
/** * The start position of the current data in m_characters. */	TokenNameCOMMENT_JAVADOC	 The start position of the current data in m_characters. 
public	TokenNamepublic	
int	TokenNameint	
m_start	TokenNameIdentifier	 m start
;	TokenNameSEMICOLON	
/** * The length of the current data in m_characters. */	TokenNameCOMMENT_JAVADOC	 The length of the current data in m_characters. 
public	TokenNamepublic	
int	TokenNameint	
m_length	TokenNameIdentifier	 m length
;	TokenNameSEMICOLON	
/** * The name of the element or PI. */	TokenNameCOMMENT_JAVADOC	 The name of the element or PI. 
public	TokenNamepublic	
String	TokenNameIdentifier	 String
m_name	TokenNameIdentifier	 m name
;	TokenNameSEMICOLON	
/** * The string data in the element (comments and PIs). */	TokenNameCOMMENT_JAVADOC	 The string data in the element (comments and PIs). 
public	TokenNamepublic	
String	TokenNameIdentifier	 String
m_data	TokenNameIdentifier	 m data
;	TokenNameSEMICOLON	
/** * The current attribute list. */	TokenNameCOMMENT_JAVADOC	 The current attribute list. 
public	TokenNamepublic	
Attributes	TokenNameIdentifier	 Attributes
m_atts	TokenNameIdentifier	 m atts
;	TokenNameSEMICOLON	
/** * Constructor for startDocument, endDocument events. * * @param processor The XSLT TransformerFactory instance. * @param eventType One of the EVENTTYPE_XXX constants. */	TokenNameCOMMENT_JAVADOC	 Constructor for startDocument, endDocument events. * @param processor The XSLT TransformerFactory instance. @param eventType One of the EVENTTYPE_XXX constants. 
public	TokenNamepublic	
GenerateEvent	TokenNameIdentifier	 Generate Event
(	TokenNameLPAREN	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
processor	TokenNameIdentifier	 processor
,	TokenNameCOMMA	
int	TokenNameint	
eventType	TokenNameIdentifier	 event Type
)	TokenNameRPAREN	
{	TokenNameLBRACE	
m_processor	TokenNameIdentifier	 m processor
=	TokenNameEQUAL	
processor	TokenNameIdentifier	 processor
;	TokenNameSEMICOLON	
m_eventtype	TokenNameIdentifier	 m eventtype
=	TokenNameEQUAL	
eventType	TokenNameIdentifier	 event Type
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Constructor for startElement, endElement events. * * @param processor The XSLT TransformerFactory Instance. * @param eventType One of the EVENTTYPE_XXX constants. * @param name The name of the element. * @param atts The SAX attribute list. */	TokenNameCOMMENT_JAVADOC	 Constructor for startElement, endElement events. * @param processor The XSLT TransformerFactory Instance. @param eventType One of the EVENTTYPE_XXX constants. @param name The name of the element. @param atts The SAX attribute list. 
public	TokenNamepublic	
GenerateEvent	TokenNameIdentifier	 Generate Event
(	TokenNameLPAREN	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
processor	TokenNameIdentifier	 processor
,	TokenNameCOMMA	
int	TokenNameint	
eventType	TokenNameIdentifier	 event Type
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
Attributes	TokenNameIdentifier	 Attributes
atts	TokenNameIdentifier	 atts
)	TokenNameRPAREN	
{	TokenNameLBRACE	
m_name	TokenNameIdentifier	 m name
=	TokenNameEQUAL	
name	TokenNameIdentifier	 name
;	TokenNameSEMICOLON	
m_atts	TokenNameIdentifier	 m atts
=	TokenNameEQUAL	
atts	TokenNameIdentifier	 atts
;	TokenNameSEMICOLON	
m_processor	TokenNameIdentifier	 m processor
=	TokenNameEQUAL	
processor	TokenNameIdentifier	 processor
;	TokenNameSEMICOLON	
m_eventtype	TokenNameIdentifier	 m eventtype
=	TokenNameEQUAL	
eventType	TokenNameIdentifier	 event Type
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Constructor for characters, cdate events. * * @param processor The XSLT TransformerFactory instance. * @param eventType One of the EVENTTYPE_XXX constants. * @param ch The char array from the SAX event. * @param start The start offset to be used in the char array. * @param length The end offset to be used in the chara array. */	TokenNameCOMMENT_JAVADOC	 Constructor for characters, cdate events. * @param processor The XSLT TransformerFactory instance. @param eventType One of the EVENTTYPE_XXX constants. @param ch The char array from the SAX event. @param start The start offset to be used in the char array. @param length The end offset to be used in the chara array. 
public	TokenNamepublic	
GenerateEvent	TokenNameIdentifier	 Generate Event
(	TokenNameLPAREN	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
processor	TokenNameIdentifier	 processor
,	TokenNameCOMMA	
int	TokenNameint	
eventType	TokenNameIdentifier	 event Type
,	TokenNameCOMMA	
char	TokenNamechar	
ch	TokenNameIdentifier	 ch
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
,	TokenNameCOMMA	
int	TokenNameint	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
int	TokenNameint	
length	TokenNameIdentifier	 length
)	TokenNameRPAREN	
{	TokenNameLBRACE	
m_characters	TokenNameIdentifier	 m characters
=	TokenNameEQUAL	
ch	TokenNameIdentifier	 ch
;	TokenNameSEMICOLON	
m_start	TokenNameIdentifier	 m start
=	TokenNameEQUAL	
start	TokenNameIdentifier	 start
;	TokenNameSEMICOLON	
m_length	TokenNameIdentifier	 m length
=	TokenNameEQUAL	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
m_processor	TokenNameIdentifier	 m processor
=	TokenNameEQUAL	
processor	TokenNameIdentifier	 processor
;	TokenNameSEMICOLON	
m_eventtype	TokenNameIdentifier	 m eventtype
=	TokenNameEQUAL	
eventType	TokenNameIdentifier	 event Type
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Constructor for processingInstruction events. * * @param processor The instance of the XSLT processor. * @param eventType One of the EVENTTYPE_XXX constants. * @param name The name of the processing instruction. * @param data The processing instruction data. */	TokenNameCOMMENT_JAVADOC	 Constructor for processingInstruction events. * @param processor The instance of the XSLT processor. @param eventType One of the EVENTTYPE_XXX constants. @param name The name of the processing instruction. @param data The processing instruction data. 
public	TokenNamepublic	
GenerateEvent	TokenNameIdentifier	 Generate Event
(	TokenNameLPAREN	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
processor	TokenNameIdentifier	 processor
,	TokenNameCOMMA	
int	TokenNameint	
eventType	TokenNameIdentifier	 event Type
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
data	TokenNameIdentifier	 data
)	TokenNameRPAREN	
{	TokenNameLBRACE	
m_name	TokenNameIdentifier	 m name
=	TokenNameEQUAL	
name	TokenNameIdentifier	 name
;	TokenNameSEMICOLON	
m_data	TokenNameIdentifier	 m data
=	TokenNameEQUAL	
data	TokenNameIdentifier	 data
;	TokenNameSEMICOLON	
m_processor	TokenNameIdentifier	 m processor
=	TokenNameEQUAL	
processor	TokenNameIdentifier	 processor
;	TokenNameSEMICOLON	
m_eventtype	TokenNameIdentifier	 m eventtype
=	TokenNameEQUAL	
eventType	TokenNameIdentifier	 event Type
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
/** * Constructor for comment and entity ref events. * * @param processor The XSLT processor instance. * @param eventType One of the EVENTTYPE_XXX constants. * @param data The comment or entity ref data. */	TokenNameCOMMENT_JAVADOC	 Constructor for comment and entity ref events. * @param processor The XSLT processor instance. @param eventType One of the EVENTTYPE_XXX constants. @param data The comment or entity ref data. 
public	TokenNamepublic	
GenerateEvent	TokenNameIdentifier	 Generate Event
(	TokenNameLPAREN	
TransformerImpl	TokenNameIdentifier	 Transformer Impl
processor	TokenNameIdentifier	 processor
,	TokenNameCOMMA	
int	TokenNameint	
eventType	TokenNameIdentifier	 event Type
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
data	TokenNameIdentifier	 data
)	TokenNameRPAREN	
{	TokenNameLBRACE	
m_data	TokenNameIdentifier	 m data
=	TokenNameEQUAL	
data	TokenNameIdentifier	 data
;	TokenNameSEMICOLON	
m_processor	TokenNameIdentifier	 m processor
=	TokenNameEQUAL	
processor	TokenNameIdentifier	 processor
;	TokenNameSEMICOLON	
m_eventtype	TokenNameIdentifier	 m eventtype
=	TokenNameEQUAL	
eventType	TokenNameIdentifier	 event Type
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
