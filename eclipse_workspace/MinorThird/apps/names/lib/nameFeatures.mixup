provide 'nameFeatures_v2';

//////////////////////////////////////////////////////////////////////////////
//
// second version of features for names
//
// version 1 was tuned for cspace data, version 2 is tuned for enron data
//
//////////////////////////////////////////////////////////////////////////////

// use the HeaderNameTagger class
require 'headerNames_v2', 'HeaderNameTaggerV2';

// part of the header section field
defTokenProp headerWord:t =top: ... [@headerSection] ... ;

// part of an email address
defTokenProp emailNameWord:t =top: ... [@emailNameSpan] ... ;

// part of the 'subject' field
defTokenProp subjectWord:t =top~ re '\nSubject:\s*([^\n]+)',1;

defSpanType contentSection =top: ... [L subjectWord:t+ R] ... || ... [@bodySection] ... ;

// begins a new sentence, maybe
//   A-Z[a-z]+ is a capitalized word
//   [AI]\s is one of the words "A" or "I"
defTokenProp startWord:t =contentSection~ re '[\.\!\?]  (([A-Z][a-z]+)|([AI]))',1;

// begins a new paragraph, probably
defTokenProp startWord:t =contentSection~ re '\n\n\s*(([A-Z][a-z]+)|([AI]))',1;

// signoff at end of message, maybe
defTokenProp signoff:t =contentSection~ re '\n\n\s*[\-]*\s*([\w ]+)s*[\-]*\s*\n*$',1;
//
//// dictionaries
defDict common = "commonWords.txt";
defDict first = "firstNames.txt","nicknames.txt";
defDict last = "lastNames.txt";
defDict roster = "rosterNames.txt";

// some properties to exploit
defTokenProp common:t =contentSection: ... [ai(common)]...;
defTokenProp punc:t =contentSection: ... [re('^\W$')]...;
defTokenProp first:t =contentSection: ... [ai(first)]...;
defTokenProp last:t =contentSection: ... [ai(last)]...;
defTokenProp name:t =contentSection: ... [first:t] ... || ... [last:t] ...;
defTokenProp rosterName:t =contentSection: ... [ai(roster)] ... ;
defTokenProp sureFirst:t =contentSection: ... [<first:t,!last:t,!common:t,!emailWord:t>] ... ;
defTokenProp sureLast:t =contentSection: ... [<last:t,!first:t,!common:t,!emailWord:t>] ... ;
defTokenProp sureName:t =contentSection: ... [<name:t,!common:t,!emailWord:t>] ... ;
defTokenProp sureName:t =contentSection: ... [<rosterName:t,!common:t,!emailWord:t>] ... ;
//
//// words for which the actual token values can be used as features
defTokenProp anchor:t =contentSection: ... [<common:t>] ... || ... [<punc:t>] ...;
//
// for testing
//defSpanType sureNameSpan =contentSection: ... [L <sureName:t,!emailWord:t>+ R] ... ;
//defSpanType rosterNameSpan =contentSection: ... [L <rosterName:t,!emailWord:t,!common:t>+ R] ... ;
//defSpanType headerNameSpan =contentSection: ... [L headerName:t+ R] ... ;


