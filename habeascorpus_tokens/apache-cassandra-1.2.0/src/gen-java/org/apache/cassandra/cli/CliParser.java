// $ANTLR 3.2 Sep 23, 2009 12:02:23 /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g 2013-01-24 15:45:43 	TokenNameCOMMENT_LINE	$ANTLR 3.2 Sep 23, 2009 12:02:23 /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g 2013-01-24 15:45:43 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
cli	TokenNameIdentifier	 cli
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
antlr	TokenNameIdentifier	 antlr
.	TokenNameDOT	
runtime	TokenNameIdentifier	 runtime
.	TokenNameDOT	
*	TokenNameMULTIPLY	
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Stack	TokenNameIdentifier	 Stack
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
List	TokenNameIdentifier	 List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
ArrayList	TokenNameIdentifier	 Array List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Map	TokenNameIdentifier	 Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
HashMap	TokenNameIdentifier	 Hash Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
antlr	TokenNameIdentifier	 antlr
.	TokenNameDOT	
runtime	TokenNameIdentifier	 runtime
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
.	TokenNameDOT	
*	TokenNameMULTIPLY	
;	TokenNameSEMICOLON	
/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements. See the NOTICE file * distributed with this work for additional information * regarding copyright ownership. The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License. You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */	TokenNameCOMMENT_JAVADOC	 Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at * http://www.apache.org/licenses/LICENSE-2.0 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. 
public	TokenNamepublic	
class	TokenNameclass	
CliParser	TokenNameIdentifier	 Cli Parser
extends	TokenNameextends	
Parser	TokenNameIdentifier	 Parser
{	TokenNameLBRACE	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
tokenNames	TokenNameIdentifier	 token Names
=	TokenNameEQUAL	
new	TokenNamenew	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
"<invalid>"	TokenNameStringLiteral	<invalid>
,	TokenNameCOMMA	
"<EOR>"	TokenNameStringLiteral	<EOR>
,	TokenNameCOMMA	
"<DOWN>"	TokenNameStringLiteral	<DOWN>
,	TokenNameCOMMA	
"<UP>"	TokenNameStringLiteral	<UP>
,	TokenNameCOMMA	
"NODE_CONNECT"	TokenNameStringLiteral	NODE_CONNECT
,	TokenNameCOMMA	
"NODE_DESCRIBE"	TokenNameStringLiteral	NODE_DESCRIBE
,	TokenNameCOMMA	
"NODE_DESCRIBE_CLUSTER"	TokenNameStringLiteral	NODE_DESCRIBE_CLUSTER
,	TokenNameCOMMA	
"NODE_USE_TABLE"	TokenNameStringLiteral	NODE_USE_TABLE
,	TokenNameCOMMA	
"NODE_TRACE_NEXT_QUERY"	TokenNameStringLiteral	NODE_TRACE_NEXT_QUERY
,	TokenNameCOMMA	
"NODE_SET_TRACE_PROBABILITY"	TokenNameStringLiteral	NODE_SET_TRACE_PROBABILITY
,	TokenNameCOMMA	
"NODE_EXIT"	TokenNameStringLiteral	NODE_EXIT
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
,	TokenNameCOMMA	
"NODE_NO_OP"	TokenNameStringLiteral	NODE_NO_OP
,	TokenNameCOMMA	
"NODE_SHOW_CLUSTER_NAME"	TokenNameStringLiteral	NODE_SHOW_CLUSTER_NAME
,	TokenNameCOMMA	
"NODE_SHOW_VERSION"	TokenNameStringLiteral	NODE_SHOW_VERSION
,	TokenNameCOMMA	
"NODE_SHOW_KEYSPACES"	TokenNameStringLiteral	NODE_SHOW_KEYSPACES
,	TokenNameCOMMA	
"NODE_SHOW_SCHEMA"	TokenNameStringLiteral	NODE_SHOW_SCHEMA
,	TokenNameCOMMA	
"NODE_THRIFT_GET"	TokenNameStringLiteral	NODE_THRIFT_GET
,	TokenNameCOMMA	
"NODE_THRIFT_GET_WITH_CONDITIONS"	TokenNameStringLiteral	NODE_THRIFT_GET_WITH_CONDITIONS
,	TokenNameCOMMA	
"NODE_THRIFT_SET"	TokenNameStringLiteral	NODE_THRIFT_SET
,	TokenNameCOMMA	
"NODE_THRIFT_COUNT"	TokenNameStringLiteral	NODE_THRIFT_COUNT
,	TokenNameCOMMA	
"NODE_THRIFT_DEL"	TokenNameStringLiteral	NODE_THRIFT_DEL
,	TokenNameCOMMA	
"NODE_THRIFT_INCR"	TokenNameStringLiteral	NODE_THRIFT_INCR
,	TokenNameCOMMA	
"NODE_THRIFT_DECR"	TokenNameStringLiteral	NODE_THRIFT_DECR
,	TokenNameCOMMA	
"NODE_ADD_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_ADD_COLUMN_FAMILY
,	TokenNameCOMMA	
"NODE_ADD_KEYSPACE"	TokenNameStringLiteral	NODE_ADD_KEYSPACE
,	TokenNameCOMMA	
"NODE_DEL_KEYSPACE"	TokenNameStringLiteral	NODE_DEL_KEYSPACE
,	TokenNameCOMMA	
"NODE_DEL_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_DEL_COLUMN_FAMILY
,	TokenNameCOMMA	
"NODE_UPDATE_KEYSPACE"	TokenNameStringLiteral	NODE_UPDATE_KEYSPACE
,	TokenNameCOMMA	
"NODE_UPDATE_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_UPDATE_COLUMN_FAMILY
,	TokenNameCOMMA	
"NODE_LIST"	TokenNameStringLiteral	NODE_LIST
,	TokenNameCOMMA	
"NODE_TRUNCATE"	TokenNameStringLiteral	NODE_TRUNCATE
,	TokenNameCOMMA	
"NODE_ASSUME"	TokenNameStringLiteral	NODE_ASSUME
,	TokenNameCOMMA	
"NODE_CONSISTENCY_LEVEL"	TokenNameStringLiteral	NODE_CONSISTENCY_LEVEL
,	TokenNameCOMMA	
"NODE_DROP_INDEX"	TokenNameStringLiteral	NODE_DROP_INDEX
,	TokenNameCOMMA	
"NODE_COLUMN_ACCESS"	TokenNameStringLiteral	NODE_COLUMN_ACCESS
,	TokenNameCOMMA	
"NODE_ID_LIST"	TokenNameStringLiteral	NODE_ID_LIST
,	TokenNameCOMMA	
"NODE_NEW_CF_ACCESS"	TokenNameStringLiteral	NODE_NEW_CF_ACCESS
,	TokenNameCOMMA	
"NODE_NEW_KEYSPACE_ACCESS"	TokenNameStringLiteral	NODE_NEW_KEYSPACE_ACCESS
,	TokenNameCOMMA	
"CONVERT_TO_TYPE"	TokenNameStringLiteral	CONVERT_TO_TYPE
,	TokenNameCOMMA	
"FUNCTION_CALL"	TokenNameStringLiteral	FUNCTION_CALL
,	TokenNameCOMMA	
"CONDITION"	TokenNameStringLiteral	CONDITION
,	TokenNameCOMMA	
"CONDITIONS"	TokenNameStringLiteral	CONDITIONS
,	TokenNameCOMMA	
"ARRAY"	TokenNameStringLiteral	ARRAY
,	TokenNameCOMMA	
"HASH"	TokenNameStringLiteral	HASH
,	TokenNameCOMMA	
"PAIR"	TokenNameStringLiteral	PAIR
,	TokenNameCOMMA	
"NODE_LIMIT"	TokenNameStringLiteral	NODE_LIMIT
,	TokenNameCOMMA	
"NODE_COLUMNS"	TokenNameStringLiteral	NODE_COLUMNS
,	TokenNameCOMMA	
"NODE_REVERSED"	TokenNameStringLiteral	NODE_REVERSED
,	TokenNameCOMMA	
"NODE_KEY_RANGE"	TokenNameStringLiteral	NODE_KEY_RANGE
,	TokenNameCOMMA	
"SEMICOLON"	TokenNameStringLiteral	SEMICOLON
,	TokenNameCOMMA	
"CONNECT"	TokenNameStringLiteral	CONNECT
,	TokenNameCOMMA	
"HELP"	TokenNameStringLiteral	HELP
,	TokenNameCOMMA	
"USE"	TokenNameStringLiteral	USE
,	TokenNameCOMMA	
"TRACE"	TokenNameStringLiteral	TRACE
,	TokenNameCOMMA	
"NEXT"	TokenNameStringLiteral	NEXT
,	TokenNameCOMMA	
"QUERY"	TokenNameStringLiteral	QUERY
,	TokenNameCOMMA	
"SET"	TokenNameStringLiteral	SET
,	TokenNameCOMMA	
"PROBABILITY"	TokenNameStringLiteral	PROBABILITY
,	TokenNameCOMMA	
"DESCRIBE"	TokenNameStringLiteral	DESCRIBE
,	TokenNameCOMMA	
"EXIT"	TokenNameStringLiteral	EXIT
,	TokenNameCOMMA	
"QUIT"	TokenNameStringLiteral	QUIT
,	TokenNameCOMMA	
"SHOW"	TokenNameStringLiteral	SHOW
,	TokenNameCOMMA	
"KEYSPACES"	TokenNameStringLiteral	KEYSPACES
,	TokenNameCOMMA	
"SCHEMA"	TokenNameStringLiteral	SCHEMA
,	TokenNameCOMMA	
"API_VERSION"	TokenNameStringLiteral	API_VERSION
,	TokenNameCOMMA	
"CREATE"	TokenNameStringLiteral	CREATE
,	TokenNameCOMMA	
"KEYSPACE"	TokenNameStringLiteral	KEYSPACE
,	TokenNameCOMMA	
"UPDATE"	TokenNameStringLiteral	UPDATE
,	TokenNameCOMMA	
"COLUMN"	TokenNameStringLiteral	COLUMN
,	TokenNameCOMMA	
"FAMILY"	TokenNameStringLiteral	FAMILY
,	TokenNameCOMMA	
"DROP"	TokenNameStringLiteral	DROP
,	TokenNameCOMMA	
"INDEX"	TokenNameStringLiteral	INDEX
,	TokenNameCOMMA	
"GET"	TokenNameStringLiteral	GET
,	TokenNameCOMMA	
"INCR"	TokenNameStringLiteral	INCR
,	TokenNameCOMMA	
"DECR"	TokenNameStringLiteral	DECR
,	TokenNameCOMMA	
"DEL"	TokenNameStringLiteral	DEL
,	TokenNameCOMMA	
"COUNT"	TokenNameStringLiteral	COUNT
,	TokenNameCOMMA	
"LIST"	TokenNameStringLiteral	LIST
,	TokenNameCOMMA	
"TRUNCATE"	TokenNameStringLiteral	TRUNCATE
,	TokenNameCOMMA	
"ASSUME"	TokenNameStringLiteral	ASSUME
,	TokenNameCOMMA	
"CONSISTENCYLEVEL"	TokenNameStringLiteral	CONSISTENCYLEVEL
,	TokenNameCOMMA	
"IntegerPositiveLiteral"	TokenNameStringLiteral	IntegerPositiveLiteral
,	TokenNameCOMMA	
"Identifier"	TokenNameStringLiteral	Identifier
,	TokenNameCOMMA	
"StringLiteral"	TokenNameStringLiteral	StringLiteral
,	TokenNameCOMMA	
"WITH"	TokenNameStringLiteral	WITH
,	TokenNameCOMMA	
"TTL"	TokenNameStringLiteral	TTL
,	TokenNameCOMMA	
"BY"	TokenNameStringLiteral	BY
,	TokenNameCOMMA	
"ON"	TokenNameStringLiteral	ON
,	TokenNameCOMMA	
"AND"	TokenNameStringLiteral	AND
,	TokenNameCOMMA	
"IntegerNegativeLiteral"	TokenNameStringLiteral	IntegerNegativeLiteral
,	TokenNameCOMMA	
"DoubleLiteral"	TokenNameStringLiteral	DoubleLiteral
,	TokenNameCOMMA	
"IP_ADDRESS"	TokenNameStringLiteral	IP_ADDRESS
,	TokenNameCOMMA	
"CONFIG"	TokenNameStringLiteral	CONFIG
,	TokenNameCOMMA	
"FILE"	TokenNameStringLiteral	FILE
,	TokenNameCOMMA	
"LIMIT"	TokenNameStringLiteral	LIMIT
,	TokenNameCOMMA	
"Letter"	TokenNameStringLiteral	Letter
,	TokenNameCOMMA	
"Digit"	TokenNameStringLiteral	Digit
,	TokenNameCOMMA	
"Alnum"	TokenNameStringLiteral	Alnum
,	TokenNameCOMMA	
"SingleStringCharacter"	TokenNameStringLiteral	SingleStringCharacter
,	TokenNameCOMMA	
"EscapeSequence"	TokenNameStringLiteral	EscapeSequence
,	TokenNameCOMMA	
"CharacterEscapeSequence"	TokenNameStringLiteral	CharacterEscapeSequence
,	TokenNameCOMMA	
"HexEscapeSequence"	TokenNameStringLiteral	HexEscapeSequence
,	TokenNameCOMMA	
"UnicodeEscapeSequence"	TokenNameStringLiteral	UnicodeEscapeSequence
,	TokenNameCOMMA	
"SingleEscapeCharacter"	TokenNameStringLiteral	SingleEscapeCharacter
,	TokenNameCOMMA	
"NonEscapeCharacter"	TokenNameStringLiteral	NonEscapeCharacter
,	TokenNameCOMMA	
"EscapeCharacter"	TokenNameStringLiteral	EscapeCharacter
,	TokenNameCOMMA	
"DecimalDigit"	TokenNameStringLiteral	DecimalDigit
,	TokenNameCOMMA	
"HexDigit"	TokenNameStringLiteral	HexDigit
,	TokenNameCOMMA	
"WS"	TokenNameStringLiteral	WS
,	TokenNameCOMMA	
"COMMENT"	TokenNameStringLiteral	COMMENT
,	TokenNameCOMMA	
"'/'"	TokenNameStringLiteral	'/'
,	TokenNameCOMMA	
"'CLUSTER'"	TokenNameStringLiteral	'CLUSTER'
,	TokenNameCOMMA	
"'CLUSTER NAME'"	TokenNameStringLiteral	'CLUSTER NAME'
,	TokenNameCOMMA	
"'?'"	TokenNameStringLiteral	'?'
,	TokenNameCOMMA	
"'AS'"	TokenNameStringLiteral	'AS'
,	TokenNameCOMMA	
"'WHERE'"	TokenNameStringLiteral	'WHERE'
,	TokenNameCOMMA	
"'='"	TokenNameStringLiteral	'='
,	TokenNameCOMMA	
"'>'"	TokenNameStringLiteral	'>'
,	TokenNameCOMMA	
"'<'"	TokenNameStringLiteral	'<'
,	TokenNameCOMMA	
"'>='"	TokenNameStringLiteral	'>='
,	TokenNameCOMMA	
"'<='"	TokenNameStringLiteral	'<='
,	TokenNameCOMMA	
"'.'"	TokenNameStringLiteral	'.'
,	TokenNameCOMMA	
"'['"	TokenNameStringLiteral	'['
,	TokenNameCOMMA	
"','"	TokenNameStringLiteral	','
,	TokenNameCOMMA	
"']'"	TokenNameStringLiteral	']'
,	TokenNameCOMMA	
"'{'"	TokenNameStringLiteral	'{'
,	TokenNameCOMMA	
"'}'"	TokenNameStringLiteral	'}'
,	TokenNameCOMMA	
"':'"	TokenNameStringLiteral	':'
,	TokenNameCOMMA	
"'COLUMNS'"	TokenNameStringLiteral	'COLUMNS'
,	TokenNameCOMMA	
"'REVERSED'"	TokenNameStringLiteral	'REVERSED'
,	TokenNameCOMMA	
"'('"	TokenNameStringLiteral	'('
,	TokenNameCOMMA	
"')'"	TokenNameStringLiteral	')'
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_DESCRIBE	TokenNameIdentifier	 NODE  DESCRIBE
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_GET_WITH_CONDITIONS	TokenNameIdentifier	 NODE  THRIFT  GET  WITH  CONDITIONS
=	TokenNameEQUAL	
18	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_TRACE_NEXT_QUERY	TokenNameIdentifier	 NODE  TRACE  NEXT  QUERY
=	TokenNameEQUAL	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
TTL	TokenNameIdentifier	 TTL
=	TokenNameEQUAL	
86	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
TRACE	TokenNameIdentifier	 TRACE
=	TokenNameEQUAL	
54	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_SHOW_KEYSPACES	TokenNameIdentifier	 NODE  SHOW  KEYSPACES
=	TokenNameEQUAL	
15	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CONDITION	TokenNameIdentifier	 CONDITION
=	TokenNameEQUAL	
41	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
COUNT	TokenNameIdentifier	 COUNT
=	TokenNameEQUAL	
77	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DecimalDigit	TokenNameIdentifier	 Decimal Digit
=	TokenNameEQUAL	
107	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
EOF	TokenNameIdentifier	 EOF
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Identifier	TokenNameIdentifier	 Identifier
=	TokenNameEQUAL	
83	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_UPDATE_COLUMN_FAMILY	TokenNameIdentifier	 NODE  UPDATE  COLUMN  FAMILY
=	TokenNameEQUAL	
29	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
SingleStringCharacter	TokenNameIdentifier	 Single String Character
=	TokenNameEQUAL	
99	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_USE_TABLE	TokenNameIdentifier	 NODE  USE  TABLE
=	TokenNameEQUAL	
7	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_DEL_KEYSPACE	TokenNameIdentifier	 NODE  DEL  KEYSPACE
=	TokenNameEQUAL	
26	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CREATE	TokenNameIdentifier	 CREATE
=	TokenNameEQUAL	
66	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_CONNECT	TokenNameIdentifier	 NODE  CONNECT
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
INCR	TokenNameIdentifier	 INCR
=	TokenNameEQUAL	
74	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CONNECT	TokenNameIdentifier	 CONNECT
=	TokenNameEQUAL	
51	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
SingleEscapeCharacter	TokenNameIdentifier	 Single Escape Character
=	TokenNameEQUAL	
104	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
FAMILY	TokenNameIdentifier	 FAMILY
=	TokenNameEQUAL	
70	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
GET	TokenNameIdentifier	 GET
=	TokenNameEQUAL	
73	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
COMMENT	TokenNameIdentifier	 COMMENT
=	TokenNameEQUAL	
110	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
SHOW	TokenNameIdentifier	 SHOW
=	TokenNameEQUAL	
62	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
ARRAY	TokenNameIdentifier	 ARRAY
=	TokenNameEQUAL	
43	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_ADD_KEYSPACE	TokenNameIdentifier	 NODE  ADD  KEYSPACE
=	TokenNameEQUAL	
25	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
EXIT	TokenNameIdentifier	 EXIT
=	TokenNameEQUAL	
60	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_COLUMNS	TokenNameIdentifier	 NODE  COLUMNS
=	TokenNameEQUAL	
47	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_DEL	TokenNameIdentifier	 NODE  THRIFT  DEL
=	TokenNameEQUAL	
21	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
=	TokenNameEQUAL	
90	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
ON	TokenNameIdentifier	 ON
=	TokenNameEQUAL	
88	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_DROP_INDEX	TokenNameIdentifier	 NODE  DROP  INDEX
=	TokenNameEQUAL	
34	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
SEMICOLON	TokenNameIdentifier	 SEMICOLON
=	TokenNameEQUAL	
50	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
KEYSPACES	TokenNameIdentifier	 KEYSPACES
=	TokenNameEQUAL	
63	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CONDITIONS	TokenNameIdentifier	 CONDITIONS
=	TokenNameEQUAL	
42	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
FILE	TokenNameIdentifier	 FILE
=	TokenNameEQUAL	
94	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
LIST	TokenNameIdentifier	 LIST
=	TokenNameEQUAL	
78	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_LIMIT	TokenNameIdentifier	 NODE  LIMIT
=	TokenNameEQUAL	
46	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_DESCRIBE_CLUSTER	TokenNameIdentifier	 NODE  DESCRIBE  CLUSTER
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
IP_ADDRESS	TokenNameIdentifier	 IP  ADDRESS
=	TokenNameEQUAL	
92	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__126	TokenNameIdentifier	 T  126
=	TokenNameEQUAL	
126	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_SET	TokenNameIdentifier	 NODE  THRIFT  SET
=	TokenNameEQUAL	
19	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_NO_OP	TokenNameIdentifier	 NODE  NO  OP
=	TokenNameEQUAL	
12	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__125	TokenNameIdentifier	 T  125
=	TokenNameEQUAL	
125	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__128	TokenNameIdentifier	 T  128
=	TokenNameEQUAL	
128	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__127	TokenNameIdentifier	 T  127
=	TokenNameEQUAL	
127	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_ID_LIST	TokenNameIdentifier	 NODE  ID  LIST
=	TokenNameEQUAL	
36	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
WS	TokenNameIdentifier	 WS
=	TokenNameEQUAL	
109	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__129	TokenNameIdentifier	 T  129
=	TokenNameEQUAL	
129	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
ASSUME	TokenNameIdentifier	 ASSUME
=	TokenNameEQUAL	
80	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_COUNT	TokenNameIdentifier	 NODE  THRIFT  COUNT
=	TokenNameEQUAL	
20	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DESCRIBE	TokenNameIdentifier	 DESCRIBE
=	TokenNameEQUAL	
59	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Alnum	TokenNameIdentifier	 Alnum
=	TokenNameEQUAL	
98	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
QUERY	TokenNameIdentifier	 QUERY
=	TokenNameEQUAL	
56	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CharacterEscapeSequence	TokenNameIdentifier	 Character Escape Sequence
=	TokenNameEQUAL	
101	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_SHOW_CLUSTER_NAME	TokenNameIdentifier	 NODE  SHOW  CLUSTER  NAME
=	TokenNameEQUAL	
13	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
USE	TokenNameIdentifier	 USE
=	TokenNameEQUAL	
53	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_DECR	TokenNameIdentifier	 NODE  THRIFT  DECR
=	TokenNameEQUAL	
23	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
FUNCTION_CALL	TokenNameIdentifier	 FUNCTION  CALL
=	TokenNameEQUAL	
40	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__130	TokenNameIdentifier	 T  130
=	TokenNameEQUAL	
130	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
EscapeSequence	TokenNameIdentifier	 Escape Sequence
=	TokenNameEQUAL	
100	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Letter	TokenNameIdentifier	 Letter
=	TokenNameEQUAL	
96	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DoubleLiteral	TokenNameIdentifier	 Double Literal
=	TokenNameEQUAL	
91	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__131	TokenNameIdentifier	 T  131
=	TokenNameEQUAL	
131	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__132	TokenNameIdentifier	 T  132
=	TokenNameEQUAL	
132	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
HELP	TokenNameIdentifier	 HELP
=	TokenNameEQUAL	
52	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
HexEscapeSequence	TokenNameIdentifier	 Hex Escape Sequence
=	TokenNameEQUAL	
102	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_EXIT	TokenNameIdentifier	 NODE  EXIT
=	TokenNameEQUAL	
10	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
LIMIT	TokenNameIdentifier	 LIMIT
=	TokenNameEQUAL	
95	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__118	TokenNameIdentifier	 T  118
=	TokenNameEQUAL	
118	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DEL	TokenNameIdentifier	 DEL
=	TokenNameEQUAL	
76	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__119	TokenNameIdentifier	 T  119
=	TokenNameEQUAL	
119	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__116	TokenNameIdentifier	 T  116
=	TokenNameEQUAL	
116	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__117	TokenNameIdentifier	 T  117
=	TokenNameEQUAL	
117	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__114	TokenNameIdentifier	 T  114
=	TokenNameEQUAL	
114	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_SHOW_SCHEMA	TokenNameIdentifier	 NODE  SHOW  SCHEMA
=	TokenNameEQUAL	
16	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__115	TokenNameIdentifier	 T  115
=	TokenNameEQUAL	
115	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__124	TokenNameIdentifier	 T  124
=	TokenNameEQUAL	
124	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__123	TokenNameIdentifier	 T  123
=	TokenNameEQUAL	
123	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_LIST	TokenNameIdentifier	 NODE  LIST
=	TokenNameEQUAL	
30	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
UPDATE	TokenNameIdentifier	 UPDATE
=	TokenNameEQUAL	
68	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__122	TokenNameIdentifier	 T  122
=	TokenNameEQUAL	
122	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_UPDATE_KEYSPACE	TokenNameIdentifier	 NODE  UPDATE  KEYSPACE
=	TokenNameEQUAL	
28	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__121	TokenNameIdentifier	 T  121
=	TokenNameEQUAL	
121	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__120	TokenNameIdentifier	 T  120
=	TokenNameEQUAL	
120	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
AND	TokenNameIdentifier	 AND
=	TokenNameEQUAL	
89	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_NEW_CF_ACCESS	TokenNameIdentifier	 NODE  NEW  CF  ACCESS
=	TokenNameEQUAL	
37	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CONSISTENCYLEVEL	TokenNameIdentifier	 CONSISTENCYLEVEL
=	TokenNameEQUAL	
81	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
HexDigit	TokenNameIdentifier	 Hex Digit
=	TokenNameEQUAL	
108	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
QUIT	TokenNameIdentifier	 QUIT
=	TokenNameEQUAL	
61	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
INDEX	TokenNameIdentifier	 INDEX
=	TokenNameEQUAL	
72	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_TRUNCATE	TokenNameIdentifier	 NODE  TRUNCATE
=	TokenNameEQUAL	
31	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_SHOW_VERSION	TokenNameIdentifier	 NODE  SHOW  VERSION
=	TokenNameEQUAL	
14	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_NEW_KEYSPACE_ACCESS	TokenNameIdentifier	 NODE  NEW  KEYSPACE  ACCESS
=	TokenNameEQUAL	
38	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_REVERSED	TokenNameIdentifier	 NODE  REVERSED
=	TokenNameEQUAL	
48	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
TRUNCATE	TokenNameIdentifier	 TRUNCATE
=	TokenNameEQUAL	
79	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
COLUMN	TokenNameIdentifier	 COLUMN
=	TokenNameEQUAL	
69	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__111	TokenNameIdentifier	 T  111
=	TokenNameEQUAL	
111	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__113	TokenNameIdentifier	 T  113
=	TokenNameEQUAL	
113	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
EscapeCharacter	TokenNameIdentifier	 Escape Character
=	TokenNameEQUAL	
106	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__112	TokenNameIdentifier	 T  112
=	TokenNameEQUAL	
112	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NEXT	TokenNameIdentifier	 NEXT
=	TokenNameEQUAL	
55	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
PAIR	TokenNameIdentifier	 PAIR
=	TokenNameEQUAL	
45	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_CONSISTENCY_LEVEL	TokenNameIdentifier	 NODE  CONSISTENCY  LEVEL
=	TokenNameEQUAL	
33	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
WITH	TokenNameIdentifier	 WITH
=	TokenNameEQUAL	
85	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
BY	TokenNameIdentifier	 BY
=	TokenNameEQUAL	
87	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
UnicodeEscapeSequence	TokenNameIdentifier	 Unicode Escape Sequence
=	TokenNameEQUAL	
103	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_SET_TRACE_PROBABILITY	TokenNameIdentifier	 NODE  SET  TRACE  PROBABILITY
=	TokenNameEQUAL	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
HASH	TokenNameIdentifier	 HASH
=	TokenNameEQUAL	
44	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
SET	TokenNameIdentifier	 SET
=	TokenNameEQUAL	
57	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Digit	TokenNameIdentifier	 Digit
=	TokenNameEQUAL	
97	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
API_VERSION	TokenNameIdentifier	 API  VERSION
=	TokenNameEQUAL	
65	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_ASSUME	TokenNameIdentifier	 NODE  ASSUME
=	TokenNameEQUAL	
32	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CONVERT_TO_TYPE	TokenNameIdentifier	 CONVERT  TO  TYPE
=	TokenNameEQUAL	
39	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_GET	TokenNameIdentifier	 NODE  THRIFT  GET
=	TokenNameEQUAL	
17	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_DEL_COLUMN_FAMILY	TokenNameIdentifier	 NODE  DEL  COLUMN  FAMILY
=	TokenNameEQUAL	
27	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_KEY_RANGE	TokenNameIdentifier	 NODE  KEY  RANGE
=	TokenNameEQUAL	
49	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
=	TokenNameEQUAL	
67	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
StringLiteral	TokenNameIdentifier	 String Literal
=	TokenNameEQUAL	
84	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
=	TokenNameEQUAL	
11	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
CONFIG	TokenNameIdentifier	 CONFIG
=	TokenNameEQUAL	
93	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
=	TokenNameEQUAL	
82	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
SCHEMA	TokenNameIdentifier	 SCHEMA
=	TokenNameEQUAL	
64	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DROP	TokenNameIdentifier	 DROP
=	TokenNameEQUAL	
71	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NonEscapeCharacter	TokenNameIdentifier	 Non Escape Character
=	TokenNameEQUAL	
105	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DECR	TokenNameIdentifier	 DECR
=	TokenNameEQUAL	
75	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_ADD_COLUMN_FAMILY	TokenNameIdentifier	 NODE  ADD  COLUMN  FAMILY
=	TokenNameEQUAL	
24	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
PROBABILITY	TokenNameIdentifier	 PROBABILITY
=	TokenNameEQUAL	
58	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_THRIFT_INCR	TokenNameIdentifier	 NODE  THRIFT  INCR
=	TokenNameEQUAL	
22	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
NODE_COLUMN_ACCESS	TokenNameIdentifier	 NODE  COLUMN  ACCESS
=	TokenNameEQUAL	
35	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
// delegates 	TokenNameCOMMENT_LINE	delegates 
// delegators 	TokenNameCOMMENT_LINE	delegators 
public	TokenNamepublic	
CliParser	TokenNameIdentifier	 Cli Parser
(	TokenNameLPAREN	
TokenStream	TokenNameIdentifier	 Token Stream
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
new	TokenNamenew	
RecognizerSharedState	TokenNameIdentifier	 Recognizer Shared State
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
CliParser	TokenNameIdentifier	 Cli Parser
(	TokenNameLPAREN	
TokenStream	TokenNameIdentifier	 Token Stream
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
RecognizerSharedState	TokenNameIdentifier	 Recognizer Shared State
state	TokenNameIdentifier	 state
)	TokenNameRPAREN	
{	TokenNameLBRACE	
super	TokenNamesuper	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
state	TokenNameIdentifier	 state
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
protected	TokenNameprotected	
TreeAdaptor	TokenNameIdentifier	 Tree Adaptor
adaptor	TokenNameIdentifier	 adaptor
=	TokenNameEQUAL	
new	TokenNamenew	
CommonTreeAdaptor	TokenNameIdentifier	 Common Tree Adaptor
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
void	TokenNamevoid	
setTreeAdaptor	TokenNameIdentifier	 set Tree Adaptor
(	TokenNameLPAREN	
TreeAdaptor	TokenNameIdentifier	 Tree Adaptor
adaptor	TokenNameIdentifier	 adaptor
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
adaptor	TokenNameIdentifier	 adaptor
=	TokenNameEQUAL	
adaptor	TokenNameIdentifier	 adaptor
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
TreeAdaptor	TokenNameIdentifier	 Tree Adaptor
getTreeAdaptor	TokenNameIdentifier	 get Tree Adaptor
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
adaptor	TokenNameIdentifier	 adaptor
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
getTokenNames	TokenNameIdentifier	 get Token Names
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
tokenNames	TokenNameIdentifier	 token Names
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getGrammarFileName	TokenNameIdentifier	 get Grammar File Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g"	TokenNameStringLiteral	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
String	TokenNameIdentifier	 String
errorMessage	TokenNameIdentifier	 error Message
=	TokenNameEQUAL	
"Syntax error at position "	TokenNameStringLiteral	Syntax error at position 
+	TokenNamePLUS	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
charPositionInLine	TokenNameIdentifier	 char Position In Line
+	TokenNamePLUS	
": "	TokenNameStringLiteral	: 
+	TokenNamePLUS	
this	TokenNamethis	
.	TokenNameDOT	
getErrorMessage	TokenNameIdentifier	 get Error Message
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
,	TokenNameCOMMA	
this	TokenNamethis	
.	TokenNameDOT	
getTokenNames	TokenNameIdentifier	 get Token Names
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
new	TokenNamenew	
RuntimeException	TokenNameIdentifier	 Runtime Exception
(	TokenNameLPAREN	
errorMessage	TokenNameIdentifier	 error Message
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
root_return	TokenNameIdentifier	 root return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "root" 	TokenNameCOMMENT_LINE	$ANTLR start "root" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:1: root : statement ( SEMICOLON )? EOF -> statement ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:1: root : statement ( SEMICOLON )? EOF -> statement ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
root_return	TokenNameIdentifier	 root return
root	TokenNameIdentifier	 root
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
root_return	TokenNameIdentifier	 root return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
root_return	TokenNameIdentifier	 root return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SEMICOLON2	TokenNameIdentifier	 SEMICOLO N2
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
EOF3	TokenNameIdentifier	 EO F3
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
statement_return	TokenNameIdentifier	 statement return
statement1	TokenNameIdentifier	 statement1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SEMICOLON2_tree	TokenNameIdentifier	 SEMICOLO N2 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
EOF3_tree	TokenNameIdentifier	 EO F3 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SEMICOLON	TokenNameIdentifier	 stream  SEMICOLON
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SEMICOLON"	TokenNameStringLiteral	token SEMICOLON
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_EOF	TokenNameIdentifier	 stream  EOF
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token EOF"	TokenNameStringLiteral	token EOF
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_statement	TokenNameIdentifier	 stream statement
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule statement"	TokenNameStringLiteral	rule statement
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:5: ( statement ( SEMICOLON )? EOF -> statement ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:5: ( statement ( SEMICOLON )? EOF -> statement ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:7: statement ( SEMICOLON )? EOF 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:7: statement ( SEMICOLON )? EOF 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_statement_in_root449	TokenNameIdentifier	 FOLLOW statement in root449
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
statement1	TokenNameIdentifier	 statement1
=	TokenNameEQUAL	
statement	TokenNameIdentifier	 statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_statement	TokenNameIdentifier	 stream statement
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
statement1	TokenNameIdentifier	 statement1
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:17: ( SEMICOLON )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:135:17: ( SEMICOLON )? 
int	TokenNameint	
alt1	TokenNameIdentifier	 alt1
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA1_0	TokenNameIdentifier	 L A1 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA1_0	TokenNameIdentifier	 L A1 0
==	TokenNameEQUAL_EQUAL	
SEMICOLON	TokenNameIdentifier	 SEMICOLON
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt1	TokenNameIdentifier	 alt1
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt1	TokenNameIdentifier	 alt1
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: SEMICOLON 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: SEMICOLON 
{	TokenNameLBRACE	
SEMICOLON2	TokenNameIdentifier	 SEMICOLO N2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SEMICOLON	TokenNameIdentifier	 SEMICOLON
,	TokenNameCOMMA	
FOLLOW_SEMICOLON_in_root451	TokenNameIdentifier	 FOLLOW  SEMICOLON in root451
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SEMICOLON	TokenNameIdentifier	 stream  SEMICOLON
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SEMICOLON2	TokenNameIdentifier	 SEMICOLO N2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
EOF3	TokenNameIdentifier	 EO F3
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
EOF	TokenNameIdentifier	 EOF
,	TokenNameCOMMA	
FOLLOW_EOF_in_root454	TokenNameIdentifier	 FOLLOW  EOF in root454
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_EOF	TokenNameIdentifier	 stream  EOF
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
EOF3	TokenNameIdentifier	 EO F3
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: statement 	TokenNameCOMMENT_LINE	elements: statement 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 135:32: -> statement 	TokenNameCOMMENT_LINE	135:32: -> statement 
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
stream_statement	TokenNameIdentifier	 stream statement
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "root" 	TokenNameCOMMENT_LINE	$ANTLR end "root" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
statement_return	TokenNameIdentifier	 statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "statement" 	TokenNameCOMMENT_LINE	$ANTLR start "statement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:137:1: statement : ( connectStatement | exitStatement | countStatement | describeTable | describeCluster | addKeyspace | addColumnFamily | updateKeyspace | updateColumnFamily | delColumnFamily | delKeyspace | useKeyspace | traceNextQuery | setTraceProbability | delStatement | getStatement | helpStatement | setStatement | incrStatement | showStatement | listStatement | truncateStatement | assumeStatement | consistencyLevelStatement | dropIndex | -> ^( NODE_NO_OP ) ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:137:1: statement : ( connectStatement | exitStatement | countStatement | describeTable | describeCluster | addKeyspace | addColumnFamily | updateKeyspace | updateColumnFamily | delColumnFamily | delKeyspace | useKeyspace | traceNextQuery | setTraceProbability | delStatement | getStatement | helpStatement | setStatement | incrStatement | showStatement | listStatement | truncateStatement | assumeStatement | consistencyLevelStatement | dropIndex | -> ^( NODE_NO_OP ) ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
statement_return	TokenNameIdentifier	 statement return
statement	TokenNameIdentifier	 statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
statement_return	TokenNameIdentifier	 statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
statement_return	TokenNameIdentifier	 statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
connectStatement_return	TokenNameIdentifier	 connect Statement return
connectStatement4	TokenNameIdentifier	 connect Statement4
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
exitStatement_return	TokenNameIdentifier	 exit Statement return
exitStatement5	TokenNameIdentifier	 exit Statement5
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
countStatement_return	TokenNameIdentifier	 count Statement return
countStatement6	TokenNameIdentifier	 count Statement6
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeTable_return	TokenNameIdentifier	 describe Table return
describeTable7	TokenNameIdentifier	 describe Table7
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeCluster_return	TokenNameIdentifier	 describe Cluster return
describeCluster8	TokenNameIdentifier	 describe Cluster8
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addKeyspace_return	TokenNameIdentifier	 add Keyspace return
addKeyspace9	TokenNameIdentifier	 add Keyspace9
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addColumnFamily_return	TokenNameIdentifier	 add Column Family return
addColumnFamily10	TokenNameIdentifier	 add Column Family10
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateKeyspace_return	TokenNameIdentifier	 update Keyspace return
updateKeyspace11	TokenNameIdentifier	 update Keyspace11
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateColumnFamily_return	TokenNameIdentifier	 update Column Family return
updateColumnFamily12	TokenNameIdentifier	 update Column Family12
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delColumnFamily_return	TokenNameIdentifier	 del Column Family return
delColumnFamily13	TokenNameIdentifier	 del Column Family13
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delKeyspace_return	TokenNameIdentifier	 del Keyspace return
delKeyspace14	TokenNameIdentifier	 del Keyspace14
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
useKeyspace_return	TokenNameIdentifier	 use Keyspace return
useKeyspace15	TokenNameIdentifier	 use Keyspace15
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceNextQuery_return	TokenNameIdentifier	 trace Next Query return
traceNextQuery16	TokenNameIdentifier	 trace Next Query16
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setTraceProbability_return	TokenNameIdentifier	 set Trace Probability return
setTraceProbability17	TokenNameIdentifier	 set Trace Probability17
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delStatement_return	TokenNameIdentifier	 del Statement return
delStatement18	TokenNameIdentifier	 del Statement18
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getStatement_return	TokenNameIdentifier	 get Statement return
getStatement19	TokenNameIdentifier	 get Statement19
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
helpStatement_return	TokenNameIdentifier	 help Statement return
helpStatement20	TokenNameIdentifier	 help Statement20
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setStatement_return	TokenNameIdentifier	 set Statement return
setStatement21	TokenNameIdentifier	 set Statement21
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrStatement_return	TokenNameIdentifier	 incr Statement return
incrStatement22	TokenNameIdentifier	 incr Statement22
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showStatement_return	TokenNameIdentifier	 show Statement return
showStatement23	TokenNameIdentifier	 show Statement23
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
listStatement_return	TokenNameIdentifier	 list Statement return
listStatement24	TokenNameIdentifier	 list Statement24
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
truncateStatement_return	TokenNameIdentifier	 truncate Statement return
truncateStatement25	TokenNameIdentifier	 truncate Statement25
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
assumeStatement_return	TokenNameIdentifier	 assume Statement return
assumeStatement26	TokenNameIdentifier	 assume Statement26
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
consistencyLevelStatement_return	TokenNameIdentifier	 consistency Level Statement return
consistencyLevelStatement27	TokenNameIdentifier	 consistency Level Statement27
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
dropIndex_return	TokenNameIdentifier	 drop Index return
dropIndex28	TokenNameIdentifier	 drop Index28
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:138:5: ( connectStatement | exitStatement | countStatement | describeTable | describeCluster | addKeyspace | addColumnFamily | updateKeyspace | updateColumnFamily | delColumnFamily | delKeyspace | useKeyspace | traceNextQuery | setTraceProbability | delStatement | getStatement | helpStatement | setStatement | incrStatement | showStatement | listStatement | truncateStatement | assumeStatement | consistencyLevelStatement | dropIndex | -> ^( NODE_NO_OP ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:138:5: ( connectStatement | exitStatement | countStatement | describeTable | describeCluster | addKeyspace | addColumnFamily | updateKeyspace | updateColumnFamily | delColumnFamily | delKeyspace | useKeyspace | traceNextQuery | setTraceProbability | delStatement | getStatement | helpStatement | setStatement | incrStatement | showStatement | listStatement | truncateStatement | assumeStatement | consistencyLevelStatement | dropIndex | -> ^( NODE_NO_OP ) ) 
int	TokenNameint	
alt2	TokenNameIdentifier	 alt2
=	TokenNameEQUAL	
26	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt2	TokenNameIdentifier	 alt2
=	TokenNameEQUAL	
dfa2	TokenNameIdentifier	 dfa2
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt2	TokenNameIdentifier	 alt2
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:138:7: connectStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:138:7: connectStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_connectStatement_in_statement470	TokenNameIdentifier	 FOLLOW connect Statement in statement470
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
connectStatement4	TokenNameIdentifier	 connect Statement4
=	TokenNameEQUAL	
connectStatement	TokenNameIdentifier	 connect Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
connectStatement4	TokenNameIdentifier	 connect Statement4
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:139:7: exitStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:139:7: exitStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_exitStatement_in_statement478	TokenNameIdentifier	 FOLLOW exit Statement in statement478
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
exitStatement5	TokenNameIdentifier	 exit Statement5
=	TokenNameEQUAL	
exitStatement	TokenNameIdentifier	 exit Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
exitStatement5	TokenNameIdentifier	 exit Statement5
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:140:7: countStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:140:7: countStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_countStatement_in_statement486	TokenNameIdentifier	 FOLLOW count Statement in statement486
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
countStatement6	TokenNameIdentifier	 count Statement6
=	TokenNameEQUAL	
countStatement	TokenNameIdentifier	 count Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
countStatement6	TokenNameIdentifier	 count Statement6
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:141:7: describeTable 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:141:7: describeTable 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_describeTable_in_statement494	TokenNameIdentifier	 FOLLOW describe Table in statement494
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
describeTable7	TokenNameIdentifier	 describe Table7
=	TokenNameEQUAL	
describeTable	TokenNameIdentifier	 describe Table
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
describeTable7	TokenNameIdentifier	 describe Table7
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:142:7: describeCluster 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:142:7: describeCluster 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_describeCluster_in_statement502	TokenNameIdentifier	 FOLLOW describe Cluster in statement502
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
describeCluster8	TokenNameIdentifier	 describe Cluster8
=	TokenNameEQUAL	
describeCluster	TokenNameIdentifier	 describe Cluster
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
describeCluster8	TokenNameIdentifier	 describe Cluster8
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
6	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:143:7: addKeyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:143:7: addKeyspace 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_addKeyspace_in_statement510	TokenNameIdentifier	 FOLLOW add Keyspace in statement510
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
addKeyspace9	TokenNameIdentifier	 add Keyspace9
=	TokenNameEQUAL	
addKeyspace	TokenNameIdentifier	 add Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
addKeyspace9	TokenNameIdentifier	 add Keyspace9
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
7	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:144:7: addColumnFamily 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:144:7: addColumnFamily 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_addColumnFamily_in_statement518	TokenNameIdentifier	 FOLLOW add Column Family in statement518
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
addColumnFamily10	TokenNameIdentifier	 add Column Family10
=	TokenNameEQUAL	
addColumnFamily	TokenNameIdentifier	 add Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
addColumnFamily10	TokenNameIdentifier	 add Column Family10
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
8	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:145:7: updateKeyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:145:7: updateKeyspace 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_updateKeyspace_in_statement526	TokenNameIdentifier	 FOLLOW update Keyspace in statement526
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
updateKeyspace11	TokenNameIdentifier	 update Keyspace11
=	TokenNameEQUAL	
updateKeyspace	TokenNameIdentifier	 update Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
updateKeyspace11	TokenNameIdentifier	 update Keyspace11
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
9	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:146:7: updateColumnFamily 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:146:7: updateColumnFamily 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_updateColumnFamily_in_statement534	TokenNameIdentifier	 FOLLOW update Column Family in statement534
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
updateColumnFamily12	TokenNameIdentifier	 update Column Family12
=	TokenNameEQUAL	
updateColumnFamily	TokenNameIdentifier	 update Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
updateColumnFamily12	TokenNameIdentifier	 update Column Family12
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
10	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:147:7: delColumnFamily 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:147:7: delColumnFamily 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_delColumnFamily_in_statement542	TokenNameIdentifier	 FOLLOW del Column Family in statement542
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
delColumnFamily13	TokenNameIdentifier	 del Column Family13
=	TokenNameEQUAL	
delColumnFamily	TokenNameIdentifier	 del Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
delColumnFamily13	TokenNameIdentifier	 del Column Family13
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
11	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:148:7: delKeyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:148:7: delKeyspace 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_delKeyspace_in_statement550	TokenNameIdentifier	 FOLLOW del Keyspace in statement550
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
delKeyspace14	TokenNameIdentifier	 del Keyspace14
=	TokenNameEQUAL	
delKeyspace	TokenNameIdentifier	 del Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
delKeyspace14	TokenNameIdentifier	 del Keyspace14
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
12	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:149:7: useKeyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:149:7: useKeyspace 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_useKeyspace_in_statement558	TokenNameIdentifier	 FOLLOW use Keyspace in statement558
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
useKeyspace15	TokenNameIdentifier	 use Keyspace15
=	TokenNameEQUAL	
useKeyspace	TokenNameIdentifier	 use Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
useKeyspace15	TokenNameIdentifier	 use Keyspace15
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
13	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:150:7: traceNextQuery 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:150:7: traceNextQuery 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_traceNextQuery_in_statement566	TokenNameIdentifier	 FOLLOW trace Next Query in statement566
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
traceNextQuery16	TokenNameIdentifier	 trace Next Query16
=	TokenNameEQUAL	
traceNextQuery	TokenNameIdentifier	 trace Next Query
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
traceNextQuery16	TokenNameIdentifier	 trace Next Query16
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
14	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:151:7: setTraceProbability 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:151:7: setTraceProbability 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_setTraceProbability_in_statement574	TokenNameIdentifier	 FOLLOW set Trace Probability in statement574
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
setTraceProbability17	TokenNameIdentifier	 set Trace Probability17
=	TokenNameEQUAL	
setTraceProbability	TokenNameIdentifier	 set Trace Probability
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
setTraceProbability17	TokenNameIdentifier	 set Trace Probability17
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
15	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:152:7: delStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:152:7: delStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_delStatement_in_statement582	TokenNameIdentifier	 FOLLOW del Statement in statement582
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
delStatement18	TokenNameIdentifier	 del Statement18
=	TokenNameEQUAL	
delStatement	TokenNameIdentifier	 del Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
delStatement18	TokenNameIdentifier	 del Statement18
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
16	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:153:7: getStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:153:7: getStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_getStatement_in_statement590	TokenNameIdentifier	 FOLLOW get Statement in statement590
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
getStatement19	TokenNameIdentifier	 get Statement19
=	TokenNameEQUAL	
getStatement	TokenNameIdentifier	 get Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
getStatement19	TokenNameIdentifier	 get Statement19
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
17	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:154:7: helpStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:154:7: helpStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_helpStatement_in_statement598	TokenNameIdentifier	 FOLLOW help Statement in statement598
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
helpStatement20	TokenNameIdentifier	 help Statement20
=	TokenNameEQUAL	
helpStatement	TokenNameIdentifier	 help Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
helpStatement20	TokenNameIdentifier	 help Statement20
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
18	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:155:7: setStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:155:7: setStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_setStatement_in_statement606	TokenNameIdentifier	 FOLLOW set Statement in statement606
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
setStatement21	TokenNameIdentifier	 set Statement21
=	TokenNameEQUAL	
setStatement	TokenNameIdentifier	 set Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
setStatement21	TokenNameIdentifier	 set Statement21
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
19	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:156:7: incrStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:156:7: incrStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_incrStatement_in_statement614	TokenNameIdentifier	 FOLLOW incr Statement in statement614
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
incrStatement22	TokenNameIdentifier	 incr Statement22
=	TokenNameEQUAL	
incrStatement	TokenNameIdentifier	 incr Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
incrStatement22	TokenNameIdentifier	 incr Statement22
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
20	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:157:7: showStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:157:7: showStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_showStatement_in_statement622	TokenNameIdentifier	 FOLLOW show Statement in statement622
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
showStatement23	TokenNameIdentifier	 show Statement23
=	TokenNameEQUAL	
showStatement	TokenNameIdentifier	 show Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
showStatement23	TokenNameIdentifier	 show Statement23
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
21	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:158:7: listStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:158:7: listStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_listStatement_in_statement630	TokenNameIdentifier	 FOLLOW list Statement in statement630
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
listStatement24	TokenNameIdentifier	 list Statement24
=	TokenNameEQUAL	
listStatement	TokenNameIdentifier	 list Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
listStatement24	TokenNameIdentifier	 list Statement24
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
22	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:159:7: truncateStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:159:7: truncateStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_truncateStatement_in_statement638	TokenNameIdentifier	 FOLLOW truncate Statement in statement638
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
truncateStatement25	TokenNameIdentifier	 truncate Statement25
=	TokenNameEQUAL	
truncateStatement	TokenNameIdentifier	 truncate Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
truncateStatement25	TokenNameIdentifier	 truncate Statement25
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
23	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:160:7: assumeStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:160:7: assumeStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_assumeStatement_in_statement646	TokenNameIdentifier	 FOLLOW assume Statement in statement646
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
assumeStatement26	TokenNameIdentifier	 assume Statement26
=	TokenNameEQUAL	
assumeStatement	TokenNameIdentifier	 assume Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
assumeStatement26	TokenNameIdentifier	 assume Statement26
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
24	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:161:7: consistencyLevelStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:161:7: consistencyLevelStatement 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_consistencyLevelStatement_in_statement654	TokenNameIdentifier	 FOLLOW consistency Level Statement in statement654
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
consistencyLevelStatement27	TokenNameIdentifier	 consistency Level Statement27
=	TokenNameEQUAL	
consistencyLevelStatement	TokenNameIdentifier	 consistency Level Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
consistencyLevelStatement27	TokenNameIdentifier	 consistency Level Statement27
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
25	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:162:7: dropIndex 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:162:7: dropIndex 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_dropIndex_in_statement662	TokenNameIdentifier	 FOLLOW drop Index in statement662
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
dropIndex28	TokenNameIdentifier	 drop Index28
=	TokenNameEQUAL	
dropIndex	TokenNameIdentifier	 drop Index
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
dropIndex28	TokenNameIdentifier	 drop Index28
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
26	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:163:7: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:163:7: 
{	TokenNameLBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 163:7: -> ^( NODE_NO_OP ) 	TokenNameCOMMENT_LINE	163:7: -> ^( NODE_NO_OP ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:163:10: ^( NODE_NO_OP ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:163:10: ^( NODE_NO_OP ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_NO_OP	TokenNameIdentifier	 NODE  NO  OP
,	TokenNameCOMMA	
"NODE_NO_OP"	TokenNameStringLiteral	NODE_NO_OP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "statement" 	TokenNameCOMMENT_LINE	$ANTLR end "statement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
connectStatement_return	TokenNameIdentifier	 connect Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "connectStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "connectStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:166:1: connectStatement : ( CONNECT host '/' port ( username password )? -> ^( NODE_CONNECT host port ( username password )? ) | CONNECT ip_address '/' port ( username password )? -> ^( NODE_CONNECT ip_address port ( username password )? ) ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:166:1: connectStatement : ( CONNECT host '/' port ( username password )? -> ^( NODE_CONNECT host port ( username password )? ) | CONNECT ip_address '/' port ( username password )? -> ^( NODE_CONNECT ip_address port ( username password )? ) ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
connectStatement_return	TokenNameIdentifier	 connect Statement return
connectStatement	TokenNameIdentifier	 connect Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
connectStatement_return	TokenNameIdentifier	 connect Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
connectStatement_return	TokenNameIdentifier	 connect Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CONNECT29	TokenNameIdentifier	 CONNEC T29
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal31	TokenNameIdentifier	 char literal31
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CONNECT35	TokenNameIdentifier	 CONNEC T35
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal37	TokenNameIdentifier	 char literal37
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_return	TokenNameIdentifier	 host return
host30	TokenNameIdentifier	 host30
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
port_return	TokenNameIdentifier	 port return
port32	TokenNameIdentifier	 port32
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username33	TokenNameIdentifier	 username33
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
password_return	TokenNameIdentifier	 password return
password34	TokenNameIdentifier	 password34
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
ip_address_return	TokenNameIdentifier	 ip address return
ip_address36	TokenNameIdentifier	 ip address36
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
port_return	TokenNameIdentifier	 port return
port38	TokenNameIdentifier	 port38
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username39	TokenNameIdentifier	 username39
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
password_return	TokenNameIdentifier	 password return
password40	TokenNameIdentifier	 password40
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CONNECT29_tree	TokenNameIdentifier	 CONNEC T29 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal31_tree	TokenNameIdentifier	 char literal31 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CONNECT35_tree	TokenNameIdentifier	 CONNEC T35 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal37_tree	TokenNameIdentifier	 char literal37 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_111	TokenNameIdentifier	 stream 111
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 111"	TokenNameStringLiteral	token 111
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CONNECT	TokenNameIdentifier	 stream  CONNECT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CONNECT"	TokenNameStringLiteral	token CONNECT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_port	TokenNameIdentifier	 stream port
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule port"	TokenNameStringLiteral	rule port
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_ip_address	TokenNameIdentifier	 stream ip address
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule ip_address"	TokenNameStringLiteral	rule ip_address
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_username	TokenNameIdentifier	 stream username
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule username"	TokenNameStringLiteral	rule username
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_host	TokenNameIdentifier	 stream host
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule host"	TokenNameStringLiteral	rule host
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_password	TokenNameIdentifier	 stream password
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule password"	TokenNameStringLiteral	rule password
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:5: ( CONNECT host '/' port ( username password )? -> ^( NODE_CONNECT host port ( username password )? ) | CONNECT ip_address '/' port ( username password )? -> ^( NODE_CONNECT ip_address port ( username password )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:5: ( CONNECT host '/' port ( username password )? -> ^( NODE_CONNECT host port ( username password )? ) | CONNECT ip_address '/' port ( username password )? -> ^( NODE_CONNECT ip_address port ( username password )? ) ) 
int	TokenNameint	
alt5	TokenNameIdentifier	 alt5
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA5_0	TokenNameIdentifier	 L A5 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA5_0	TokenNameIdentifier	 L A5 0
==	TokenNameEQUAL_EQUAL	
CONNECT	TokenNameIdentifier	 CONNECT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
int	TokenNameint	
LA5_1	TokenNameIdentifier	 L A5 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA5_1	TokenNameIdentifier	 L A5 1
==	TokenNameEQUAL_EQUAL	
IP_ADDRESS	TokenNameIdentifier	 IP  ADDRESS
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt5	TokenNameIdentifier	 alt5
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA5_1	TokenNameIdentifier	 L A5 1
==	TokenNameEQUAL_EQUAL	
Identifier	TokenNameIdentifier	 Identifier
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt5	TokenNameIdentifier	 alt5
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
5	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
5	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt5	TokenNameIdentifier	 alt5
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:7: CONNECT host '/' port ( username password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:7: CONNECT host '/' port ( username password )? 
{	TokenNameLBRACE	
CONNECT29	TokenNameIdentifier	 CONNEC T29
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CONNECT	TokenNameIdentifier	 CONNECT
,	TokenNameCOMMA	
FOLLOW_CONNECT_in_connectStatement691	TokenNameIdentifier	 FOLLOW  CONNECT in connect Statement691
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CONNECT	TokenNameIdentifier	 stream  CONNECT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CONNECT29	TokenNameIdentifier	 CONNEC T29
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_host_in_connectStatement693	TokenNameIdentifier	 FOLLOW host in connect Statement693
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
host30	TokenNameIdentifier	 host30
=	TokenNameEQUAL	
host	TokenNameIdentifier	 host
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_host	TokenNameIdentifier	 stream host
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
host30	TokenNameIdentifier	 host30
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal31	TokenNameIdentifier	 char literal31
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
111	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_111_in_connectStatement695	TokenNameIdentifier	 FOLLOW 111 in connect Statement695
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_111	TokenNameIdentifier	 stream 111
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal31	TokenNameIdentifier	 char literal31
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_port_in_connectStatement697	TokenNameIdentifier	 FOLLOW port in connect Statement697
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
port32	TokenNameIdentifier	 port32
=	TokenNameEQUAL	
port	TokenNameIdentifier	 port
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_port	TokenNameIdentifier	 stream port
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
port32	TokenNameIdentifier	 port32
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:29: ( username password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:29: ( username password )? 
int	TokenNameint	
alt3	TokenNameIdentifier	 alt3
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA3_0	TokenNameIdentifier	 L A3 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
Identifier	TokenNameIdentifier	 Identifier
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt3	TokenNameIdentifier	 alt3
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt3	TokenNameIdentifier	 alt3
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:30: username password 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:167:30: username password 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_connectStatement700	TokenNameIdentifier	 FOLLOW username in connect Statement700
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username33	TokenNameIdentifier	 username33
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
username33	TokenNameIdentifier	 username33
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_password_in_connectStatement702	TokenNameIdentifier	 FOLLOW password in connect Statement702
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
password34	TokenNameIdentifier	 password34
=	TokenNameEQUAL	
password	TokenNameIdentifier	 password
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
password34	TokenNameIdentifier	 password34
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: password, username, host, port 	TokenNameCOMMENT_LINE	elements: password, username, host, port 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 168:9: -> ^( NODE_CONNECT host port ( username password )? ) 	TokenNameCOMMENT_LINE	168:9: -> ^( NODE_CONNECT host port ( username password )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:168:12: ^( NODE_CONNECT host port ( username password )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:168:12: ^( NODE_CONNECT host port ( username password )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_CONNECT	TokenNameIdentifier	 NODE  CONNECT
,	TokenNameCOMMA	
"NODE_CONNECT"	TokenNameStringLiteral	NODE_CONNECT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_host	TokenNameIdentifier	 stream host
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_port	TokenNameIdentifier	 stream port
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:168:37: ( username password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:168:37: ( username password )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
||	TokenNameOR_OR	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:169:7: CONNECT ip_address '/' port ( username password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:169:7: CONNECT ip_address '/' port ( username password )? 
{	TokenNameLBRACE	
CONNECT35	TokenNameIdentifier	 CONNEC T35
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CONNECT	TokenNameIdentifier	 CONNECT
,	TokenNameCOMMA	
FOLLOW_CONNECT_in_connectStatement737	TokenNameIdentifier	 FOLLOW  CONNECT in connect Statement737
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CONNECT	TokenNameIdentifier	 stream  CONNECT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CONNECT35	TokenNameIdentifier	 CONNEC T35
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_ip_address_in_connectStatement739	TokenNameIdentifier	 FOLLOW ip address in connect Statement739
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ip_address36	TokenNameIdentifier	 ip address36
=	TokenNameEQUAL	
ip_address	TokenNameIdentifier	 ip address
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_ip_address	TokenNameIdentifier	 stream ip address
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
ip_address36	TokenNameIdentifier	 ip address36
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal37	TokenNameIdentifier	 char literal37
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
111	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_111_in_connectStatement741	TokenNameIdentifier	 FOLLOW 111 in connect Statement741
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_111	TokenNameIdentifier	 stream 111
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal37	TokenNameIdentifier	 char literal37
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_port_in_connectStatement743	TokenNameIdentifier	 FOLLOW port in connect Statement743
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
port38	TokenNameIdentifier	 port38
=	TokenNameEQUAL	
port	TokenNameIdentifier	 port
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_port	TokenNameIdentifier	 stream port
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
port38	TokenNameIdentifier	 port38
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:169:35: ( username password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:169:35: ( username password )? 
int	TokenNameint	
alt4	TokenNameIdentifier	 alt4
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA4_0	TokenNameIdentifier	 L A4 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA4_0	TokenNameIdentifier	 L A4 0
==	TokenNameEQUAL_EQUAL	
Identifier	TokenNameIdentifier	 Identifier
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt4	TokenNameIdentifier	 alt4
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt4	TokenNameIdentifier	 alt4
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:169:36: username password 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:169:36: username password 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_connectStatement746	TokenNameIdentifier	 FOLLOW username in connect Statement746
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username39	TokenNameIdentifier	 username39
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
username39	TokenNameIdentifier	 username39
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_password_in_connectStatement748	TokenNameIdentifier	 FOLLOW password in connect Statement748
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
password40	TokenNameIdentifier	 password40
=	TokenNameEQUAL	
password	TokenNameIdentifier	 password
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
password40	TokenNameIdentifier	 password40
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: password, ip_address, username, port 	TokenNameCOMMENT_LINE	elements: password, ip_address, username, port 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 170:9: -> ^( NODE_CONNECT ip_address port ( username password )? ) 	TokenNameCOMMENT_LINE	170:9: -> ^( NODE_CONNECT ip_address port ( username password )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:170:12: ^( NODE_CONNECT ip_address port ( username password )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:170:12: ^( NODE_CONNECT ip_address port ( username password )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_CONNECT	TokenNameIdentifier	 NODE  CONNECT
,	TokenNameCOMMA	
"NODE_CONNECT"	TokenNameStringLiteral	NODE_CONNECT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_ip_address	TokenNameIdentifier	 stream ip address
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_port	TokenNameIdentifier	 stream port
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:170:43: ( username password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:170:43: ( username password )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
||	TokenNameOR_OR	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "connectStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "connectStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
helpStatement_return	TokenNameIdentifier	 help Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "helpStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "helpStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:173:1: helpStatement : ( HELP HELP -> ^( NODE_HELP NODE_HELP ) | HELP CONNECT -> ^( NODE_HELP NODE_CONNECT ) | HELP USE -> ^( NODE_HELP NODE_USE_TABLE ) | HELP TRACE NEXT QUERY -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) | HELP SET TRACE PROBABILITY -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) | HELP DESCRIBE -> ^( NODE_HELP NODE_DESCRIBE ) | HELP DESCRIBE 'CLUSTER' -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) | HELP EXIT -> ^( NODE_HELP NODE_EXIT ) | HELP QUIT -> ^( NODE_HELP NODE_EXIT ) | HELP SHOW 'CLUSTER NAME' -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) | HELP SHOW KEYSPACES -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) | HELP SHOW SCHEMA -> ^( NODE_HELP NODE_SHOW_SCHEMA ) | HELP SHOW API_VERSION -> ^( NODE_HELP NODE_SHOW_VERSION ) | HELP CREATE KEYSPACE -> ^( NODE_HELP NODE_ADD_KEYSPACE ) | HELP UPDATE KEYSPACE -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) | HELP CREATE COLUMN FAMILY -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) | HELP UPDATE COLUMN FAMILY -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) | HELP DROP KEYSPACE -> ^( NODE_HELP NODE_DEL_KEYSPACE ) | HELP DROP COLUMN FAMILY -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) | HELP DROP INDEX -> ^( NODE_HELP NODE_DROP_INDEX ) | HELP GET -> ^( NODE_HELP NODE_THRIFT_GET ) | HELP SET -> ^( NODE_HELP NODE_THRIFT_SET ) | HELP INCR -> ^( NODE_HELP NODE_THRIFT_INCR ) | HELP DECR -> ^( NODE_HELP NODE_THRIFT_DECR ) | HELP DEL -> ^( NODE_HELP NODE_THRIFT_DEL ) | HELP COUNT -> ^( NODE_HELP NODE_THRIFT_COUNT ) | HELP LIST -> ^( NODE_HELP NODE_LIST ) | HELP TRUNCATE -> ^( NODE_HELP NODE_TRUNCATE ) | HELP ASSUME -> ^( NODE_HELP NODE_ASSUME ) | HELP CONSISTENCYLEVEL -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) | HELP -> ^( NODE_HELP ) | '?' -> ^( NODE_HELP ) ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:173:1: helpStatement : ( HELP HELP -> ^( NODE_HELP NODE_HELP ) | HELP CONNECT -> ^( NODE_HELP NODE_CONNECT ) | HELP USE -> ^( NODE_HELP NODE_USE_TABLE ) | HELP TRACE NEXT QUERY -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) | HELP SET TRACE PROBABILITY -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) | HELP DESCRIBE -> ^( NODE_HELP NODE_DESCRIBE ) | HELP DESCRIBE 'CLUSTER' -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) | HELP EXIT -> ^( NODE_HELP NODE_EXIT ) | HELP QUIT -> ^( NODE_HELP NODE_EXIT ) | HELP SHOW 'CLUSTER NAME' -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) | HELP SHOW KEYSPACES -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) | HELP SHOW SCHEMA -> ^( NODE_HELP NODE_SHOW_SCHEMA ) | HELP SHOW API_VERSION -> ^( NODE_HELP NODE_SHOW_VERSION ) | HELP CREATE KEYSPACE -> ^( NODE_HELP NODE_ADD_KEYSPACE ) | HELP UPDATE KEYSPACE -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) | HELP CREATE COLUMN FAMILY -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) | HELP UPDATE COLUMN FAMILY -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) | HELP DROP KEYSPACE -> ^( NODE_HELP NODE_DEL_KEYSPACE ) | HELP DROP COLUMN FAMILY -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) | HELP DROP INDEX -> ^( NODE_HELP NODE_DROP_INDEX ) | HELP GET -> ^( NODE_HELP NODE_THRIFT_GET ) | HELP SET -> ^( NODE_HELP NODE_THRIFT_SET ) | HELP INCR -> ^( NODE_HELP NODE_THRIFT_INCR ) | HELP DECR -> ^( NODE_HELP NODE_THRIFT_DECR ) | HELP DEL -> ^( NODE_HELP NODE_THRIFT_DEL ) | HELP COUNT -> ^( NODE_HELP NODE_THRIFT_COUNT ) | HELP LIST -> ^( NODE_HELP NODE_LIST ) | HELP TRUNCATE -> ^( NODE_HELP NODE_TRUNCATE ) | HELP ASSUME -> ^( NODE_HELP NODE_ASSUME ) | HELP CONSISTENCYLEVEL -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) | HELP -> ^( NODE_HELP ) | '?' -> ^( NODE_HELP ) ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
helpStatement_return	TokenNameIdentifier	 help Statement return
helpStatement	TokenNameIdentifier	 help Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
helpStatement_return	TokenNameIdentifier	 help Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
helpStatement_return	TokenNameIdentifier	 help Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP41	TokenNameIdentifier	 HEL P41
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP42	TokenNameIdentifier	 HEL P42
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP43	TokenNameIdentifier	 HEL P43
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CONNECT44	TokenNameIdentifier	 CONNEC T44
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP45	TokenNameIdentifier	 HEL P45
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
USE46	TokenNameIdentifier	 US E46
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP47	TokenNameIdentifier	 HEL P47
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TRACE48	TokenNameIdentifier	 TRAC E48
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
NEXT49	TokenNameIdentifier	 NEX T49
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
QUERY50	TokenNameIdentifier	 QUER Y50
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP51	TokenNameIdentifier	 HEL P51
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SET52	TokenNameIdentifier	 SE T52
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TRACE53	TokenNameIdentifier	 TRAC E53
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
PROBABILITY54	TokenNameIdentifier	 PROBABILIT Y54
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP55	TokenNameIdentifier	 HEL P55
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DESCRIBE56	TokenNameIdentifier	 DESCRIB E56
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP57	TokenNameIdentifier	 HEL P57
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DESCRIBE58	TokenNameIdentifier	 DESCRIB E58
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal59	TokenNameIdentifier	 string literal59
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP60	TokenNameIdentifier	 HEL P60
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
EXIT61	TokenNameIdentifier	 EXI T61
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP62	TokenNameIdentifier	 HEL P62
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
QUIT63	TokenNameIdentifier	 QUI T63
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP64	TokenNameIdentifier	 HEL P64
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW65	TokenNameIdentifier	 SHO W65
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal66	TokenNameIdentifier	 string literal66
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP67	TokenNameIdentifier	 HEL P67
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW68	TokenNameIdentifier	 SHO W68
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACES69	TokenNameIdentifier	 KEYSPACE S69
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP70	TokenNameIdentifier	 HEL P70
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW71	TokenNameIdentifier	 SHO W71
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SCHEMA72	TokenNameIdentifier	 SCHEM A72
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP73	TokenNameIdentifier	 HEL P73
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW74	TokenNameIdentifier	 SHO W74
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
API_VERSION75	TokenNameIdentifier	 API  VERSIO N75
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP76	TokenNameIdentifier	 HEL P76
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CREATE77	TokenNameIdentifier	 CREAT E77
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACE78	TokenNameIdentifier	 KEYSPAC E78
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP79	TokenNameIdentifier	 HEL P79
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
UPDATE80	TokenNameIdentifier	 UPDAT E80
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACE81	TokenNameIdentifier	 KEYSPAC E81
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP82	TokenNameIdentifier	 HEL P82
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CREATE83	TokenNameIdentifier	 CREAT E83
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COLUMN84	TokenNameIdentifier	 COLUM N84
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
FAMILY85	TokenNameIdentifier	 FAMIL Y85
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP86	TokenNameIdentifier	 HEL P86
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
UPDATE87	TokenNameIdentifier	 UPDAT E87
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COLUMN88	TokenNameIdentifier	 COLUM N88
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
FAMILY89	TokenNameIdentifier	 FAMIL Y89
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP90	TokenNameIdentifier	 HEL P90
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DROP91	TokenNameIdentifier	 DRO P91
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACE92	TokenNameIdentifier	 KEYSPAC E92
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP93	TokenNameIdentifier	 HEL P93
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DROP94	TokenNameIdentifier	 DRO P94
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COLUMN95	TokenNameIdentifier	 COLUM N95
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
FAMILY96	TokenNameIdentifier	 FAMIL Y96
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP97	TokenNameIdentifier	 HEL P97
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DROP98	TokenNameIdentifier	 DRO P98
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
INDEX99	TokenNameIdentifier	 INDE X99
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP100	TokenNameIdentifier	 HEL P100
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
GET101	TokenNameIdentifier	 GE T101
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP102	TokenNameIdentifier	 HEL P102
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SET103	TokenNameIdentifier	 SE T103
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP104	TokenNameIdentifier	 HEL P104
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
INCR105	TokenNameIdentifier	 INC R105
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP106	TokenNameIdentifier	 HEL P106
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DECR107	TokenNameIdentifier	 DEC R107
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP108	TokenNameIdentifier	 HEL P108
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DEL109	TokenNameIdentifier	 DE L109
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP110	TokenNameIdentifier	 HEL P110
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COUNT111	TokenNameIdentifier	 COUN T111
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP112	TokenNameIdentifier	 HEL P112
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
LIST113	TokenNameIdentifier	 LIS T113
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP114	TokenNameIdentifier	 HEL P114
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TRUNCATE115	TokenNameIdentifier	 TRUNCAT E115
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP116	TokenNameIdentifier	 HEL P116
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
ASSUME117	TokenNameIdentifier	 ASSUM E117
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP118	TokenNameIdentifier	 HEL P118
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CONSISTENCYLEVEL119	TokenNameIdentifier	 CONSISTENCYLEVE L119
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
HELP120	TokenNameIdentifier	 HEL P120
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal121	TokenNameIdentifier	 char literal121
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP41_tree	TokenNameIdentifier	 HEL P41 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP42_tree	TokenNameIdentifier	 HEL P42 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP43_tree	TokenNameIdentifier	 HEL P43 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CONNECT44_tree	TokenNameIdentifier	 CONNEC T44 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP45_tree	TokenNameIdentifier	 HEL P45 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
USE46_tree	TokenNameIdentifier	 US E46 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP47_tree	TokenNameIdentifier	 HEL P47 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TRACE48_tree	TokenNameIdentifier	 TRAC E48 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
NEXT49_tree	TokenNameIdentifier	 NEX T49 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
QUERY50_tree	TokenNameIdentifier	 QUER Y50 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP51_tree	TokenNameIdentifier	 HEL P51 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SET52_tree	TokenNameIdentifier	 SE T52 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TRACE53_tree	TokenNameIdentifier	 TRAC E53 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
PROBABILITY54_tree	TokenNameIdentifier	 PROBABILIT Y54 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP55_tree	TokenNameIdentifier	 HEL P55 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DESCRIBE56_tree	TokenNameIdentifier	 DESCRIB E56 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP57_tree	TokenNameIdentifier	 HEL P57 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DESCRIBE58_tree	TokenNameIdentifier	 DESCRIB E58 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal59_tree	TokenNameIdentifier	 string literal59 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP60_tree	TokenNameIdentifier	 HEL P60 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
EXIT61_tree	TokenNameIdentifier	 EXI T61 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP62_tree	TokenNameIdentifier	 HEL P62 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
QUIT63_tree	TokenNameIdentifier	 QUI T63 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP64_tree	TokenNameIdentifier	 HEL P64 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW65_tree	TokenNameIdentifier	 SHO W65 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal66_tree	TokenNameIdentifier	 string literal66 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP67_tree	TokenNameIdentifier	 HEL P67 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW68_tree	TokenNameIdentifier	 SHO W68 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACES69_tree	TokenNameIdentifier	 KEYSPACE S69 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP70_tree	TokenNameIdentifier	 HEL P70 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW71_tree	TokenNameIdentifier	 SHO W71 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SCHEMA72_tree	TokenNameIdentifier	 SCHEM A72 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP73_tree	TokenNameIdentifier	 HEL P73 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW74_tree	TokenNameIdentifier	 SHO W74 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
API_VERSION75_tree	TokenNameIdentifier	 API  VERSIO N75 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP76_tree	TokenNameIdentifier	 HEL P76 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CREATE77_tree	TokenNameIdentifier	 CREAT E77 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACE78_tree	TokenNameIdentifier	 KEYSPAC E78 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP79_tree	TokenNameIdentifier	 HEL P79 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
UPDATE80_tree	TokenNameIdentifier	 UPDAT E80 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACE81_tree	TokenNameIdentifier	 KEYSPAC E81 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP82_tree	TokenNameIdentifier	 HEL P82 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CREATE83_tree	TokenNameIdentifier	 CREAT E83 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COLUMN84_tree	TokenNameIdentifier	 COLUM N84 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
FAMILY85_tree	TokenNameIdentifier	 FAMIL Y85 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP86_tree	TokenNameIdentifier	 HEL P86 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
UPDATE87_tree	TokenNameIdentifier	 UPDAT E87 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COLUMN88_tree	TokenNameIdentifier	 COLUM N88 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
FAMILY89_tree	TokenNameIdentifier	 FAMIL Y89 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP90_tree	TokenNameIdentifier	 HEL P90 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DROP91_tree	TokenNameIdentifier	 DRO P91 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACE92_tree	TokenNameIdentifier	 KEYSPAC E92 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP93_tree	TokenNameIdentifier	 HEL P93 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DROP94_tree	TokenNameIdentifier	 DRO P94 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COLUMN95_tree	TokenNameIdentifier	 COLUM N95 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
FAMILY96_tree	TokenNameIdentifier	 FAMIL Y96 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP97_tree	TokenNameIdentifier	 HEL P97 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DROP98_tree	TokenNameIdentifier	 DRO P98 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
INDEX99_tree	TokenNameIdentifier	 INDE X99 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP100_tree	TokenNameIdentifier	 HEL P100 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
GET101_tree	TokenNameIdentifier	 GE T101 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP102_tree	TokenNameIdentifier	 HEL P102 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SET103_tree	TokenNameIdentifier	 SE T103 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP104_tree	TokenNameIdentifier	 HEL P104 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
INCR105_tree	TokenNameIdentifier	 INC R105 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP106_tree	TokenNameIdentifier	 HEL P106 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DECR107_tree	TokenNameIdentifier	 DEC R107 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP108_tree	TokenNameIdentifier	 HEL P108 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DEL109_tree	TokenNameIdentifier	 DE L109 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP110_tree	TokenNameIdentifier	 HEL P110 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COUNT111_tree	TokenNameIdentifier	 COUN T111 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP112_tree	TokenNameIdentifier	 HEL P112 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
LIST113_tree	TokenNameIdentifier	 LIS T113 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP114_tree	TokenNameIdentifier	 HEL P114 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TRUNCATE115_tree	TokenNameIdentifier	 TRUNCAT E115 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP116_tree	TokenNameIdentifier	 HEL P116 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
ASSUME117_tree	TokenNameIdentifier	 ASSUM E117 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP118_tree	TokenNameIdentifier	 HEL P118 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CONSISTENCYLEVEL119_tree	TokenNameIdentifier	 CONSISTENCYLEVE L119 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
HELP120_tree	TokenNameIdentifier	 HEL P120 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal121_tree	TokenNameIdentifier	 char literal121 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_EXIT	TokenNameIdentifier	 stream  EXIT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token EXIT"	TokenNameStringLiteral	token EXIT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_HELP	TokenNameIdentifier	 stream  HELP
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token HELP"	TokenNameStringLiteral	token HELP
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_114	TokenNameIdentifier	 stream 114
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 114"	TokenNameStringLiteral	token 114
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_112	TokenNameIdentifier	 stream 112
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 112"	TokenNameStringLiteral	token 112
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_113	TokenNameIdentifier	 stream 113
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 113"	TokenNameStringLiteral	token 113
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DEL	TokenNameIdentifier	 stream  DEL
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DEL"	TokenNameStringLiteral	token DEL
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_TRACE	TokenNameIdentifier	 stream  TRACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token TRACE"	TokenNameStringLiteral	token TRACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token UPDATE"	TokenNameStringLiteral	token UPDATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SET	TokenNameIdentifier	 stream  SET
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SET"	TokenNameStringLiteral	token SET
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_COUNT	TokenNameIdentifier	 stream  COUNT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token COUNT"	TokenNameStringLiteral	token COUNT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_KEYSPACES	TokenNameIdentifier	 stream  KEYSPACES
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token KEYSPACES"	TokenNameStringLiteral	token KEYSPACES
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_API_VERSION	TokenNameIdentifier	 stream  API  VERSION
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token API_VERSION"	TokenNameStringLiteral	token API_VERSION
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CONSISTENCYLEVEL	TokenNameIdentifier	 stream  CONSISTENCYLEVEL
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CONSISTENCYLEVEL"	TokenNameStringLiteral	token CONSISTENCYLEVEL
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_LIST	TokenNameIdentifier	 stream  LIST
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token LIST"	TokenNameStringLiteral	token LIST
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_QUIT	TokenNameIdentifier	 stream  QUIT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token QUIT"	TokenNameStringLiteral	token QUIT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token KEYSPACE"	TokenNameStringLiteral	token KEYSPACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_INDEX	TokenNameIdentifier	 stream  INDEX
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token INDEX"	TokenNameStringLiteral	token INDEX
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CREATE	TokenNameIdentifier	 stream  CREATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CREATE"	TokenNameStringLiteral	token CREATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SCHEMA	TokenNameIdentifier	 stream  SCHEMA
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SCHEMA"	TokenNameStringLiteral	token SCHEMA
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_INCR	TokenNameIdentifier	 stream  INCR
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token INCR"	TokenNameStringLiteral	token INCR
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CONNECT	TokenNameIdentifier	 stream  CONNECT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CONNECT"	TokenNameStringLiteral	token CONNECT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DROP	TokenNameIdentifier	 stream  DROP
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DROP"	TokenNameStringLiteral	token DROP
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_ASSUME	TokenNameIdentifier	 stream  ASSUME
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token ASSUME"	TokenNameStringLiteral	token ASSUME
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_TRUNCATE	TokenNameIdentifier	 stream  TRUNCATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token TRUNCATE"	TokenNameStringLiteral	token TRUNCATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DESCRIBE"	TokenNameStringLiteral	token DESCRIBE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token COLUMN"	TokenNameStringLiteral	token COLUMN
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DECR	TokenNameIdentifier	 stream  DECR
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DECR"	TokenNameStringLiteral	token DECR
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token FAMILY"	TokenNameStringLiteral	token FAMILY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_QUERY	TokenNameIdentifier	 stream  QUERY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token QUERY"	TokenNameStringLiteral	token QUERY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_GET	TokenNameIdentifier	 stream  GET
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token GET"	TokenNameStringLiteral	token GET
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_NEXT	TokenNameIdentifier	 stream  NEXT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token NEXT"	TokenNameStringLiteral	token NEXT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_PROBABILITY	TokenNameIdentifier	 stream  PROBABILITY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token PROBABILITY"	TokenNameStringLiteral	token PROBABILITY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_USE	TokenNameIdentifier	 stream  USE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token USE"	TokenNameStringLiteral	token USE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SHOW	TokenNameIdentifier	 stream  SHOW
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SHOW"	TokenNameStringLiteral	token SHOW
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:174:5: ( HELP HELP -> ^( NODE_HELP NODE_HELP ) | HELP CONNECT -> ^( NODE_HELP NODE_CONNECT ) | HELP USE -> ^( NODE_HELP NODE_USE_TABLE ) | HELP TRACE NEXT QUERY -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) | HELP SET TRACE PROBABILITY -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) | HELP DESCRIBE -> ^( NODE_HELP NODE_DESCRIBE ) | HELP DESCRIBE 'CLUSTER' -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) | HELP EXIT -> ^( NODE_HELP NODE_EXIT ) | HELP QUIT -> ^( NODE_HELP NODE_EXIT ) | HELP SHOW 'CLUSTER NAME' -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) | HELP SHOW KEYSPACES -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) | HELP SHOW SCHEMA -> ^( NODE_HELP NODE_SHOW_SCHEMA ) | HELP SHOW API_VERSION -> ^( NODE_HELP NODE_SHOW_VERSION ) | HELP CREATE KEYSPACE -> ^( NODE_HELP NODE_ADD_KEYSPACE ) | HELP UPDATE KEYSPACE -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) | HELP CREATE COLUMN FAMILY -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) | HELP UPDATE COLUMN FAMILY -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) | HELP DROP KEYSPACE -> ^( NODE_HELP NODE_DEL_KEYSPACE ) | HELP DROP COLUMN FAMILY -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) | HELP DROP INDEX -> ^( NODE_HELP NODE_DROP_INDEX ) | HELP GET -> ^( NODE_HELP NODE_THRIFT_GET ) | HELP SET -> ^( NODE_HELP NODE_THRIFT_SET ) | HELP INCR -> ^( NODE_HELP NODE_THRIFT_INCR ) | HELP DECR -> ^( NODE_HELP NODE_THRIFT_DECR ) | HELP DEL -> ^( NODE_HELP NODE_THRIFT_DEL ) | HELP COUNT -> ^( NODE_HELP NODE_THRIFT_COUNT ) | HELP LIST -> ^( NODE_HELP NODE_LIST ) | HELP TRUNCATE -> ^( NODE_HELP NODE_TRUNCATE ) | HELP ASSUME -> ^( NODE_HELP NODE_ASSUME ) | HELP CONSISTENCYLEVEL -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) | HELP -> ^( NODE_HELP ) | '?' -> ^( NODE_HELP ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:174:5: ( HELP HELP -> ^( NODE_HELP NODE_HELP ) | HELP CONNECT -> ^( NODE_HELP NODE_CONNECT ) | HELP USE -> ^( NODE_HELP NODE_USE_TABLE ) | HELP TRACE NEXT QUERY -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) | HELP SET TRACE PROBABILITY -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) | HELP DESCRIBE -> ^( NODE_HELP NODE_DESCRIBE ) | HELP DESCRIBE 'CLUSTER' -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) | HELP EXIT -> ^( NODE_HELP NODE_EXIT ) | HELP QUIT -> ^( NODE_HELP NODE_EXIT ) | HELP SHOW 'CLUSTER NAME' -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) | HELP SHOW KEYSPACES -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) | HELP SHOW SCHEMA -> ^( NODE_HELP NODE_SHOW_SCHEMA ) | HELP SHOW API_VERSION -> ^( NODE_HELP NODE_SHOW_VERSION ) | HELP CREATE KEYSPACE -> ^( NODE_HELP NODE_ADD_KEYSPACE ) | HELP UPDATE KEYSPACE -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) | HELP CREATE COLUMN FAMILY -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) | HELP UPDATE COLUMN FAMILY -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) | HELP DROP KEYSPACE -> ^( NODE_HELP NODE_DEL_KEYSPACE ) | HELP DROP COLUMN FAMILY -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) | HELP DROP INDEX -> ^( NODE_HELP NODE_DROP_INDEX ) | HELP GET -> ^( NODE_HELP NODE_THRIFT_GET ) | HELP SET -> ^( NODE_HELP NODE_THRIFT_SET ) | HELP INCR -> ^( NODE_HELP NODE_THRIFT_INCR ) | HELP DECR -> ^( NODE_HELP NODE_THRIFT_DECR ) | HELP DEL -> ^( NODE_HELP NODE_THRIFT_DEL ) | HELP COUNT -> ^( NODE_HELP NODE_THRIFT_COUNT ) | HELP LIST -> ^( NODE_HELP NODE_LIST ) | HELP TRUNCATE -> ^( NODE_HELP NODE_TRUNCATE ) | HELP ASSUME -> ^( NODE_HELP NODE_ASSUME ) | HELP CONSISTENCYLEVEL -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) | HELP -> ^( NODE_HELP ) | '?' -> ^( NODE_HELP ) ) 
int	TokenNameint	
alt6	TokenNameIdentifier	 alt6
=	TokenNameEQUAL	
32	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt6	TokenNameIdentifier	 alt6
=	TokenNameEQUAL	
dfa6	TokenNameIdentifier	 dfa6
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt6	TokenNameIdentifier	 alt6
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:174:7: HELP HELP 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:174:7: HELP HELP 
{	TokenNameLBRACE	
HELP41	TokenNameIdentifier	 HEL P41
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement792	TokenNameIdentifier	 FOLLOW  HELP in help Statement792
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP41	TokenNameIdentifier	 HEL P41
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
HELP42	TokenNameIdentifier	 HEL P42
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement794	TokenNameIdentifier	 FOLLOW  HELP in help Statement794
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP42	TokenNameIdentifier	 HEL P42
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 175:9: -> ^( NODE_HELP NODE_HELP ) 	TokenNameCOMMENT_LINE	175:9: -> ^( NODE_HELP NODE_HELP ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:175:12: ^( NODE_HELP NODE_HELP ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:175:12: ^( NODE_HELP NODE_HELP ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:176:7: HELP CONNECT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:176:7: HELP CONNECT 
{	TokenNameLBRACE	
HELP43	TokenNameIdentifier	 HEL P43
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement819	TokenNameIdentifier	 FOLLOW  HELP in help Statement819
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP43	TokenNameIdentifier	 HEL P43
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CONNECT44	TokenNameIdentifier	 CONNEC T44
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CONNECT	TokenNameIdentifier	 CONNECT
,	TokenNameCOMMA	
FOLLOW_CONNECT_in_helpStatement821	TokenNameIdentifier	 FOLLOW  CONNECT in help Statement821
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CONNECT	TokenNameIdentifier	 stream  CONNECT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CONNECT44	TokenNameIdentifier	 CONNEC T44
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 177:9: -> ^( NODE_HELP NODE_CONNECT ) 	TokenNameCOMMENT_LINE	177:9: -> ^( NODE_HELP NODE_CONNECT ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:177:12: ^( NODE_HELP NODE_CONNECT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:177:12: ^( NODE_HELP NODE_CONNECT ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_CONNECT	TokenNameIdentifier	 NODE  CONNECT
,	TokenNameCOMMA	
"NODE_CONNECT"	TokenNameStringLiteral	NODE_CONNECT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:178:7: HELP USE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:178:7: HELP USE 
{	TokenNameLBRACE	
HELP45	TokenNameIdentifier	 HEL P45
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement846	TokenNameIdentifier	 FOLLOW  HELP in help Statement846
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP45	TokenNameIdentifier	 HEL P45
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
USE46	TokenNameIdentifier	 US E46
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
USE	TokenNameIdentifier	 USE
,	TokenNameCOMMA	
FOLLOW_USE_in_helpStatement848	TokenNameIdentifier	 FOLLOW  USE in help Statement848
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_USE	TokenNameIdentifier	 stream  USE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
USE46	TokenNameIdentifier	 US E46
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 179:9: -> ^( NODE_HELP NODE_USE_TABLE ) 	TokenNameCOMMENT_LINE	179:9: -> ^( NODE_HELP NODE_USE_TABLE ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:179:12: ^( NODE_HELP NODE_USE_TABLE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:179:12: ^( NODE_HELP NODE_USE_TABLE ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_USE_TABLE	TokenNameIdentifier	 NODE  USE  TABLE
,	TokenNameCOMMA	
"NODE_USE_TABLE"	TokenNameStringLiteral	NODE_USE_TABLE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:180:7: HELP TRACE NEXT QUERY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:180:7: HELP TRACE NEXT QUERY 
{	TokenNameLBRACE	
HELP47	TokenNameIdentifier	 HEL P47
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement873	TokenNameIdentifier	 FOLLOW  HELP in help Statement873
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP47	TokenNameIdentifier	 HEL P47
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
TRACE48	TokenNameIdentifier	 TRAC E48
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TRACE	TokenNameIdentifier	 TRACE
,	TokenNameCOMMA	
FOLLOW_TRACE_in_helpStatement875	TokenNameIdentifier	 FOLLOW  TRACE in help Statement875
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TRACE	TokenNameIdentifier	 stream  TRACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TRACE48	TokenNameIdentifier	 TRAC E48
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
NEXT49	TokenNameIdentifier	 NEX T49
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
NEXT	TokenNameIdentifier	 NEXT
,	TokenNameCOMMA	
FOLLOW_NEXT_in_helpStatement877	TokenNameIdentifier	 FOLLOW  NEXT in help Statement877
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_NEXT	TokenNameIdentifier	 stream  NEXT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
NEXT49	TokenNameIdentifier	 NEX T49
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
QUERY50	TokenNameIdentifier	 QUER Y50
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QUERY	TokenNameIdentifier	 QUERY
,	TokenNameCOMMA	
FOLLOW_QUERY_in_helpStatement879	TokenNameIdentifier	 FOLLOW  QUERY in help Statement879
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_QUERY	TokenNameIdentifier	 stream  QUERY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
QUERY50	TokenNameIdentifier	 QUER Y50
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 181:9: -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) 	TokenNameCOMMENT_LINE	181:9: -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:181:12: ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:181:12: ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_TRACE_NEXT_QUERY	TokenNameIdentifier	 NODE  TRACE  NEXT  QUERY
,	TokenNameCOMMA	
"NODE_TRACE_NEXT_QUERY"	TokenNameStringLiteral	NODE_TRACE_NEXT_QUERY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:182:7: HELP SET TRACE PROBABILITY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:182:7: HELP SET TRACE PROBABILITY 
{	TokenNameLBRACE	
HELP51	TokenNameIdentifier	 HEL P51
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement903	TokenNameIdentifier	 FOLLOW  HELP in help Statement903
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP51	TokenNameIdentifier	 HEL P51
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SET52	TokenNameIdentifier	 SE T52
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SET	TokenNameIdentifier	 SET
,	TokenNameCOMMA	
FOLLOW_SET_in_helpStatement905	TokenNameIdentifier	 FOLLOW  SET in help Statement905
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SET	TokenNameIdentifier	 stream  SET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SET52	TokenNameIdentifier	 SE T52
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
TRACE53	TokenNameIdentifier	 TRAC E53
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TRACE	TokenNameIdentifier	 TRACE
,	TokenNameCOMMA	
FOLLOW_TRACE_in_helpStatement907	TokenNameIdentifier	 FOLLOW  TRACE in help Statement907
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TRACE	TokenNameIdentifier	 stream  TRACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TRACE53	TokenNameIdentifier	 TRAC E53
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
PROBABILITY54	TokenNameIdentifier	 PROBABILIT Y54
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
PROBABILITY	TokenNameIdentifier	 PROBABILITY
,	TokenNameCOMMA	
FOLLOW_PROBABILITY_in_helpStatement909	TokenNameIdentifier	 FOLLOW  PROBABILITY in help Statement909
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_PROBABILITY	TokenNameIdentifier	 stream  PROBABILITY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
PROBABILITY54	TokenNameIdentifier	 PROBABILIT Y54
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 183:9: -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) 	TokenNameCOMMENT_LINE	183:9: -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:183:12: ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:183:12: ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SET_TRACE_PROBABILITY	TokenNameIdentifier	 NODE  SET  TRACE  PROBABILITY
,	TokenNameCOMMA	
"NODE_SET_TRACE_PROBABILITY"	TokenNameStringLiteral	NODE_SET_TRACE_PROBABILITY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
6	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:184:7: HELP DESCRIBE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:184:7: HELP DESCRIBE 
{	TokenNameLBRACE	
HELP55	TokenNameIdentifier	 HEL P55
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement933	TokenNameIdentifier	 FOLLOW  HELP in help Statement933
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP55	TokenNameIdentifier	 HEL P55
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DESCRIBE56	TokenNameIdentifier	 DESCRIB E56
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DESCRIBE	TokenNameIdentifier	 DESCRIBE
,	TokenNameCOMMA	
FOLLOW_DESCRIBE_in_helpStatement935	TokenNameIdentifier	 FOLLOW  DESCRIBE in help Statement935
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DESCRIBE56	TokenNameIdentifier	 DESCRIB E56
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 185:9: -> ^( NODE_HELP NODE_DESCRIBE ) 	TokenNameCOMMENT_LINE	185:9: -> ^( NODE_HELP NODE_DESCRIBE ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:185:12: ^( NODE_HELP NODE_DESCRIBE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:185:12: ^( NODE_HELP NODE_DESCRIBE ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DESCRIBE	TokenNameIdentifier	 NODE  DESCRIBE
,	TokenNameCOMMA	
"NODE_DESCRIBE"	TokenNameStringLiteral	NODE_DESCRIBE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
7	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:186:7: HELP DESCRIBE 'CLUSTER' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:186:7: HELP DESCRIBE 'CLUSTER' 
{	TokenNameLBRACE	
HELP57	TokenNameIdentifier	 HEL P57
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement959	TokenNameIdentifier	 FOLLOW  HELP in help Statement959
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP57	TokenNameIdentifier	 HEL P57
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DESCRIBE58	TokenNameIdentifier	 DESCRIB E58
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DESCRIBE	TokenNameIdentifier	 DESCRIBE
,	TokenNameCOMMA	
FOLLOW_DESCRIBE_in_helpStatement961	TokenNameIdentifier	 FOLLOW  DESCRIBE in help Statement961
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DESCRIBE58	TokenNameIdentifier	 DESCRIB E58
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal59	TokenNameIdentifier	 string literal59
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
112	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_112_in_helpStatement963	TokenNameIdentifier	 FOLLOW 112 in help Statement963
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_112	TokenNameIdentifier	 stream 112
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal59	TokenNameIdentifier	 string literal59
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 187:9: -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) 	TokenNameCOMMENT_LINE	187:9: -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:187:12: ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:187:12: ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DESCRIBE_CLUSTER	TokenNameIdentifier	 NODE  DESCRIBE  CLUSTER
,	TokenNameCOMMA	
"NODE_DESCRIBE_CLUSTER"	TokenNameStringLiteral	NODE_DESCRIBE_CLUSTER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
8	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:188:7: HELP EXIT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:188:7: HELP EXIT 
{	TokenNameLBRACE	
HELP60	TokenNameIdentifier	 HEL P60
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement987	TokenNameIdentifier	 FOLLOW  HELP in help Statement987
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP60	TokenNameIdentifier	 HEL P60
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
EXIT61	TokenNameIdentifier	 EXI T61
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
EXIT	TokenNameIdentifier	 EXIT
,	TokenNameCOMMA	
FOLLOW_EXIT_in_helpStatement989	TokenNameIdentifier	 FOLLOW  EXIT in help Statement989
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_EXIT	TokenNameIdentifier	 stream  EXIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
EXIT61	TokenNameIdentifier	 EXI T61
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 189:9: -> ^( NODE_HELP NODE_EXIT ) 	TokenNameCOMMENT_LINE	189:9: -> ^( NODE_HELP NODE_EXIT ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:189:12: ^( NODE_HELP NODE_EXIT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:189:12: ^( NODE_HELP NODE_EXIT ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_EXIT	TokenNameIdentifier	 NODE  EXIT
,	TokenNameCOMMA	
"NODE_EXIT"	TokenNameStringLiteral	NODE_EXIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
9	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:190:7: HELP QUIT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:190:7: HELP QUIT 
{	TokenNameLBRACE	
HELP62	TokenNameIdentifier	 HEL P62
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1014	TokenNameIdentifier	 FOLLOW  HELP in help Statement1014
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP62	TokenNameIdentifier	 HEL P62
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
QUIT63	TokenNameIdentifier	 QUI T63
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QUIT	TokenNameIdentifier	 QUIT
,	TokenNameCOMMA	
FOLLOW_QUIT_in_helpStatement1016	TokenNameIdentifier	 FOLLOW  QUIT in help Statement1016
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_QUIT	TokenNameIdentifier	 stream  QUIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
QUIT63	TokenNameIdentifier	 QUI T63
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 191:9: -> ^( NODE_HELP NODE_EXIT ) 	TokenNameCOMMENT_LINE	191:9: -> ^( NODE_HELP NODE_EXIT ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:191:12: ^( NODE_HELP NODE_EXIT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:191:12: ^( NODE_HELP NODE_EXIT ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_EXIT	TokenNameIdentifier	 NODE  EXIT
,	TokenNameCOMMA	
"NODE_EXIT"	TokenNameStringLiteral	NODE_EXIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
10	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:192:7: HELP SHOW 'CLUSTER NAME' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:192:7: HELP SHOW 'CLUSTER NAME' 
{	TokenNameLBRACE	
HELP64	TokenNameIdentifier	 HEL P64
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1041	TokenNameIdentifier	 FOLLOW  HELP in help Statement1041
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP64	TokenNameIdentifier	 HEL P64
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SHOW65	TokenNameIdentifier	 SHO W65
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_helpStatement1043	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1043
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW65	TokenNameIdentifier	 SHO W65
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal66	TokenNameIdentifier	 string literal66
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
113	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_113_in_helpStatement1045	TokenNameIdentifier	 FOLLOW 113 in help Statement1045
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_113	TokenNameIdentifier	 stream 113
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal66	TokenNameIdentifier	 string literal66
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 193:9: -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) 	TokenNameCOMMENT_LINE	193:9: -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:193:12: ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:193:12: ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_CLUSTER_NAME	TokenNameIdentifier	 NODE  SHOW  CLUSTER  NAME
,	TokenNameCOMMA	
"NODE_SHOW_CLUSTER_NAME"	TokenNameStringLiteral	NODE_SHOW_CLUSTER_NAME
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
11	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:194:7: HELP SHOW KEYSPACES 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:194:7: HELP SHOW KEYSPACES 
{	TokenNameLBRACE	
HELP67	TokenNameIdentifier	 HEL P67
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1069	TokenNameIdentifier	 FOLLOW  HELP in help Statement1069
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP67	TokenNameIdentifier	 HEL P67
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SHOW68	TokenNameIdentifier	 SHO W68
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_helpStatement1071	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1071
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW68	TokenNameIdentifier	 SHO W68
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACES69	TokenNameIdentifier	 KEYSPACE S69
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACES	TokenNameIdentifier	 KEYSPACES
,	TokenNameCOMMA	
FOLLOW_KEYSPACES_in_helpStatement1073	TokenNameIdentifier	 FOLLOW  KEYSPACES in help Statement1073
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACES	TokenNameIdentifier	 stream  KEYSPACES
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACES69	TokenNameIdentifier	 KEYSPACE S69
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 195:9: -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) 	TokenNameCOMMENT_LINE	195:9: -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:195:12: ^( NODE_HELP NODE_SHOW_KEYSPACES ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:195:12: ^( NODE_HELP NODE_SHOW_KEYSPACES ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_KEYSPACES	TokenNameIdentifier	 NODE  SHOW  KEYSPACES
,	TokenNameCOMMA	
"NODE_SHOW_KEYSPACES"	TokenNameStringLiteral	NODE_SHOW_KEYSPACES
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
12	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:196:7: HELP SHOW SCHEMA 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:196:7: HELP SHOW SCHEMA 
{	TokenNameLBRACE	
HELP70	TokenNameIdentifier	 HEL P70
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1098	TokenNameIdentifier	 FOLLOW  HELP in help Statement1098
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP70	TokenNameIdentifier	 HEL P70
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SHOW71	TokenNameIdentifier	 SHO W71
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_helpStatement1100	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1100
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW71	TokenNameIdentifier	 SHO W71
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SCHEMA72	TokenNameIdentifier	 SCHEM A72
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SCHEMA	TokenNameIdentifier	 SCHEMA
,	TokenNameCOMMA	
FOLLOW_SCHEMA_in_helpStatement1102	TokenNameIdentifier	 FOLLOW  SCHEMA in help Statement1102
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SCHEMA	TokenNameIdentifier	 stream  SCHEMA
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SCHEMA72	TokenNameIdentifier	 SCHEM A72
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 197:13: -> ^( NODE_HELP NODE_SHOW_SCHEMA ) 	TokenNameCOMMENT_LINE	197:13: -> ^( NODE_HELP NODE_SHOW_SCHEMA ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:197:16: ^( NODE_HELP NODE_SHOW_SCHEMA ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:197:16: ^( NODE_HELP NODE_SHOW_SCHEMA ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_SCHEMA	TokenNameIdentifier	 NODE  SHOW  SCHEMA
,	TokenNameCOMMA	
"NODE_SHOW_SCHEMA"	TokenNameStringLiteral	NODE_SHOW_SCHEMA
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
13	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:198:7: HELP SHOW API_VERSION 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:198:7: HELP SHOW API_VERSION 
{	TokenNameLBRACE	
HELP73	TokenNameIdentifier	 HEL P73
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1130	TokenNameIdentifier	 FOLLOW  HELP in help Statement1130
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP73	TokenNameIdentifier	 HEL P73
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SHOW74	TokenNameIdentifier	 SHO W74
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_helpStatement1132	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1132
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW74	TokenNameIdentifier	 SHO W74
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
API_VERSION75	TokenNameIdentifier	 API  VERSIO N75
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
API_VERSION	TokenNameIdentifier	 API  VERSION
,	TokenNameCOMMA	
FOLLOW_API_VERSION_in_helpStatement1134	TokenNameIdentifier	 FOLLOW  API  VERSION in help Statement1134
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_API_VERSION	TokenNameIdentifier	 stream  API  VERSION
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
API_VERSION75	TokenNameIdentifier	 API  VERSIO N75
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 199:9: -> ^( NODE_HELP NODE_SHOW_VERSION ) 	TokenNameCOMMENT_LINE	199:9: -> ^( NODE_HELP NODE_SHOW_VERSION ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:199:12: ^( NODE_HELP NODE_SHOW_VERSION ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:199:12: ^( NODE_HELP NODE_SHOW_VERSION ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_VERSION	TokenNameIdentifier	 NODE  SHOW  VERSION
,	TokenNameCOMMA	
"NODE_SHOW_VERSION"	TokenNameStringLiteral	NODE_SHOW_VERSION
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
14	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:200:7: HELP CREATE KEYSPACE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:200:7: HELP CREATE KEYSPACE 
{	TokenNameLBRACE	
HELP76	TokenNameIdentifier	 HEL P76
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1158	TokenNameIdentifier	 FOLLOW  HELP in help Statement1158
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP76	TokenNameIdentifier	 HEL P76
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CREATE77	TokenNameIdentifier	 CREAT E77
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CREATE	TokenNameIdentifier	 CREATE
,	TokenNameCOMMA	
FOLLOW_CREATE_in_helpStatement1160	TokenNameIdentifier	 FOLLOW  CREATE in help Statement1160
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CREATE	TokenNameIdentifier	 stream  CREATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CREATE77	TokenNameIdentifier	 CREAT E77
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACE78	TokenNameIdentifier	 KEYSPAC E78
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
,	TokenNameCOMMA	
FOLLOW_KEYSPACE_in_helpStatement1162	TokenNameIdentifier	 FOLLOW  KEYSPACE in help Statement1162
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACE78	TokenNameIdentifier	 KEYSPAC E78
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 201:9: -> ^( NODE_HELP NODE_ADD_KEYSPACE ) 	TokenNameCOMMENT_LINE	201:9: -> ^( NODE_HELP NODE_ADD_KEYSPACE ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:201:12: ^( NODE_HELP NODE_ADD_KEYSPACE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:201:12: ^( NODE_HELP NODE_ADD_KEYSPACE ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ADD_KEYSPACE	TokenNameIdentifier	 NODE  ADD  KEYSPACE
,	TokenNameCOMMA	
"NODE_ADD_KEYSPACE"	TokenNameStringLiteral	NODE_ADD_KEYSPACE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
15	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:202:7: HELP UPDATE KEYSPACE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:202:7: HELP UPDATE KEYSPACE 
{	TokenNameLBRACE	
HELP79	TokenNameIdentifier	 HEL P79
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1187	TokenNameIdentifier	 FOLLOW  HELP in help Statement1187
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP79	TokenNameIdentifier	 HEL P79
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
UPDATE80	TokenNameIdentifier	 UPDAT E80
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
UPDATE	TokenNameIdentifier	 UPDATE
,	TokenNameCOMMA	
FOLLOW_UPDATE_in_helpStatement1189	TokenNameIdentifier	 FOLLOW  UPDATE in help Statement1189
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
UPDATE80	TokenNameIdentifier	 UPDAT E80
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACE81	TokenNameIdentifier	 KEYSPAC E81
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
,	TokenNameCOMMA	
FOLLOW_KEYSPACE_in_helpStatement1191	TokenNameIdentifier	 FOLLOW  KEYSPACE in help Statement1191
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACE81	TokenNameIdentifier	 KEYSPAC E81
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 203:9: -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) 	TokenNameCOMMENT_LINE	203:9: -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:203:12: ^( NODE_HELP NODE_UPDATE_KEYSPACE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:203:12: ^( NODE_HELP NODE_UPDATE_KEYSPACE ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_UPDATE_KEYSPACE	TokenNameIdentifier	 NODE  UPDATE  KEYSPACE
,	TokenNameCOMMA	
"NODE_UPDATE_KEYSPACE"	TokenNameStringLiteral	NODE_UPDATE_KEYSPACE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
16	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:204:7: HELP CREATE COLUMN FAMILY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:204:7: HELP CREATE COLUMN FAMILY 
{	TokenNameLBRACE	
HELP82	TokenNameIdentifier	 HEL P82
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1215	TokenNameIdentifier	 FOLLOW  HELP in help Statement1215
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP82	TokenNameIdentifier	 HEL P82
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CREATE83	TokenNameIdentifier	 CREAT E83
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CREATE	TokenNameIdentifier	 CREATE
,	TokenNameCOMMA	
FOLLOW_CREATE_in_helpStatement1217	TokenNameIdentifier	 FOLLOW  CREATE in help Statement1217
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CREATE	TokenNameIdentifier	 stream  CREATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CREATE83	TokenNameIdentifier	 CREAT E83
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COLUMN84	TokenNameIdentifier	 COLUM N84
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COLUMN	TokenNameIdentifier	 COLUMN
,	TokenNameCOMMA	
FOLLOW_COLUMN_in_helpStatement1219	TokenNameIdentifier	 FOLLOW  COLUMN in help Statement1219
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COLUMN84	TokenNameIdentifier	 COLUM N84
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
FAMILY85	TokenNameIdentifier	 FAMIL Y85
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
FAMILY	TokenNameIdentifier	 FAMILY
,	TokenNameCOMMA	
FOLLOW_FAMILY_in_helpStatement1221	TokenNameIdentifier	 FOLLOW  FAMILY in help Statement1221
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
FAMILY85	TokenNameIdentifier	 FAMIL Y85
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 205:9: -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) 	TokenNameCOMMENT_LINE	205:9: -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:205:12: ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:205:12: ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ADD_COLUMN_FAMILY	TokenNameIdentifier	 NODE  ADD  COLUMN  FAMILY
,	TokenNameCOMMA	
"NODE_ADD_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_ADD_COLUMN_FAMILY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
17	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:206:7: HELP UPDATE COLUMN FAMILY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:206:7: HELP UPDATE COLUMN FAMILY 
{	TokenNameLBRACE	
HELP86	TokenNameIdentifier	 HEL P86
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1246	TokenNameIdentifier	 FOLLOW  HELP in help Statement1246
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP86	TokenNameIdentifier	 HEL P86
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
UPDATE87	TokenNameIdentifier	 UPDAT E87
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
UPDATE	TokenNameIdentifier	 UPDATE
,	TokenNameCOMMA	
FOLLOW_UPDATE_in_helpStatement1248	TokenNameIdentifier	 FOLLOW  UPDATE in help Statement1248
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
UPDATE87	TokenNameIdentifier	 UPDAT E87
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COLUMN88	TokenNameIdentifier	 COLUM N88
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COLUMN	TokenNameIdentifier	 COLUMN
,	TokenNameCOMMA	
FOLLOW_COLUMN_in_helpStatement1250	TokenNameIdentifier	 FOLLOW  COLUMN in help Statement1250
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COLUMN88	TokenNameIdentifier	 COLUM N88
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
FAMILY89	TokenNameIdentifier	 FAMIL Y89
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
FAMILY	TokenNameIdentifier	 FAMILY
,	TokenNameCOMMA	
FOLLOW_FAMILY_in_helpStatement1252	TokenNameIdentifier	 FOLLOW  FAMILY in help Statement1252
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
FAMILY89	TokenNameIdentifier	 FAMIL Y89
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 207:9: -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) 	TokenNameCOMMENT_LINE	207:9: -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:207:12: ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:207:12: ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_UPDATE_COLUMN_FAMILY	TokenNameIdentifier	 NODE  UPDATE  COLUMN  FAMILY
,	TokenNameCOMMA	
"NODE_UPDATE_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_UPDATE_COLUMN_FAMILY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
18	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:208:7: HELP DROP KEYSPACE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:208:7: HELP DROP KEYSPACE 
{	TokenNameLBRACE	
HELP90	TokenNameIdentifier	 HEL P90
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1276	TokenNameIdentifier	 FOLLOW  HELP in help Statement1276
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP90	TokenNameIdentifier	 HEL P90
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DROP91	TokenNameIdentifier	 DRO P91
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DROP	TokenNameIdentifier	 DROP
,	TokenNameCOMMA	
FOLLOW_DROP_in_helpStatement1278	TokenNameIdentifier	 FOLLOW  DROP in help Statement1278
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DROP	TokenNameIdentifier	 stream  DROP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DROP91	TokenNameIdentifier	 DRO P91
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACE92	TokenNameIdentifier	 KEYSPAC E92
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
,	TokenNameCOMMA	
FOLLOW_KEYSPACE_in_helpStatement1280	TokenNameIdentifier	 FOLLOW  KEYSPACE in help Statement1280
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACE92	TokenNameIdentifier	 KEYSPAC E92
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 209:9: -> ^( NODE_HELP NODE_DEL_KEYSPACE ) 	TokenNameCOMMENT_LINE	209:9: -> ^( NODE_HELP NODE_DEL_KEYSPACE ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:209:12: ^( NODE_HELP NODE_DEL_KEYSPACE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:209:12: ^( NODE_HELP NODE_DEL_KEYSPACE ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DEL_KEYSPACE	TokenNameIdentifier	 NODE  DEL  KEYSPACE
,	TokenNameCOMMA	
"NODE_DEL_KEYSPACE"	TokenNameStringLiteral	NODE_DEL_KEYSPACE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
19	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:210:7: HELP DROP COLUMN FAMILY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:210:7: HELP DROP COLUMN FAMILY 
{	TokenNameLBRACE	
HELP93	TokenNameIdentifier	 HEL P93
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1305	TokenNameIdentifier	 FOLLOW  HELP in help Statement1305
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP93	TokenNameIdentifier	 HEL P93
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DROP94	TokenNameIdentifier	 DRO P94
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DROP	TokenNameIdentifier	 DROP
,	TokenNameCOMMA	
FOLLOW_DROP_in_helpStatement1307	TokenNameIdentifier	 FOLLOW  DROP in help Statement1307
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DROP	TokenNameIdentifier	 stream  DROP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DROP94	TokenNameIdentifier	 DRO P94
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COLUMN95	TokenNameIdentifier	 COLUM N95
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COLUMN	TokenNameIdentifier	 COLUMN
,	TokenNameCOMMA	
FOLLOW_COLUMN_in_helpStatement1309	TokenNameIdentifier	 FOLLOW  COLUMN in help Statement1309
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COLUMN95	TokenNameIdentifier	 COLUM N95
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
FAMILY96	TokenNameIdentifier	 FAMIL Y96
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
FAMILY	TokenNameIdentifier	 FAMILY
,	TokenNameCOMMA	
FOLLOW_FAMILY_in_helpStatement1311	TokenNameIdentifier	 FOLLOW  FAMILY in help Statement1311
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
FAMILY96	TokenNameIdentifier	 FAMIL Y96
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 211:9: -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) 	TokenNameCOMMENT_LINE	211:9: -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:211:12: ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:211:12: ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DEL_COLUMN_FAMILY	TokenNameIdentifier	 NODE  DEL  COLUMN  FAMILY
,	TokenNameCOMMA	
"NODE_DEL_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_DEL_COLUMN_FAMILY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
20	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:212:7: HELP DROP INDEX 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:212:7: HELP DROP INDEX 
{	TokenNameLBRACE	
HELP97	TokenNameIdentifier	 HEL P97
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1336	TokenNameIdentifier	 FOLLOW  HELP in help Statement1336
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP97	TokenNameIdentifier	 HEL P97
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DROP98	TokenNameIdentifier	 DRO P98
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DROP	TokenNameIdentifier	 DROP
,	TokenNameCOMMA	
FOLLOW_DROP_in_helpStatement1338	TokenNameIdentifier	 FOLLOW  DROP in help Statement1338
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DROP	TokenNameIdentifier	 stream  DROP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DROP98	TokenNameIdentifier	 DRO P98
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
INDEX99	TokenNameIdentifier	 INDE X99
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INDEX	TokenNameIdentifier	 INDEX
,	TokenNameCOMMA	
FOLLOW_INDEX_in_helpStatement1340	TokenNameIdentifier	 FOLLOW  INDEX in help Statement1340
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_INDEX	TokenNameIdentifier	 stream  INDEX
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
INDEX99	TokenNameIdentifier	 INDE X99
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 213:9: -> ^( NODE_HELP NODE_DROP_INDEX ) 	TokenNameCOMMENT_LINE	213:9: -> ^( NODE_HELP NODE_DROP_INDEX ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:213:12: ^( NODE_HELP NODE_DROP_INDEX ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:213:12: ^( NODE_HELP NODE_DROP_INDEX ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DROP_INDEX	TokenNameIdentifier	 NODE  DROP  INDEX
,	TokenNameCOMMA	
"NODE_DROP_INDEX"	TokenNameStringLiteral	NODE_DROP_INDEX
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
21	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:214:7: HELP GET 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:214:7: HELP GET 
{	TokenNameLBRACE	
HELP100	TokenNameIdentifier	 HEL P100
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1364	TokenNameIdentifier	 FOLLOW  HELP in help Statement1364
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP100	TokenNameIdentifier	 HEL P100
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
GET101	TokenNameIdentifier	 GE T101
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
GET	TokenNameIdentifier	 GET
,	TokenNameCOMMA	
FOLLOW_GET_in_helpStatement1366	TokenNameIdentifier	 FOLLOW  GET in help Statement1366
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_GET	TokenNameIdentifier	 stream  GET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
GET101	TokenNameIdentifier	 GE T101
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 215:9: -> ^( NODE_HELP NODE_THRIFT_GET ) 	TokenNameCOMMENT_LINE	215:9: -> ^( NODE_HELP NODE_THRIFT_GET ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:215:12: ^( NODE_HELP NODE_THRIFT_GET ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:215:12: ^( NODE_HELP NODE_THRIFT_GET ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_GET	TokenNameIdentifier	 NODE  THRIFT  GET
,	TokenNameCOMMA	
"NODE_THRIFT_GET"	TokenNameStringLiteral	NODE_THRIFT_GET
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
22	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:216:7: HELP SET 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:216:7: HELP SET 
{	TokenNameLBRACE	
HELP102	TokenNameIdentifier	 HEL P102
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1391	TokenNameIdentifier	 FOLLOW  HELP in help Statement1391
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP102	TokenNameIdentifier	 HEL P102
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SET103	TokenNameIdentifier	 SE T103
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SET	TokenNameIdentifier	 SET
,	TokenNameCOMMA	
FOLLOW_SET_in_helpStatement1393	TokenNameIdentifier	 FOLLOW  SET in help Statement1393
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SET	TokenNameIdentifier	 stream  SET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SET103	TokenNameIdentifier	 SE T103
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 217:9: -> ^( NODE_HELP NODE_THRIFT_SET ) 	TokenNameCOMMENT_LINE	217:9: -> ^( NODE_HELP NODE_THRIFT_SET ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:217:12: ^( NODE_HELP NODE_THRIFT_SET ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:217:12: ^( NODE_HELP NODE_THRIFT_SET ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_SET	TokenNameIdentifier	 NODE  THRIFT  SET
,	TokenNameCOMMA	
"NODE_THRIFT_SET"	TokenNameStringLiteral	NODE_THRIFT_SET
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
23	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:218:7: HELP INCR 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:218:7: HELP INCR 
{	TokenNameLBRACE	
HELP104	TokenNameIdentifier	 HEL P104
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1418	TokenNameIdentifier	 FOLLOW  HELP in help Statement1418
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP104	TokenNameIdentifier	 HEL P104
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
INCR105	TokenNameIdentifier	 INC R105
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INCR	TokenNameIdentifier	 INCR
,	TokenNameCOMMA	
FOLLOW_INCR_in_helpStatement1420	TokenNameIdentifier	 FOLLOW  INCR in help Statement1420
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_INCR	TokenNameIdentifier	 stream  INCR
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
INCR105	TokenNameIdentifier	 INC R105
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 219:9: -> ^( NODE_HELP NODE_THRIFT_INCR ) 	TokenNameCOMMENT_LINE	219:9: -> ^( NODE_HELP NODE_THRIFT_INCR ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:219:12: ^( NODE_HELP NODE_THRIFT_INCR ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:219:12: ^( NODE_HELP NODE_THRIFT_INCR ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_INCR	TokenNameIdentifier	 NODE  THRIFT  INCR
,	TokenNameCOMMA	
"NODE_THRIFT_INCR"	TokenNameStringLiteral	NODE_THRIFT_INCR
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
24	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:220:7: HELP DECR 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:220:7: HELP DECR 
{	TokenNameLBRACE	
HELP106	TokenNameIdentifier	 HEL P106
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1444	TokenNameIdentifier	 FOLLOW  HELP in help Statement1444
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP106	TokenNameIdentifier	 HEL P106
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DECR107	TokenNameIdentifier	 DEC R107
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DECR	TokenNameIdentifier	 DECR
,	TokenNameCOMMA	
FOLLOW_DECR_in_helpStatement1446	TokenNameIdentifier	 FOLLOW  DECR in help Statement1446
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DECR	TokenNameIdentifier	 stream  DECR
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DECR107	TokenNameIdentifier	 DEC R107
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 221:9: -> ^( NODE_HELP NODE_THRIFT_DECR ) 	TokenNameCOMMENT_LINE	221:9: -> ^( NODE_HELP NODE_THRIFT_DECR ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:221:12: ^( NODE_HELP NODE_THRIFT_DECR ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:221:12: ^( NODE_HELP NODE_THRIFT_DECR ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_DECR	TokenNameIdentifier	 NODE  THRIFT  DECR
,	TokenNameCOMMA	
"NODE_THRIFT_DECR"	TokenNameStringLiteral	NODE_THRIFT_DECR
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
25	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:222:7: HELP DEL 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:222:7: HELP DEL 
{	TokenNameLBRACE	
HELP108	TokenNameIdentifier	 HEL P108
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1470	TokenNameIdentifier	 FOLLOW  HELP in help Statement1470
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP108	TokenNameIdentifier	 HEL P108
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DEL109	TokenNameIdentifier	 DE L109
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DEL	TokenNameIdentifier	 DEL
,	TokenNameCOMMA	
FOLLOW_DEL_in_helpStatement1472	TokenNameIdentifier	 FOLLOW  DEL in help Statement1472
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DEL	TokenNameIdentifier	 stream  DEL
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DEL109	TokenNameIdentifier	 DE L109
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 223:9: -> ^( NODE_HELP NODE_THRIFT_DEL ) 	TokenNameCOMMENT_LINE	223:9: -> ^( NODE_HELP NODE_THRIFT_DEL ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:223:12: ^( NODE_HELP NODE_THRIFT_DEL ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:223:12: ^( NODE_HELP NODE_THRIFT_DEL ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_DEL	TokenNameIdentifier	 NODE  THRIFT  DEL
,	TokenNameCOMMA	
"NODE_THRIFT_DEL"	TokenNameStringLiteral	NODE_THRIFT_DEL
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
26	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:224:7: HELP COUNT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:224:7: HELP COUNT 
{	TokenNameLBRACE	
HELP110	TokenNameIdentifier	 HEL P110
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1497	TokenNameIdentifier	 FOLLOW  HELP in help Statement1497
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP110	TokenNameIdentifier	 HEL P110
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COUNT111	TokenNameIdentifier	 COUN T111
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COUNT	TokenNameIdentifier	 COUNT
,	TokenNameCOMMA	
FOLLOW_COUNT_in_helpStatement1499	TokenNameIdentifier	 FOLLOW  COUNT in help Statement1499
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COUNT	TokenNameIdentifier	 stream  COUNT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COUNT111	TokenNameIdentifier	 COUN T111
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 225:9: -> ^( NODE_HELP NODE_THRIFT_COUNT ) 	TokenNameCOMMENT_LINE	225:9: -> ^( NODE_HELP NODE_THRIFT_COUNT ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:225:12: ^( NODE_HELP NODE_THRIFT_COUNT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:225:12: ^( NODE_HELP NODE_THRIFT_COUNT ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_COUNT	TokenNameIdentifier	 NODE  THRIFT  COUNT
,	TokenNameCOMMA	
"NODE_THRIFT_COUNT"	TokenNameStringLiteral	NODE_THRIFT_COUNT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
27	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:226:7: HELP LIST 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:226:7: HELP LIST 
{	TokenNameLBRACE	
HELP112	TokenNameIdentifier	 HEL P112
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1524	TokenNameIdentifier	 FOLLOW  HELP in help Statement1524
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP112	TokenNameIdentifier	 HEL P112
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
LIST113	TokenNameIdentifier	 LIS T113
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
LIST	TokenNameIdentifier	 LIST
,	TokenNameCOMMA	
FOLLOW_LIST_in_helpStatement1526	TokenNameIdentifier	 FOLLOW  LIST in help Statement1526
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_LIST	TokenNameIdentifier	 stream  LIST
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
LIST113	TokenNameIdentifier	 LIS T113
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 227:9: -> ^( NODE_HELP NODE_LIST ) 	TokenNameCOMMENT_LINE	227:9: -> ^( NODE_HELP NODE_LIST ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:227:12: ^( NODE_HELP NODE_LIST ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:227:12: ^( NODE_HELP NODE_LIST ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_LIST	TokenNameIdentifier	 NODE  LIST
,	TokenNameCOMMA	
"NODE_LIST"	TokenNameStringLiteral	NODE_LIST
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
28	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:228:7: HELP TRUNCATE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:228:7: HELP TRUNCATE 
{	TokenNameLBRACE	
HELP114	TokenNameIdentifier	 HEL P114
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1551	TokenNameIdentifier	 FOLLOW  HELP in help Statement1551
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP114	TokenNameIdentifier	 HEL P114
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
TRUNCATE115	TokenNameIdentifier	 TRUNCAT E115
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TRUNCATE	TokenNameIdentifier	 TRUNCATE
,	TokenNameCOMMA	
FOLLOW_TRUNCATE_in_helpStatement1553	TokenNameIdentifier	 FOLLOW  TRUNCATE in help Statement1553
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TRUNCATE	TokenNameIdentifier	 stream  TRUNCATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TRUNCATE115	TokenNameIdentifier	 TRUNCAT E115
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 229:9: -> ^( NODE_HELP NODE_TRUNCATE ) 	TokenNameCOMMENT_LINE	229:9: -> ^( NODE_HELP NODE_TRUNCATE ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:229:12: ^( NODE_HELP NODE_TRUNCATE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:229:12: ^( NODE_HELP NODE_TRUNCATE ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_TRUNCATE	TokenNameIdentifier	 NODE  TRUNCATE
,	TokenNameCOMMA	
"NODE_TRUNCATE"	TokenNameStringLiteral	NODE_TRUNCATE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
29	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:230:7: HELP ASSUME 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:230:7: HELP ASSUME 
{	TokenNameLBRACE	
HELP116	TokenNameIdentifier	 HEL P116
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1577	TokenNameIdentifier	 FOLLOW  HELP in help Statement1577
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP116	TokenNameIdentifier	 HEL P116
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ASSUME117	TokenNameIdentifier	 ASSUM E117
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
ASSUME	TokenNameIdentifier	 ASSUME
,	TokenNameCOMMA	
FOLLOW_ASSUME_in_helpStatement1579	TokenNameIdentifier	 FOLLOW  ASSUME in help Statement1579
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_ASSUME	TokenNameIdentifier	 stream  ASSUME
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
ASSUME117	TokenNameIdentifier	 ASSUM E117
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 231:9: -> ^( NODE_HELP NODE_ASSUME ) 	TokenNameCOMMENT_LINE	231:9: -> ^( NODE_HELP NODE_ASSUME ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:231:12: ^( NODE_HELP NODE_ASSUME ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:231:12: ^( NODE_HELP NODE_ASSUME ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ASSUME	TokenNameIdentifier	 NODE  ASSUME
,	TokenNameCOMMA	
"NODE_ASSUME"	TokenNameStringLiteral	NODE_ASSUME
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
30	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:232:7: HELP CONSISTENCYLEVEL 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:232:7: HELP CONSISTENCYLEVEL 
{	TokenNameLBRACE	
HELP118	TokenNameIdentifier	 HEL P118
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1603	TokenNameIdentifier	 FOLLOW  HELP in help Statement1603
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP118	TokenNameIdentifier	 HEL P118
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CONSISTENCYLEVEL119	TokenNameIdentifier	 CONSISTENCYLEVE L119
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CONSISTENCYLEVEL	TokenNameIdentifier	 CONSISTENCYLEVEL
,	TokenNameCOMMA	
FOLLOW_CONSISTENCYLEVEL_in_helpStatement1605	TokenNameIdentifier	 FOLLOW  CONSISTENCYLEVEL in help Statement1605
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CONSISTENCYLEVEL	TokenNameIdentifier	 stream  CONSISTENCYLEVEL
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CONSISTENCYLEVEL119	TokenNameIdentifier	 CONSISTENCYLEVE L119
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 233:9: -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) 	TokenNameCOMMENT_LINE	233:9: -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:233:12: ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:233:12: ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_CONSISTENCY_LEVEL	TokenNameIdentifier	 NODE  CONSISTENCY  LEVEL
,	TokenNameCOMMA	
"NODE_CONSISTENCY_LEVEL"	TokenNameStringLiteral	NODE_CONSISTENCY_LEVEL
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
31	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:234:7: HELP 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:234:7: HELP 
{	TokenNameLBRACE	
HELP120	TokenNameIdentifier	 HEL P120
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
HELP	TokenNameIdentifier	 HELP
,	TokenNameCOMMA	
FOLLOW_HELP_in_helpStatement1629	TokenNameIdentifier	 FOLLOW  HELP in help Statement1629
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_HELP	TokenNameIdentifier	 stream  HELP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
HELP120	TokenNameIdentifier	 HEL P120
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 235:9: -> ^( NODE_HELP ) 	TokenNameCOMMENT_LINE	235:9: -> ^( NODE_HELP ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:235:12: ^( NODE_HELP ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:235:12: ^( NODE_HELP ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
32	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:236:7: '?' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:236:7: '?' 
{	TokenNameLBRACE	
char_literal121	TokenNameIdentifier	 char literal121
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
114	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_114_in_helpStatement1652	TokenNameIdentifier	 FOLLOW 114 in help Statement1652
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_114	TokenNameIdentifier	 stream 114
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal121	TokenNameIdentifier	 char literal121
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 237:9: -> ^( NODE_HELP ) 	TokenNameCOMMENT_LINE	237:9: -> ^( NODE_HELP ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:237:12: ^( NODE_HELP ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:237:12: ^( NODE_HELP ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_HELP	TokenNameIdentifier	 NODE  HELP
,	TokenNameCOMMA	
"NODE_HELP"	TokenNameStringLiteral	NODE_HELP
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "helpStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "helpStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
exitStatement_return	TokenNameIdentifier	 exit Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "exitStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "exitStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:240:1: exitStatement : ( QUIT -> ^( NODE_EXIT ) | EXIT -> ^( NODE_EXIT ) ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:240:1: exitStatement : ( QUIT -> ^( NODE_EXIT ) | EXIT -> ^( NODE_EXIT ) ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
exitStatement_return	TokenNameIdentifier	 exit Statement return
exitStatement	TokenNameIdentifier	 exit Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
exitStatement_return	TokenNameIdentifier	 exit Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
exitStatement_return	TokenNameIdentifier	 exit Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
QUIT122	TokenNameIdentifier	 QUI T122
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
EXIT123	TokenNameIdentifier	 EXI T123
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
QUIT122_tree	TokenNameIdentifier	 QUI T122 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
EXIT123_tree	TokenNameIdentifier	 EXI T123 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_EXIT	TokenNameIdentifier	 stream  EXIT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token EXIT"	TokenNameStringLiteral	token EXIT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_QUIT	TokenNameIdentifier	 stream  QUIT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token QUIT"	TokenNameStringLiteral	token QUIT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:241:5: ( QUIT -> ^( NODE_EXIT ) | EXIT -> ^( NODE_EXIT ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:241:5: ( QUIT -> ^( NODE_EXIT ) | EXIT -> ^( NODE_EXIT ) ) 
int	TokenNameint	
alt7	TokenNameIdentifier	 alt7
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA7_0	TokenNameIdentifier	 L A7 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA7_0	TokenNameIdentifier	 L A7 0
==	TokenNameEQUAL_EQUAL	
QUIT	TokenNameIdentifier	 QUIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt7	TokenNameIdentifier	 alt7
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA7_0	TokenNameIdentifier	 L A7 0
==	TokenNameEQUAL_EQUAL	
EXIT	TokenNameIdentifier	 EXIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt7	TokenNameIdentifier	 alt7
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
7	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt7	TokenNameIdentifier	 alt7
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:241:7: QUIT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:241:7: QUIT 
{	TokenNameLBRACE	
QUIT122	TokenNameIdentifier	 QUI T122
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QUIT	TokenNameIdentifier	 QUIT
,	TokenNameCOMMA	
FOLLOW_QUIT_in_exitStatement1687	TokenNameIdentifier	 FOLLOW  QUIT in exit Statement1687
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_QUIT	TokenNameIdentifier	 stream  QUIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
QUIT122	TokenNameIdentifier	 QUI T122
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 241:12: -> ^( NODE_EXIT ) 	TokenNameCOMMENT_LINE	241:12: -> ^( NODE_EXIT ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:241:15: ^( NODE_EXIT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:241:15: ^( NODE_EXIT ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_EXIT	TokenNameIdentifier	 NODE  EXIT
,	TokenNameCOMMA	
"NODE_EXIT"	TokenNameStringLiteral	NODE_EXIT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:242:7: EXIT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:242:7: EXIT 
{	TokenNameLBRACE	
EXIT123	TokenNameIdentifier	 EXI T123
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
EXIT	TokenNameIdentifier	 EXIT
,	TokenNameCOMMA	
FOLLOW_EXIT_in_exitStatement1701	TokenNameIdentifier	 FOLLOW  EXIT in exit Statement1701
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_EXIT	TokenNameIdentifier	 stream  EXIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
EXIT123	TokenNameIdentifier	 EXI T123
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 242:12: -> ^( NODE_EXIT ) 	TokenNameCOMMENT_LINE	242:12: -> ^( NODE_EXIT ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:242:15: ^( NODE_EXIT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:242:15: ^( NODE_EXIT ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_EXIT	TokenNameIdentifier	 NODE  EXIT
,	TokenNameCOMMA	
"NODE_EXIT"	TokenNameStringLiteral	NODE_EXIT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "exitStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "exitStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
getStatement_return	TokenNameIdentifier	 get Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "getStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "getStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:245:1: getStatement : ( GET columnFamilyExpr ( 'AS' typeIdentifier )? ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) | GET columnFamily 'WHERE' getCondition ( 'AND' getCondition )* ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:245:1: getStatement : ( GET columnFamilyExpr ( 'AS' typeIdentifier )? ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) | GET columnFamily 'WHERE' getCondition ( 'AND' getCondition )* ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getStatement_return	TokenNameIdentifier	 get Statement return
getStatement	TokenNameIdentifier	 get Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getStatement_return	TokenNameIdentifier	 get Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getStatement_return	TokenNameIdentifier	 get Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
GET124	TokenNameIdentifier	 GE T124
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal126	TokenNameIdentifier	 string literal126
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal128	TokenNameIdentifier	 string literal128
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
GET129	TokenNameIdentifier	 GE T129
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal131	TokenNameIdentifier	 string literal131
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal133	TokenNameIdentifier	 string literal133
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal135	TokenNameIdentifier	 string literal135
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr125	TokenNameIdentifier	 column Family Expr125
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
typeIdentifier_return	TokenNameIdentifier	 type Identifier return
typeIdentifier127	TokenNameIdentifier	 type Identifier127
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily130	TokenNameIdentifier	 column Family130
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getCondition_return	TokenNameIdentifier	 get Condition return
getCondition132	TokenNameIdentifier	 get Condition132
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getCondition_return	TokenNameIdentifier	 get Condition return
getCondition134	TokenNameIdentifier	 get Condition134
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
limit_tree	TokenNameIdentifier	 limit tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
GET124_tree	TokenNameIdentifier	 GE T124 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal126_tree	TokenNameIdentifier	 string literal126 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal128_tree	TokenNameIdentifier	 string literal128 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
GET129_tree	TokenNameIdentifier	 GE T129 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal131_tree	TokenNameIdentifier	 string literal131 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal133_tree	TokenNameIdentifier	 string literal133 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal135_tree	TokenNameIdentifier	 string literal135 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_116	TokenNameIdentifier	 stream 116
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 116"	TokenNameStringLiteral	token 116
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token IntegerPositiveLiteral"	TokenNameStringLiteral	token IntegerPositiveLiteral
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_115	TokenNameIdentifier	 stream 115
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 115"	TokenNameStringLiteral	token 115
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_GET	TokenNameIdentifier	 stream  GET
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token GET"	TokenNameStringLiteral	token GET
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_AND	TokenNameIdentifier	 stream  AND
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token AND"	TokenNameStringLiteral	token AND
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_LIMIT	TokenNameIdentifier	 stream  LIMIT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token LIMIT"	TokenNameStringLiteral	token LIMIT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_typeIdentifier	TokenNameIdentifier	 stream type Identifier
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule typeIdentifier"	TokenNameStringLiteral	rule typeIdentifier
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_getCondition	TokenNameIdentifier	 stream get Condition
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule getCondition"	TokenNameStringLiteral	rule getCondition
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamilyExpr"	TokenNameStringLiteral	rule columnFamilyExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:5: ( GET columnFamilyExpr ( 'AS' typeIdentifier )? ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) | GET columnFamily 'WHERE' getCondition ( 'AND' getCondition )* ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:5: ( GET columnFamilyExpr ( 'AS' typeIdentifier )? ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) | GET columnFamily 'WHERE' getCondition ( 'AND' getCondition )* ( 'LIMIT' limit= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) ) 
int	TokenNameint	
alt12	TokenNameIdentifier	 alt12
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA12_0	TokenNameIdentifier	 L A12 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA12_0	TokenNameIdentifier	 L A12 0
==	TokenNameEQUAL_EQUAL	
GET	TokenNameIdentifier	 GET
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
int	TokenNameint	
LA12_1	TokenNameIdentifier	 L A12 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA12_1	TokenNameIdentifier	 L A12 1
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA12_1	TokenNameIdentifier	 L A12 1
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA12_1	TokenNameIdentifier	 L A12 1
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
int	TokenNameint	
LA12_2	TokenNameIdentifier	 L A12 2
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
3	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA12_2	TokenNameIdentifier	 L A12 2
==	TokenNameEQUAL_EQUAL	
123	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt12	TokenNameIdentifier	 alt12
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA12_2	TokenNameIdentifier	 L A12 2
==	TokenNameEQUAL_EQUAL	
116	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt12	TokenNameIdentifier	 alt12
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
12	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
2	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
12	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
12	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt12	TokenNameIdentifier	 alt12
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:7: GET columnFamilyExpr ( 'AS' typeIdentifier )? ( 'LIMIT' limit= IntegerPositiveLiteral )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:7: GET columnFamilyExpr ( 'AS' typeIdentifier )? ( 'LIMIT' limit= IntegerPositiveLiteral )? 
{	TokenNameLBRACE	
GET124	TokenNameIdentifier	 GE T124
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
GET	TokenNameIdentifier	 GET
,	TokenNameCOMMA	
FOLLOW_GET_in_getStatement1724	TokenNameIdentifier	 FOLLOW  GET in get Statement1724
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_GET	TokenNameIdentifier	 stream  GET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
GET124	TokenNameIdentifier	 GE T124
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyExpr_in_getStatement1726	TokenNameIdentifier	 FOLLOW column Family Expr in get Statement1726
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamilyExpr125	TokenNameIdentifier	 column Family Expr125
=	TokenNameEQUAL	
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamilyExpr125	TokenNameIdentifier	 column Family Expr125
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:28: ( 'AS' typeIdentifier )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:28: ( 'AS' typeIdentifier )? 
int	TokenNameint	
alt8	TokenNameIdentifier	 alt8
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA8_0	TokenNameIdentifier	 L A8 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA8_0	TokenNameIdentifier	 L A8 0
==	TokenNameEQUAL_EQUAL	
115	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt8	TokenNameIdentifier	 alt8
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt8	TokenNameIdentifier	 alt8
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:29: 'AS' typeIdentifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:29: 'AS' typeIdentifier 
{	TokenNameLBRACE	
string_literal126	TokenNameIdentifier	 string literal126
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
115	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_115_in_getStatement1729	TokenNameIdentifier	 FOLLOW 115 in get Statement1729
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_115	TokenNameIdentifier	 stream 115
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal126	TokenNameIdentifier	 string literal126
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_typeIdentifier_in_getStatement1731	TokenNameIdentifier	 FOLLOW type Identifier in get Statement1731
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
typeIdentifier127	TokenNameIdentifier	 type Identifier127
=	TokenNameEQUAL	
typeIdentifier	TokenNameIdentifier	 type Identifier
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_typeIdentifier	TokenNameIdentifier	 stream type Identifier
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
typeIdentifier127	TokenNameIdentifier	 type Identifier127
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:51: ( 'LIMIT' limit= IntegerPositiveLiteral )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:51: ( 'LIMIT' limit= IntegerPositiveLiteral )? 
int	TokenNameint	
alt9	TokenNameIdentifier	 alt9
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA9_0	TokenNameIdentifier	 L A9 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA9_0	TokenNameIdentifier	 L A9 0
==	TokenNameEQUAL_EQUAL	
LIMIT	TokenNameIdentifier	 LIMIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt9	TokenNameIdentifier	 alt9
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt9	TokenNameIdentifier	 alt9
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:52: 'LIMIT' limit= IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:246:52: 'LIMIT' limit= IntegerPositiveLiteral 
{	TokenNameLBRACE	
string_literal128	TokenNameIdentifier	 string literal128
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
LIMIT	TokenNameIdentifier	 LIMIT
,	TokenNameCOMMA	
FOLLOW_LIMIT_in_getStatement1736	TokenNameIdentifier	 FOLLOW  LIMIT in get Statement1736
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_LIMIT	TokenNameIdentifier	 stream  LIMIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal128	TokenNameIdentifier	 string literal128
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_getStatement1740	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in get Statement1740
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
limit	TokenNameIdentifier	 limit
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: typeIdentifier, limit, columnFamilyExpr 	TokenNameCOMMENT_LINE	elements: typeIdentifier, limit, columnFamilyExpr 
// token labels: limit 	TokenNameCOMMENT_LINE	token labels: limit 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_limit	TokenNameIdentifier	 stream limit
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token limit"	TokenNameStringLiteral	token limit
,	TokenNameCOMMA	
limit	TokenNameIdentifier	 limit
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 247:9: -> ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) 	TokenNameCOMMENT_LINE	247:9: -> ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:12: ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:12: ^( NODE_THRIFT_GET columnFamilyExpr ( ^( CONVERT_TO_TYPE typeIdentifier ) )? ( ^( NODE_LIMIT $limit) )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_GET	TokenNameIdentifier	 NODE  THRIFT  GET
,	TokenNameCOMMA	
"NODE_THRIFT_GET"	TokenNameStringLiteral	NODE_THRIFT_GET
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:47: ( ^( CONVERT_TO_TYPE typeIdentifier ) )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:47: ( ^( CONVERT_TO_TYPE typeIdentifier ) )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_typeIdentifier	TokenNameIdentifier	 stream type Identifier
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:49: ^( CONVERT_TO_TYPE typeIdentifier ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:49: ^( CONVERT_TO_TYPE typeIdentifier ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
CONVERT_TO_TYPE	TokenNameIdentifier	 CONVERT  TO  TYPE
,	TokenNameCOMMA	
"CONVERT_TO_TYPE"	TokenNameStringLiteral	CONVERT_TO_TYPE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_2	TokenNameIdentifier	 root 2
,	TokenNameCOMMA	
stream_typeIdentifier	TokenNameIdentifier	 stream type Identifier
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
stream_typeIdentifier	TokenNameIdentifier	 stream type Identifier
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:86: ( ^( NODE_LIMIT $limit) )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:86: ( ^( NODE_LIMIT $limit) )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:86: ^( NODE_LIMIT $limit) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:247:86: ^( NODE_LIMIT $limit) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_LIMIT	TokenNameIdentifier	 NODE  LIMIT
,	TokenNameCOMMA	
"NODE_LIMIT"	TokenNameStringLiteral	NODE_LIMIT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_2	TokenNameIdentifier	 root 2
,	TokenNameCOMMA	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:7: GET columnFamily 'WHERE' getCondition ( 'AND' getCondition )* ( 'LIMIT' limit= IntegerPositiveLiteral )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:7: GET columnFamily 'WHERE' getCondition ( 'AND' getCondition )* ( 'LIMIT' limit= IntegerPositiveLiteral )? 
{	TokenNameLBRACE	
GET129	TokenNameIdentifier	 GE T129
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
GET	TokenNameIdentifier	 GET
,	TokenNameCOMMA	
FOLLOW_GET_in_getStatement1785	TokenNameIdentifier	 FOLLOW  GET in get Statement1785
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_GET	TokenNameIdentifier	 stream  GET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
GET129	TokenNameIdentifier	 GE T129
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_getStatement1787	TokenNameIdentifier	 FOLLOW column Family in get Statement1787
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily130	TokenNameIdentifier	 column Family130
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily130	TokenNameIdentifier	 column Family130
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal131	TokenNameIdentifier	 string literal131
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
116	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_116_in_getStatement1789	TokenNameIdentifier	 FOLLOW 116 in get Statement1789
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_116	TokenNameIdentifier	 stream 116
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal131	TokenNameIdentifier	 string literal131
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_getCondition_in_getStatement1791	TokenNameIdentifier	 FOLLOW get Condition in get Statement1791
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
getCondition132	TokenNameIdentifier	 get Condition132
=	TokenNameEQUAL	
getCondition	TokenNameIdentifier	 get Condition
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_getCondition	TokenNameIdentifier	 stream get Condition
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
getCondition132	TokenNameIdentifier	 get Condition132
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:45: ( 'AND' getCondition )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:45: ( 'AND' getCondition )* 
loop10	TokenNameIdentifier	 loop10
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt10	TokenNameIdentifier	 alt10
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA10_0	TokenNameIdentifier	 L A10 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
AND	TokenNameIdentifier	 AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt10	TokenNameIdentifier	 alt10
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt10	TokenNameIdentifier	 alt10
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:46: 'AND' getCondition 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:46: 'AND' getCondition 
{	TokenNameLBRACE	
string_literal133	TokenNameIdentifier	 string literal133
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
AND	TokenNameIdentifier	 AND
,	TokenNameCOMMA	
FOLLOW_AND_in_getStatement1794	TokenNameIdentifier	 FOLLOW  AND in get Statement1794
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_AND	TokenNameIdentifier	 stream  AND
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal133	TokenNameIdentifier	 string literal133
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_getCondition_in_getStatement1796	TokenNameIdentifier	 FOLLOW get Condition in get Statement1796
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
getCondition134	TokenNameIdentifier	 get Condition134
=	TokenNameEQUAL	
getCondition	TokenNameIdentifier	 get Condition
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_getCondition	TokenNameIdentifier	 stream get Condition
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
getCondition134	TokenNameIdentifier	 get Condition134
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop10	TokenNameIdentifier	 loop10
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:67: ( 'LIMIT' limit= IntegerPositiveLiteral )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:67: ( 'LIMIT' limit= IntegerPositiveLiteral )? 
int	TokenNameint	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA11_0	TokenNameIdentifier	 L A11 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA11_0	TokenNameIdentifier	 L A11 0
==	TokenNameEQUAL_EQUAL	
LIMIT	TokenNameIdentifier	 LIMIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt11	TokenNameIdentifier	 alt11
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:68: 'LIMIT' limit= IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:248:68: 'LIMIT' limit= IntegerPositiveLiteral 
{	TokenNameLBRACE	
string_literal135	TokenNameIdentifier	 string literal135
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
LIMIT	TokenNameIdentifier	 LIMIT
,	TokenNameCOMMA	
FOLLOW_LIMIT_in_getStatement1801	TokenNameIdentifier	 FOLLOW  LIMIT in get Statement1801
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_LIMIT	TokenNameIdentifier	 stream  LIMIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal135	TokenNameIdentifier	 string literal135
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_getStatement1805	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in get Statement1805
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
limit	TokenNameIdentifier	 limit
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamily, getCondition, limit 	TokenNameCOMMENT_LINE	elements: columnFamily, getCondition, limit 
// token labels: limit 	TokenNameCOMMENT_LINE	token labels: limit 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_limit	TokenNameIdentifier	 stream limit
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token limit"	TokenNameStringLiteral	token limit
,	TokenNameCOMMA	
limit	TokenNameIdentifier	 limit
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 249:9: -> ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) 	TokenNameCOMMENT_LINE	249:9: -> ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:12: ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:12: ^( NODE_THRIFT_GET_WITH_CONDITIONS columnFamily ^( CONDITIONS ( getCondition )+ ) ( ^( NODE_LIMIT $limit) )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_GET_WITH_CONDITIONS	TokenNameIdentifier	 NODE  THRIFT  GET  WITH  CONDITIONS
,	TokenNameCOMMA	
"NODE_THRIFT_GET_WITH_CONDITIONS"	TokenNameStringLiteral	NODE_THRIFT_GET_WITH_CONDITIONS
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:59: ^( CONDITIONS ( getCondition )+ ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:59: ^( CONDITIONS ( getCondition )+ ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
CONDITIONS	TokenNameIdentifier	 CONDITIONS
,	TokenNameCOMMA	
"CONDITIONS"	TokenNameStringLiteral	CONDITIONS
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
(	TokenNameLPAREN	
stream_getCondition	TokenNameIdentifier	 stream get Condition
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
RewriteEarlyExitException	TokenNameIdentifier	 Rewrite Early Exit Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
stream_getCondition	TokenNameIdentifier	 stream get Condition
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_2	TokenNameIdentifier	 root 2
,	TokenNameCOMMA	
stream_getCondition	TokenNameIdentifier	 stream get Condition
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_getCondition	TokenNameIdentifier	 stream get Condition
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:87: ( ^( NODE_LIMIT $limit) )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:87: ( ^( NODE_LIMIT $limit) )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:87: ^( NODE_LIMIT $limit) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:249:87: ^( NODE_LIMIT $limit) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_2	TokenNameIdentifier	 root 2
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_LIMIT	TokenNameIdentifier	 NODE  LIMIT
,	TokenNameCOMMA	
"NODE_LIMIT"	TokenNameStringLiteral	NODE_LIMIT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_2	TokenNameIdentifier	 root 2
,	TokenNameCOMMA	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
root_2	TokenNameIdentifier	 root 2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "getStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "getStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
getCondition_return	TokenNameIdentifier	 get Condition return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "getCondition" 	TokenNameCOMMENT_LINE	$ANTLR start "getCondition" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:252:1: getCondition : columnOrSuperColumn operator value -> ^( CONDITION operator columnOrSuperColumn value ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:252:1: getCondition : columnOrSuperColumn operator value -> ^( CONDITION operator columnOrSuperColumn value ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getCondition_return	TokenNameIdentifier	 get Condition return
getCondition	TokenNameIdentifier	 get Condition
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getCondition_return	TokenNameIdentifier	 get Condition return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
getCondition_return	TokenNameIdentifier	 get Condition return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
columnOrSuperColumn136	TokenNameIdentifier	 column Or Super Column136
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
operator_return	TokenNameIdentifier	 operator return
operator137	TokenNameIdentifier	 operator137
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
value_return	TokenNameIdentifier	 value return
value138	TokenNameIdentifier	 value138
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_value	TokenNameIdentifier	 stream value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule value"	TokenNameStringLiteral	rule value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnOrSuperColumn	TokenNameIdentifier	 stream column Or Super Column
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnOrSuperColumn"	TokenNameStringLiteral	rule columnOrSuperColumn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_operator	TokenNameIdentifier	 stream operator
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule operator"	TokenNameStringLiteral	rule operator
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:253:5: ( columnOrSuperColumn operator value -> ^( CONDITION operator columnOrSuperColumn value ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:253:5: ( columnOrSuperColumn operator value -> ^( CONDITION operator columnOrSuperColumn value ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:253:7: columnOrSuperColumn operator value 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:253:7: columnOrSuperColumn operator value 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnOrSuperColumn_in_getCondition1856	TokenNameIdentifier	 FOLLOW column Or Super Column in get Condition1856
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnOrSuperColumn136	TokenNameIdentifier	 column Or Super Column136
=	TokenNameEQUAL	
columnOrSuperColumn	TokenNameIdentifier	 column Or Super Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnOrSuperColumn	TokenNameIdentifier	 stream column Or Super Column
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnOrSuperColumn136	TokenNameIdentifier	 column Or Super Column136
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_operator_in_getCondition1858	TokenNameIdentifier	 FOLLOW operator in get Condition1858
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
operator137	TokenNameIdentifier	 operator137
=	TokenNameEQUAL	
operator	TokenNameIdentifier	 operator
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_operator	TokenNameIdentifier	 stream operator
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
operator137	TokenNameIdentifier	 operator137
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_value_in_getCondition1860	TokenNameIdentifier	 FOLLOW value in get Condition1860
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
value138	TokenNameIdentifier	 value138
=	TokenNameEQUAL	
value	TokenNameIdentifier	 value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_value	TokenNameIdentifier	 stream value
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
value138	TokenNameIdentifier	 value138
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: value, columnOrSuperColumn, operator 	TokenNameCOMMENT_LINE	elements: value, columnOrSuperColumn, operator 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 254:9: -> ^( CONDITION operator columnOrSuperColumn value ) 	TokenNameCOMMENT_LINE	254:9: -> ^( CONDITION operator columnOrSuperColumn value ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:254:12: ^( CONDITION operator columnOrSuperColumn value ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:254:12: ^( CONDITION operator columnOrSuperColumn value ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
CONDITION	TokenNameIdentifier	 CONDITION
,	TokenNameCOMMA	
"CONDITION"	TokenNameStringLiteral	CONDITION
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_operator	TokenNameIdentifier	 stream operator
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnOrSuperColumn	TokenNameIdentifier	 stream column Or Super Column
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_value	TokenNameIdentifier	 stream value
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "getCondition" 	TokenNameCOMMENT_LINE	$ANTLR end "getCondition" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
operator_return	TokenNameIdentifier	 operator return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "operator" 	TokenNameCOMMENT_LINE	$ANTLR start "operator" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:257:1: operator : ( '=' | '>' | '<' | '>=' | '<=' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:257:1: operator : ( '=' | '>' | '<' | '>=' | '<=' ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
operator_return	TokenNameIdentifier	 operator return
operator	TokenNameIdentifier	 operator
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
operator_return	TokenNameIdentifier	 operator return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
operator_return	TokenNameIdentifier	 operator return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set139	TokenNameIdentifier	 set139
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set139_tree	TokenNameIdentifier	 set139 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:258:5: ( '=' | '>' | '<' | '>=' | '<=' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:258:5: ( '=' | '>' | '<' | '>=' | '<=' ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set139	TokenNameIdentifier	 set139
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
117	TokenNameIntegerLiteral	
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
121	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set139	TokenNameIdentifier	 set139
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "operator" 	TokenNameCOMMENT_LINE	$ANTLR end "operator" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
typeIdentifier_return	TokenNameIdentifier	 type Identifier return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "typeIdentifier" 	TokenNameCOMMENT_LINE	$ANTLR start "typeIdentifier" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:261:1: typeIdentifier : ( Identifier | StringLiteral | IntegerPositiveLiteral ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:261:1: typeIdentifier : ( Identifier | StringLiteral | IntegerPositiveLiteral ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
typeIdentifier_return	TokenNameIdentifier	 type Identifier return
typeIdentifier	TokenNameIdentifier	 type Identifier
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
typeIdentifier_return	TokenNameIdentifier	 type Identifier return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
typeIdentifier_return	TokenNameIdentifier	 type Identifier return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set140	TokenNameIdentifier	 set140
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set140_tree	TokenNameIdentifier	 set140 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:262:5: ( Identifier | StringLiteral | IntegerPositiveLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:262:5: ( Identifier | StringLiteral | IntegerPositiveLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set140	TokenNameIdentifier	 set140
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set140	TokenNameIdentifier	 set140
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "typeIdentifier" 	TokenNameCOMMENT_LINE	$ANTLR end "typeIdentifier" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
setStatement_return	TokenNameIdentifier	 set Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "setStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "setStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:265:1: setStatement : SET columnFamilyExpr '=' objectValue= value ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:265:1: setStatement : SET columnFamilyExpr '=' objectValue= value ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setStatement_return	TokenNameIdentifier	 set Statement return
setStatement	TokenNameIdentifier	 set Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setStatement_return	TokenNameIdentifier	 set Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setStatement_return	TokenNameIdentifier	 set Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
ttlValue	TokenNameIdentifier	 ttl Value
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SET141	TokenNameIdentifier	 SE T141
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal143	TokenNameIdentifier	 char literal143
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
WITH144	TokenNameIdentifier	 WIT H144
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TTL145	TokenNameIdentifier	 TT L145
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal146	TokenNameIdentifier	 char literal146
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
value_return	TokenNameIdentifier	 value return
objectValue	TokenNameIdentifier	 object Value
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr142	TokenNameIdentifier	 column Family Expr142
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
ttlValue_tree	TokenNameIdentifier	 ttl Value tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SET141_tree	TokenNameIdentifier	 SE T141 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal143_tree	TokenNameIdentifier	 char literal143 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
WITH144_tree	TokenNameIdentifier	 WIT H144 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TTL145_tree	TokenNameIdentifier	 TT L145 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal146_tree	TokenNameIdentifier	 char literal146 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_117	TokenNameIdentifier	 stream 117
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 117"	TokenNameStringLiteral	token 117
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token IntegerPositiveLiteral"	TokenNameStringLiteral	token IntegerPositiveLiteral
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SET	TokenNameIdentifier	 stream  SET
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SET"	TokenNameStringLiteral	token SET
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_WITH	TokenNameIdentifier	 stream  WITH
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token WITH"	TokenNameStringLiteral	token WITH
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_TTL	TokenNameIdentifier	 stream  TTL
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token TTL"	TokenNameStringLiteral	token TTL
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamilyExpr"	TokenNameStringLiteral	rule columnFamilyExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_value	TokenNameIdentifier	 stream value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule value"	TokenNameStringLiteral	rule value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:5: ( SET columnFamilyExpr '=' objectValue= value ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:5: ( SET columnFamilyExpr '=' objectValue= value ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? -> ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:7: SET columnFamilyExpr '=' objectValue= value ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:7: SET columnFamilyExpr '=' objectValue= value ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? 
{	TokenNameLBRACE	
SET141	TokenNameIdentifier	 SE T141
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SET	TokenNameIdentifier	 SET
,	TokenNameCOMMA	
FOLLOW_SET_in_setStatement1956	TokenNameIdentifier	 FOLLOW  SET in set Statement1956
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SET	TokenNameIdentifier	 stream  SET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SET141	TokenNameIdentifier	 SE T141
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyExpr_in_setStatement1958	TokenNameIdentifier	 FOLLOW column Family Expr in set Statement1958
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamilyExpr142	TokenNameIdentifier	 column Family Expr142
=	TokenNameEQUAL	
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamilyExpr142	TokenNameIdentifier	 column Family Expr142
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal143	TokenNameIdentifier	 char literal143
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
117	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_117_in_setStatement1960	TokenNameIdentifier	 FOLLOW 117 in set Statement1960
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_117	TokenNameIdentifier	 stream 117
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal143	TokenNameIdentifier	 char literal143
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_value_in_setStatement1964	TokenNameIdentifier	 FOLLOW value in set Statement1964
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
objectValue	TokenNameIdentifier	 object Value
=	TokenNameEQUAL	
value	TokenNameIdentifier	 value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_value	TokenNameIdentifier	 stream value
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
objectValue	TokenNameIdentifier	 object Value
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:50: ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:50: ( WITH TTL '=' ttlValue= IntegerPositiveLiteral )? 
int	TokenNameint	
alt13	TokenNameIdentifier	 alt13
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA13_0	TokenNameIdentifier	 L A13 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA13_0	TokenNameIdentifier	 L A13 0
==	TokenNameEQUAL_EQUAL	
WITH	TokenNameIdentifier	 WITH
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt13	TokenNameIdentifier	 alt13
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt13	TokenNameIdentifier	 alt13
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:51: WITH TTL '=' ttlValue= IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:266:51: WITH TTL '=' ttlValue= IntegerPositiveLiteral 
{	TokenNameLBRACE	
WITH144	TokenNameIdentifier	 WIT H144
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
WITH	TokenNameIdentifier	 WITH
,	TokenNameCOMMA	
FOLLOW_WITH_in_setStatement1967	TokenNameIdentifier	 FOLLOW  WITH in set Statement1967
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_WITH	TokenNameIdentifier	 stream  WITH
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
WITH144	TokenNameIdentifier	 WIT H144
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
TTL145	TokenNameIdentifier	 TT L145
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TTL	TokenNameIdentifier	 TTL
,	TokenNameCOMMA	
FOLLOW_TTL_in_setStatement1969	TokenNameIdentifier	 FOLLOW  TTL in set Statement1969
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TTL	TokenNameIdentifier	 stream  TTL
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TTL145	TokenNameIdentifier	 TT L145
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal146	TokenNameIdentifier	 char literal146
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
117	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_117_in_setStatement1971	TokenNameIdentifier	 FOLLOW 117 in set Statement1971
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_117	TokenNameIdentifier	 stream 117
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal146	TokenNameIdentifier	 char literal146
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ttlValue	TokenNameIdentifier	 ttl Value
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_setStatement1975	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in set Statement1975
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
ttlValue	TokenNameIdentifier	 ttl Value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: objectValue, ttlValue, columnFamilyExpr 	TokenNameCOMMENT_LINE	elements: objectValue, ttlValue, columnFamilyExpr 
// token labels: ttlValue 	TokenNameCOMMENT_LINE	token labels: ttlValue 
// rule labels: retval, objectValue 	TokenNameCOMMENT_LINE	rule labels: retval, objectValue 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_ttlValue	TokenNameIdentifier	 stream ttl Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token ttlValue"	TokenNameStringLiteral	token ttlValue
,	TokenNameCOMMA	
ttlValue	TokenNameIdentifier	 ttl Value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_objectValue	TokenNameIdentifier	 stream object Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule objectValue"	TokenNameStringLiteral	rule objectValue
,	TokenNameCOMMA	
objectValue	TokenNameIdentifier	 object Value
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
objectValue	TokenNameIdentifier	 object Value
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 267:9: -> ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) 	TokenNameCOMMENT_LINE	267:9: -> ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:267:12: ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:267:12: ^( NODE_THRIFT_SET columnFamilyExpr $objectValue ( $ttlValue)? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_SET	TokenNameIdentifier	 NODE  THRIFT  SET
,	TokenNameCOMMA	
"NODE_THRIFT_SET"	TokenNameStringLiteral	NODE_THRIFT_SET
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_objectValue	TokenNameIdentifier	 stream object Value
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:267:60: ( $ttlValue)? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:267:60: ( $ttlValue)? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_ttlValue	TokenNameIdentifier	 stream ttl Value
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_ttlValue	TokenNameIdentifier	 stream ttl Value
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_ttlValue	TokenNameIdentifier	 stream ttl Value
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "setStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "setStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
incrStatement_return	TokenNameIdentifier	 incr Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "incrStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "incrStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:270:1: incrStatement : ( INCR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) | DECR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:270:1: incrStatement : ( INCR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) | DECR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrStatement_return	TokenNameIdentifier	 incr Statement return
incrStatement	TokenNameIdentifier	 incr Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrStatement_return	TokenNameIdentifier	 incr Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrStatement_return	TokenNameIdentifier	 incr Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
INCR147	TokenNameIdentifier	 INC R147
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
BY149	TokenNameIdentifier	 B Y149
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DECR150	TokenNameIdentifier	 DEC R150
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
BY152	TokenNameIdentifier	 B Y152
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrementValue_return	TokenNameIdentifier	 increment Value return
byValue	TokenNameIdentifier	 by Value
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr148	TokenNameIdentifier	 column Family Expr148
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr151	TokenNameIdentifier	 column Family Expr151
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
INCR147_tree	TokenNameIdentifier	 INC R147 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
BY149_tree	TokenNameIdentifier	 B Y149 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DECR150_tree	TokenNameIdentifier	 DEC R150 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
BY152_tree	TokenNameIdentifier	 B Y152 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DECR	TokenNameIdentifier	 stream  DECR
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DECR"	TokenNameStringLiteral	token DECR
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_BY	TokenNameIdentifier	 stream  BY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token BY"	TokenNameStringLiteral	token BY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_INCR	TokenNameIdentifier	 stream  INCR
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token INCR"	TokenNameStringLiteral	token INCR
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamilyExpr"	TokenNameStringLiteral	rule columnFamilyExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_incrementValue	TokenNameIdentifier	 stream increment Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule incrementValue"	TokenNameStringLiteral	rule incrementValue
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:5: ( INCR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) | DECR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:5: ( INCR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) | DECR columnFamilyExpr ( BY byValue= incrementValue )? -> ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) ) 
int	TokenNameint	
alt16	TokenNameIdentifier	 alt16
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA16_0	TokenNameIdentifier	 L A16 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA16_0	TokenNameIdentifier	 L A16 0
==	TokenNameEQUAL_EQUAL	
INCR	TokenNameIdentifier	 INCR
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt16	TokenNameIdentifier	 alt16
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA16_0	TokenNameIdentifier	 L A16 0
==	TokenNameEQUAL_EQUAL	
DECR	TokenNameIdentifier	 DECR
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt16	TokenNameIdentifier	 alt16
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
16	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt16	TokenNameIdentifier	 alt16
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:7: INCR columnFamilyExpr ( BY byValue= incrementValue )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:7: INCR columnFamilyExpr ( BY byValue= incrementValue )? 
{	TokenNameLBRACE	
INCR147	TokenNameIdentifier	 INC R147
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INCR	TokenNameIdentifier	 INCR
,	TokenNameCOMMA	
FOLLOW_INCR_in_incrStatement2021	TokenNameIdentifier	 FOLLOW  INCR in incr Statement2021
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_INCR	TokenNameIdentifier	 stream  INCR
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
INCR147	TokenNameIdentifier	 INC R147
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyExpr_in_incrStatement2023	TokenNameIdentifier	 FOLLOW column Family Expr in incr Statement2023
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamilyExpr148	TokenNameIdentifier	 column Family Expr148
=	TokenNameEQUAL	
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamilyExpr148	TokenNameIdentifier	 column Family Expr148
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:29: ( BY byValue= incrementValue )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:29: ( BY byValue= incrementValue )? 
int	TokenNameint	
alt14	TokenNameIdentifier	 alt14
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA14_0	TokenNameIdentifier	 L A14 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA14_0	TokenNameIdentifier	 L A14 0
==	TokenNameEQUAL_EQUAL	
BY	TokenNameIdentifier	 BY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt14	TokenNameIdentifier	 alt14
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt14	TokenNameIdentifier	 alt14
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:30: BY byValue= incrementValue 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:271:30: BY byValue= incrementValue 
{	TokenNameLBRACE	
BY149	TokenNameIdentifier	 B Y149
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
BY	TokenNameIdentifier	 BY
,	TokenNameCOMMA	
FOLLOW_BY_in_incrStatement2026	TokenNameIdentifier	 FOLLOW  BY in incr Statement2026
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_BY	TokenNameIdentifier	 stream  BY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
BY149	TokenNameIdentifier	 B Y149
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_incrementValue_in_incrStatement2030	TokenNameIdentifier	 FOLLOW increment Value in incr Statement2030
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
byValue	TokenNameIdentifier	 by Value
=	TokenNameEQUAL	
incrementValue	TokenNameIdentifier	 increment Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_incrementValue	TokenNameIdentifier	 stream increment Value
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
byValue	TokenNameIdentifier	 by Value
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: byValue, columnFamilyExpr 	TokenNameCOMMENT_LINE	elements: byValue, columnFamilyExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval, byValue 	TokenNameCOMMENT_LINE	rule labels: retval, byValue 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_byValue	TokenNameIdentifier	 stream by Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule byValue"	TokenNameStringLiteral	rule byValue
,	TokenNameCOMMA	
byValue	TokenNameIdentifier	 by Value
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
byValue	TokenNameIdentifier	 by Value
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 272:9: -> ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) 	TokenNameCOMMENT_LINE	272:9: -> ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:272:12: ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:272:12: ^( NODE_THRIFT_INCR columnFamilyExpr ( $byValue)? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_INCR	TokenNameIdentifier	 NODE  THRIFT  INCR
,	TokenNameCOMMA	
"NODE_THRIFT_INCR"	TokenNameStringLiteral	NODE_THRIFT_INCR
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:272:48: ( $byValue)? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:272:48: ( $byValue)? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_byValue	TokenNameIdentifier	 stream by Value
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_byValue	TokenNameIdentifier	 stream by Value
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_byValue	TokenNameIdentifier	 stream by Value
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:273:7: DECR columnFamilyExpr ( BY byValue= incrementValue )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:273:7: DECR columnFamilyExpr ( BY byValue= incrementValue )? 
{	TokenNameLBRACE	
DECR150	TokenNameIdentifier	 DEC R150
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DECR	TokenNameIdentifier	 DECR
,	TokenNameCOMMA	
FOLLOW_DECR_in_incrStatement2064	TokenNameIdentifier	 FOLLOW  DECR in incr Statement2064
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DECR	TokenNameIdentifier	 stream  DECR
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DECR150	TokenNameIdentifier	 DEC R150
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyExpr_in_incrStatement2066	TokenNameIdentifier	 FOLLOW column Family Expr in incr Statement2066
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamilyExpr151	TokenNameIdentifier	 column Family Expr151
=	TokenNameEQUAL	
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamilyExpr151	TokenNameIdentifier	 column Family Expr151
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:273:29: ( BY byValue= incrementValue )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:273:29: ( BY byValue= incrementValue )? 
int	TokenNameint	
alt15	TokenNameIdentifier	 alt15
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA15_0	TokenNameIdentifier	 L A15 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA15_0	TokenNameIdentifier	 L A15 0
==	TokenNameEQUAL_EQUAL	
BY	TokenNameIdentifier	 BY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt15	TokenNameIdentifier	 alt15
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt15	TokenNameIdentifier	 alt15
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:273:30: BY byValue= incrementValue 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:273:30: BY byValue= incrementValue 
{	TokenNameLBRACE	
BY152	TokenNameIdentifier	 B Y152
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
BY	TokenNameIdentifier	 BY
,	TokenNameCOMMA	
FOLLOW_BY_in_incrStatement2069	TokenNameIdentifier	 FOLLOW  BY in incr Statement2069
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_BY	TokenNameIdentifier	 stream  BY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
BY152	TokenNameIdentifier	 B Y152
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_incrementValue_in_incrStatement2073	TokenNameIdentifier	 FOLLOW increment Value in incr Statement2073
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
byValue	TokenNameIdentifier	 by Value
=	TokenNameEQUAL	
incrementValue	TokenNameIdentifier	 increment Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_incrementValue	TokenNameIdentifier	 stream increment Value
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
byValue	TokenNameIdentifier	 by Value
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamilyExpr, byValue 	TokenNameCOMMENT_LINE	elements: columnFamilyExpr, byValue 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval, byValue 	TokenNameCOMMENT_LINE	rule labels: retval, byValue 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_byValue	TokenNameIdentifier	 stream by Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule byValue"	TokenNameStringLiteral	rule byValue
,	TokenNameCOMMA	
byValue	TokenNameIdentifier	 by Value
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
byValue	TokenNameIdentifier	 by Value
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 274:9: -> ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) 	TokenNameCOMMENT_LINE	274:9: -> ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:274:12: ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:274:12: ^( NODE_THRIFT_DECR columnFamilyExpr ( $byValue)? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_DECR	TokenNameIdentifier	 NODE  THRIFT  DECR
,	TokenNameCOMMA	
"NODE_THRIFT_DECR"	TokenNameStringLiteral	NODE_THRIFT_DECR
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:274:48: ( $byValue)? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:274:48: ( $byValue)? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_byValue	TokenNameIdentifier	 stream by Value
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_byValue	TokenNameIdentifier	 stream by Value
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_byValue	TokenNameIdentifier	 stream by Value
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "incrStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "incrStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
countStatement_return	TokenNameIdentifier	 count Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "countStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "countStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:277:1: countStatement : COUNT columnFamilyExpr -> ^( NODE_THRIFT_COUNT columnFamilyExpr ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:277:1: countStatement : COUNT columnFamilyExpr -> ^( NODE_THRIFT_COUNT columnFamilyExpr ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
countStatement_return	TokenNameIdentifier	 count Statement return
countStatement	TokenNameIdentifier	 count Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
countStatement_return	TokenNameIdentifier	 count Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
countStatement_return	TokenNameIdentifier	 count Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COUNT153	TokenNameIdentifier	 COUN T153
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr154	TokenNameIdentifier	 column Family Expr154
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COUNT153_tree	TokenNameIdentifier	 COUN T153 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_COUNT	TokenNameIdentifier	 stream  COUNT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token COUNT"	TokenNameStringLiteral	token COUNT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamilyExpr"	TokenNameStringLiteral	rule columnFamilyExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:278:5: ( COUNT columnFamilyExpr -> ^( NODE_THRIFT_COUNT columnFamilyExpr ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:278:5: ( COUNT columnFamilyExpr -> ^( NODE_THRIFT_COUNT columnFamilyExpr ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:278:7: COUNT columnFamilyExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:278:7: COUNT columnFamilyExpr 
{	TokenNameLBRACE	
COUNT153	TokenNameIdentifier	 COUN T153
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COUNT	TokenNameIdentifier	 COUNT
,	TokenNameCOMMA	
FOLLOW_COUNT_in_countStatement2116	TokenNameIdentifier	 FOLLOW  COUNT in count Statement2116
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COUNT	TokenNameIdentifier	 stream  COUNT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COUNT153	TokenNameIdentifier	 COUN T153
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyExpr_in_countStatement2118	TokenNameIdentifier	 FOLLOW column Family Expr in count Statement2118
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamilyExpr154	TokenNameIdentifier	 column Family Expr154
=	TokenNameEQUAL	
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamilyExpr154	TokenNameIdentifier	 column Family Expr154
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamilyExpr 	TokenNameCOMMENT_LINE	elements: columnFamilyExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 279:9: -> ^( NODE_THRIFT_COUNT columnFamilyExpr ) 	TokenNameCOMMENT_LINE	279:9: -> ^( NODE_THRIFT_COUNT columnFamilyExpr ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:279:12: ^( NODE_THRIFT_COUNT columnFamilyExpr ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:279:12: ^( NODE_THRIFT_COUNT columnFamilyExpr ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_COUNT	TokenNameIdentifier	 NODE  THRIFT  COUNT
,	TokenNameCOMMA	
"NODE_THRIFT_COUNT"	TokenNameStringLiteral	NODE_THRIFT_COUNT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "countStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "countStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
delStatement_return	TokenNameIdentifier	 del Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "delStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "delStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:282:1: delStatement : DEL columnFamilyExpr -> ^( NODE_THRIFT_DEL columnFamilyExpr ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:282:1: delStatement : DEL columnFamilyExpr -> ^( NODE_THRIFT_DEL columnFamilyExpr ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delStatement_return	TokenNameIdentifier	 del Statement return
delStatement	TokenNameIdentifier	 del Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delStatement_return	TokenNameIdentifier	 del Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delStatement_return	TokenNameIdentifier	 del Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DEL155	TokenNameIdentifier	 DE L155
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr156	TokenNameIdentifier	 column Family Expr156
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DEL155_tree	TokenNameIdentifier	 DE L155 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DEL	TokenNameIdentifier	 stream  DEL
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DEL"	TokenNameStringLiteral	token DEL
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamilyExpr"	TokenNameStringLiteral	rule columnFamilyExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:283:5: ( DEL columnFamilyExpr -> ^( NODE_THRIFT_DEL columnFamilyExpr ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:283:5: ( DEL columnFamilyExpr -> ^( NODE_THRIFT_DEL columnFamilyExpr ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:283:7: DEL columnFamilyExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:283:7: DEL columnFamilyExpr 
{	TokenNameLBRACE	
DEL155	TokenNameIdentifier	 DE L155
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DEL	TokenNameIdentifier	 DEL
,	TokenNameCOMMA	
FOLLOW_DEL_in_delStatement2152	TokenNameIdentifier	 FOLLOW  DEL in del Statement2152
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DEL	TokenNameIdentifier	 stream  DEL
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DEL155	TokenNameIdentifier	 DE L155
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyExpr_in_delStatement2154	TokenNameIdentifier	 FOLLOW column Family Expr in del Statement2154
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamilyExpr156	TokenNameIdentifier	 column Family Expr156
=	TokenNameEQUAL	
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamilyExpr156	TokenNameIdentifier	 column Family Expr156
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamilyExpr 	TokenNameCOMMENT_LINE	elements: columnFamilyExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 284:9: -> ^( NODE_THRIFT_DEL columnFamilyExpr ) 	TokenNameCOMMENT_LINE	284:9: -> ^( NODE_THRIFT_DEL columnFamilyExpr ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:284:12: ^( NODE_THRIFT_DEL columnFamilyExpr ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:284:12: ^( NODE_THRIFT_DEL columnFamilyExpr ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_THRIFT_DEL	TokenNameIdentifier	 NODE  THRIFT  DEL
,	TokenNameCOMMA	
"NODE_THRIFT_DEL"	TokenNameStringLiteral	NODE_THRIFT_DEL
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamilyExpr	TokenNameIdentifier	 stream column Family Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "delStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "delStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
showStatement_return	TokenNameIdentifier	 show Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "showStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "showStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:287:1: showStatement : ( showClusterName | showVersion | showKeyspaces | showSchema ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:287:1: showStatement : ( showClusterName | showVersion | showKeyspaces | showSchema ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showStatement_return	TokenNameIdentifier	 show Statement return
showStatement	TokenNameIdentifier	 show Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showStatement_return	TokenNameIdentifier	 show Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showStatement_return	TokenNameIdentifier	 show Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showClusterName_return	TokenNameIdentifier	 show Cluster Name return
showClusterName157	TokenNameIdentifier	 show Cluster Name157
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showVersion_return	TokenNameIdentifier	 show Version return
showVersion158	TokenNameIdentifier	 show Version158
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showKeyspaces_return	TokenNameIdentifier	 show Keyspaces return
showKeyspaces159	TokenNameIdentifier	 show Keyspaces159
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showSchema_return	TokenNameIdentifier	 show Schema return
showSchema160	TokenNameIdentifier	 show Schema160
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:288:5: ( showClusterName | showVersion | showKeyspaces | showSchema ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:288:5: ( showClusterName | showVersion | showKeyspaces | showSchema ) 
int	TokenNameint	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA17_0	TokenNameIdentifier	 L A17 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA17_0	TokenNameIdentifier	 L A17 0
==	TokenNameEQUAL_EQUAL	
SHOW	TokenNameIdentifier	 SHOW
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
113	TokenNameIntegerLiteral	
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
API_VERSION	TokenNameIdentifier	 API  VERSION
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
KEYSPACES	TokenNameIdentifier	 KEYSPACES
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
SCHEMA	TokenNameIdentifier	 SCHEMA
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
17	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
17	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt17	TokenNameIdentifier	 alt17
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:288:7: showClusterName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:288:7: showClusterName 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_showClusterName_in_showStatement2188	TokenNameIdentifier	 FOLLOW show Cluster Name in show Statement2188
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
showClusterName157	TokenNameIdentifier	 show Cluster Name157
=	TokenNameEQUAL	
showClusterName	TokenNameIdentifier	 show Cluster Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
showClusterName157	TokenNameIdentifier	 show Cluster Name157
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:289:7: showVersion 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:289:7: showVersion 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_showVersion_in_showStatement2196	TokenNameIdentifier	 FOLLOW show Version in show Statement2196
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
showVersion158	TokenNameIdentifier	 show Version158
=	TokenNameEQUAL	
showVersion	TokenNameIdentifier	 show Version
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
showVersion158	TokenNameIdentifier	 show Version158
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:290:7: showKeyspaces 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:290:7: showKeyspaces 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_showKeyspaces_in_showStatement2204	TokenNameIdentifier	 FOLLOW show Keyspaces in show Statement2204
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
showKeyspaces159	TokenNameIdentifier	 show Keyspaces159
=	TokenNameEQUAL	
showKeyspaces	TokenNameIdentifier	 show Keyspaces
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
showKeyspaces159	TokenNameIdentifier	 show Keyspaces159
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:291:7: showSchema 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:291:7: showSchema 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_showSchema_in_showStatement2212	TokenNameIdentifier	 FOLLOW show Schema in show Statement2212
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
showSchema160	TokenNameIdentifier	 show Schema160
=	TokenNameEQUAL	
showSchema	TokenNameIdentifier	 show Schema
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
showSchema160	TokenNameIdentifier	 show Schema160
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "showStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "showStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
listStatement_return	TokenNameIdentifier	 list Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "listStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "listStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:294:1: listStatement : LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? -> ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:294:1: listStatement : LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? -> ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
listStatement_return	TokenNameIdentifier	 list Statement return
listStatement	TokenNameIdentifier	 list Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
listStatement_return	TokenNameIdentifier	 list Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
listStatement_return	TokenNameIdentifier	 list Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
LIST161	TokenNameIdentifier	 LIS T161
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily162	TokenNameIdentifier	 column Family162
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyRangeExpr_return	TokenNameIdentifier	 key Range Expr return
keyRangeExpr163	TokenNameIdentifier	 key Range Expr163
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowLimitExpr_return	TokenNameIdentifier	 row Limit Expr return
rowLimitExpr164	TokenNameIdentifier	 row Limit Expr164
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnLimitExpr_return	TokenNameIdentifier	 column Limit Expr return
columnLimitExpr165	TokenNameIdentifier	 column Limit Expr165
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
LIST161_tree	TokenNameIdentifier	 LIS T161 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_LIST	TokenNameIdentifier	 stream  LIST
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token LIST"	TokenNameStringLiteral	token LIST
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_rowLimitExpr	TokenNameIdentifier	 stream row Limit Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule rowLimitExpr"	TokenNameStringLiteral	rule rowLimitExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnLimitExpr	TokenNameIdentifier	 stream column Limit Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnLimitExpr"	TokenNameStringLiteral	rule columnLimitExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyRangeExpr	TokenNameIdentifier	 stream key Range Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyRangeExpr"	TokenNameStringLiteral	rule keyRangeExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:5: ( LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? -> ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:5: ( LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? -> ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:7: LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:7: LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? 
{	TokenNameLBRACE	
LIST161	TokenNameIdentifier	 LIS T161
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
LIST	TokenNameIdentifier	 LIST
,	TokenNameCOMMA	
FOLLOW_LIST_in_listStatement2229	TokenNameIdentifier	 FOLLOW  LIST in list Statement2229
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_LIST	TokenNameIdentifier	 stream  LIST
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
LIST161	TokenNameIdentifier	 LIS T161
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_listStatement2231	TokenNameIdentifier	 FOLLOW column Family in list Statement2231
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily162	TokenNameIdentifier	 column Family162
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily162	TokenNameIdentifier	 column Family162
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:25: ( keyRangeExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:25: ( keyRangeExpr )? 
int	TokenNameint	
alt18	TokenNameIdentifier	 alt18
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA18_0	TokenNameIdentifier	 L A18 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA18_0	TokenNameIdentifier	 L A18 0
==	TokenNameEQUAL_EQUAL	
123	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt18	TokenNameIdentifier	 alt18
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt18	TokenNameIdentifier	 alt18
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: keyRangeExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: keyRangeExpr 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyRangeExpr_in_listStatement2233	TokenNameIdentifier	 FOLLOW key Range Expr in list Statement2233
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyRangeExpr163	TokenNameIdentifier	 key Range Expr163
=	TokenNameEQUAL	
keyRangeExpr	TokenNameIdentifier	 key Range Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyRangeExpr	TokenNameIdentifier	 stream key Range Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyRangeExpr163	TokenNameIdentifier	 key Range Expr163
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:39: ( rowLimitExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:39: ( rowLimitExpr )? 
int	TokenNameint	
alt19	TokenNameIdentifier	 alt19
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA19_0	TokenNameIdentifier	 L A19 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA19_0	TokenNameIdentifier	 L A19 0
==	TokenNameEQUAL_EQUAL	
LIMIT	TokenNameIdentifier	 LIMIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt19	TokenNameIdentifier	 alt19
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt19	TokenNameIdentifier	 alt19
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: rowLimitExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: rowLimitExpr 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_rowLimitExpr_in_listStatement2236	TokenNameIdentifier	 FOLLOW row Limit Expr in list Statement2236
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
rowLimitExpr164	TokenNameIdentifier	 row Limit Expr164
=	TokenNameEQUAL	
rowLimitExpr	TokenNameIdentifier	 row Limit Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_rowLimitExpr	TokenNameIdentifier	 stream row Limit Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
rowLimitExpr164	TokenNameIdentifier	 row Limit Expr164
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:53: ( columnLimitExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:295:53: ( columnLimitExpr )? 
int	TokenNameint	
alt20	TokenNameIdentifier	 alt20
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA20_0	TokenNameIdentifier	 L A20 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA20_0	TokenNameIdentifier	 L A20 0
==	TokenNameEQUAL_EQUAL	
129	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt20	TokenNameIdentifier	 alt20
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt20	TokenNameIdentifier	 alt20
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: columnLimitExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: columnLimitExpr 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnLimitExpr_in_listStatement2239	TokenNameIdentifier	 FOLLOW column Limit Expr in list Statement2239
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnLimitExpr165	TokenNameIdentifier	 column Limit Expr165
=	TokenNameEQUAL	
columnLimitExpr	TokenNameIdentifier	 column Limit Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnLimitExpr	TokenNameIdentifier	 stream column Limit Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnLimitExpr165	TokenNameIdentifier	 column Limit Expr165
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: rowLimitExpr, columnFamily, keyRangeExpr, columnLimitExpr 	TokenNameCOMMENT_LINE	elements: rowLimitExpr, columnFamily, keyRangeExpr, columnLimitExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 296:9: -> ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) 	TokenNameCOMMENT_LINE	296:9: -> ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:12: ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:12: ^( NODE_LIST columnFamily ( keyRangeExpr )? ( rowLimitExpr )? ( columnLimitExpr )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_LIST	TokenNameIdentifier	 NODE  LIST
,	TokenNameCOMMA	
"NODE_LIST"	TokenNameStringLiteral	NODE_LIST
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:37: ( keyRangeExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:37: ( keyRangeExpr )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_keyRangeExpr	TokenNameIdentifier	 stream key Range Expr
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyRangeExpr	TokenNameIdentifier	 stream key Range Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_keyRangeExpr	TokenNameIdentifier	 stream key Range Expr
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:51: ( rowLimitExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:51: ( rowLimitExpr )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_rowLimitExpr	TokenNameIdentifier	 stream row Limit Expr
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_rowLimitExpr	TokenNameIdentifier	 stream row Limit Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_rowLimitExpr	TokenNameIdentifier	 stream row Limit Expr
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:65: ( columnLimitExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:296:65: ( columnLimitExpr )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_columnLimitExpr	TokenNameIdentifier	 stream column Limit Expr
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnLimitExpr	TokenNameIdentifier	 stream column Limit Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_columnLimitExpr	TokenNameIdentifier	 stream column Limit Expr
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "listStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "listStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
truncateStatement_return	TokenNameIdentifier	 truncate Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "truncateStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "truncateStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:299:1: truncateStatement : TRUNCATE columnFamily -> ^( NODE_TRUNCATE columnFamily ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:299:1: truncateStatement : TRUNCATE columnFamily -> ^( NODE_TRUNCATE columnFamily ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
truncateStatement_return	TokenNameIdentifier	 truncate Statement return
truncateStatement	TokenNameIdentifier	 truncate Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
truncateStatement_return	TokenNameIdentifier	 truncate Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
truncateStatement_return	TokenNameIdentifier	 truncate Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TRUNCATE166	TokenNameIdentifier	 TRUNCAT E166
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily167	TokenNameIdentifier	 column Family167
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TRUNCATE166_tree	TokenNameIdentifier	 TRUNCAT E166 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_TRUNCATE	TokenNameIdentifier	 stream  TRUNCATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token TRUNCATE"	TokenNameStringLiteral	token TRUNCATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:300:5: ( TRUNCATE columnFamily -> ^( NODE_TRUNCATE columnFamily ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:300:5: ( TRUNCATE columnFamily -> ^( NODE_TRUNCATE columnFamily ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:300:7: TRUNCATE columnFamily 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:300:7: TRUNCATE columnFamily 
{	TokenNameLBRACE	
TRUNCATE166	TokenNameIdentifier	 TRUNCAT E166
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TRUNCATE	TokenNameIdentifier	 TRUNCATE
,	TokenNameCOMMA	
FOLLOW_TRUNCATE_in_truncateStatement2282	TokenNameIdentifier	 FOLLOW  TRUNCATE in truncate Statement2282
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TRUNCATE	TokenNameIdentifier	 stream  TRUNCATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TRUNCATE166	TokenNameIdentifier	 TRUNCAT E166
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_truncateStatement2284	TokenNameIdentifier	 FOLLOW column Family in truncate Statement2284
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily167	TokenNameIdentifier	 column Family167
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily167	TokenNameIdentifier	 column Family167
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamily 	TokenNameCOMMENT_LINE	elements: columnFamily 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 301:9: -> ^( NODE_TRUNCATE columnFamily ) 	TokenNameCOMMENT_LINE	301:9: -> ^( NODE_TRUNCATE columnFamily ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:301:12: ^( NODE_TRUNCATE columnFamily ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:301:12: ^( NODE_TRUNCATE columnFamily ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_TRUNCATE	TokenNameIdentifier	 NODE  TRUNCATE
,	TokenNameCOMMA	
"NODE_TRUNCATE"	TokenNameStringLiteral	NODE_TRUNCATE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "truncateStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "truncateStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
assumeStatement_return	TokenNameIdentifier	 assume Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "assumeStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "assumeStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:304:1: assumeStatement : ASSUME columnFamily assumptionElement= Identifier 'AS' entityName -> ^( NODE_ASSUME columnFamily $assumptionElement entityName ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:304:1: assumeStatement : ASSUME columnFamily assumptionElement= Identifier 'AS' entityName -> ^( NODE_ASSUME columnFamily $assumptionElement entityName ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
assumeStatement_return	TokenNameIdentifier	 assume Statement return
assumeStatement	TokenNameIdentifier	 assume Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
assumeStatement_return	TokenNameIdentifier	 assume Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
assumeStatement_return	TokenNameIdentifier	 assume Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
assumptionElement	TokenNameIdentifier	 assumption Element
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
ASSUME168	TokenNameIdentifier	 ASSUM E168
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal170	TokenNameIdentifier	 string literal170
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily169	TokenNameIdentifier	 column Family169
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName171	TokenNameIdentifier	 entity Name171
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
assumptionElement_tree	TokenNameIdentifier	 assumption Element tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
ASSUME168_tree	TokenNameIdentifier	 ASSUM E168 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal170_tree	TokenNameIdentifier	 string literal170 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_115	TokenNameIdentifier	 stream 115
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 115"	TokenNameStringLiteral	token 115
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_ASSUME	TokenNameIdentifier	 stream  ASSUME
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token ASSUME"	TokenNameStringLiteral	token ASSUME
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_Identifier	TokenNameIdentifier	 stream  Identifier
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token Identifier"	TokenNameStringLiteral	token Identifier
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_entityName	TokenNameIdentifier	 stream entity Name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule entityName"	TokenNameStringLiteral	rule entityName
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:305:5: ( ASSUME columnFamily assumptionElement= Identifier 'AS' entityName -> ^( NODE_ASSUME columnFamily $assumptionElement entityName ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:305:5: ( ASSUME columnFamily assumptionElement= Identifier 'AS' entityName -> ^( NODE_ASSUME columnFamily $assumptionElement entityName ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:305:7: ASSUME columnFamily assumptionElement= Identifier 'AS' entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:305:7: ASSUME columnFamily assumptionElement= Identifier 'AS' entityName 
{	TokenNameLBRACE	
ASSUME168	TokenNameIdentifier	 ASSUM E168
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
ASSUME	TokenNameIdentifier	 ASSUME
,	TokenNameCOMMA	
FOLLOW_ASSUME_in_assumeStatement2317	TokenNameIdentifier	 FOLLOW  ASSUME in assume Statement2317
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_ASSUME	TokenNameIdentifier	 stream  ASSUME
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
ASSUME168	TokenNameIdentifier	 ASSUM E168
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_assumeStatement2319	TokenNameIdentifier	 FOLLOW column Family in assume Statement2319
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily169	TokenNameIdentifier	 column Family169
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily169	TokenNameIdentifier	 column Family169
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
assumptionElement	TokenNameIdentifier	 assumption Element
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_assumeStatement2323	TokenNameIdentifier	 FOLLOW  Identifier in assume Statement2323
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_Identifier	TokenNameIdentifier	 stream  Identifier
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
assumptionElement	TokenNameIdentifier	 assumption Element
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal170	TokenNameIdentifier	 string literal170
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
115	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_115_in_assumeStatement2325	TokenNameIdentifier	 FOLLOW 115 in assume Statement2325
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_115	TokenNameIdentifier	 stream 115
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal170	TokenNameIdentifier	 string literal170
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_assumeStatement2327	TokenNameIdentifier	 FOLLOW entity Name in assume Statement2327
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName171	TokenNameIdentifier	 entity Name171
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_entityName	TokenNameIdentifier	 stream entity Name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
entityName171	TokenNameIdentifier	 entity Name171
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamily, entityName, assumptionElement 	TokenNameCOMMENT_LINE	elements: columnFamily, entityName, assumptionElement 
// token labels: assumptionElement 	TokenNameCOMMENT_LINE	token labels: assumptionElement 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_assumptionElement	TokenNameIdentifier	 stream assumption Element
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token assumptionElement"	TokenNameStringLiteral	token assumptionElement
,	TokenNameCOMMA	
assumptionElement	TokenNameIdentifier	 assumption Element
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 306:9: -> ^( NODE_ASSUME columnFamily $assumptionElement entityName ) 	TokenNameCOMMENT_LINE	306:9: -> ^( NODE_ASSUME columnFamily $assumptionElement entityName ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:306:12: ^( NODE_ASSUME columnFamily $assumptionElement entityName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:306:12: ^( NODE_ASSUME columnFamily $assumptionElement entityName ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ASSUME	TokenNameIdentifier	 NODE  ASSUME
,	TokenNameCOMMA	
"NODE_ASSUME"	TokenNameStringLiteral	NODE_ASSUME
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_assumptionElement	TokenNameIdentifier	 stream assumption Element
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_entityName	TokenNameIdentifier	 stream entity Name
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "assumeStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "assumeStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
consistencyLevelStatement_return	TokenNameIdentifier	 consistency Level Statement return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "consistencyLevelStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "consistencyLevelStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:309:1: consistencyLevelStatement : CONSISTENCYLEVEL 'AS' defaultType= Identifier -> ^( NODE_CONSISTENCY_LEVEL $defaultType) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:309:1: consistencyLevelStatement : CONSISTENCYLEVEL 'AS' defaultType= Identifier -> ^( NODE_CONSISTENCY_LEVEL $defaultType) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
consistencyLevelStatement_return	TokenNameIdentifier	 consistency Level Statement return
consistencyLevelStatement	TokenNameIdentifier	 consistency Level Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
consistencyLevelStatement_return	TokenNameIdentifier	 consistency Level Statement return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
consistencyLevelStatement_return	TokenNameIdentifier	 consistency Level Statement return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
defaultType	TokenNameIdentifier	 default Type
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CONSISTENCYLEVEL172	TokenNameIdentifier	 CONSISTENCYLEVE L172
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal173	TokenNameIdentifier	 string literal173
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
defaultType_tree	TokenNameIdentifier	 default Type tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CONSISTENCYLEVEL172_tree	TokenNameIdentifier	 CONSISTENCYLEVE L172 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal173_tree	TokenNameIdentifier	 string literal173 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_115	TokenNameIdentifier	 stream 115
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 115"	TokenNameStringLiteral	token 115
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CONSISTENCYLEVEL	TokenNameIdentifier	 stream  CONSISTENCYLEVEL
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CONSISTENCYLEVEL"	TokenNameStringLiteral	token CONSISTENCYLEVEL
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_Identifier	TokenNameIdentifier	 stream  Identifier
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token Identifier"	TokenNameStringLiteral	token Identifier
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:310:5: ( CONSISTENCYLEVEL 'AS' defaultType= Identifier -> ^( NODE_CONSISTENCY_LEVEL $defaultType) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:310:5: ( CONSISTENCYLEVEL 'AS' defaultType= Identifier -> ^( NODE_CONSISTENCY_LEVEL $defaultType) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:310:7: CONSISTENCYLEVEL 'AS' defaultType= Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:310:7: CONSISTENCYLEVEL 'AS' defaultType= Identifier 
{	TokenNameLBRACE	
CONSISTENCYLEVEL172	TokenNameIdentifier	 CONSISTENCYLEVE L172
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CONSISTENCYLEVEL	TokenNameIdentifier	 CONSISTENCYLEVEL
,	TokenNameCOMMA	
FOLLOW_CONSISTENCYLEVEL_in_consistencyLevelStatement2365	TokenNameIdentifier	 FOLLOW  CONSISTENCYLEVEL in consistency Level Statement2365
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CONSISTENCYLEVEL	TokenNameIdentifier	 stream  CONSISTENCYLEVEL
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CONSISTENCYLEVEL172	TokenNameIdentifier	 CONSISTENCYLEVE L172
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal173	TokenNameIdentifier	 string literal173
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
115	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_115_in_consistencyLevelStatement2367	TokenNameIdentifier	 FOLLOW 115 in consistency Level Statement2367
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_115	TokenNameIdentifier	 stream 115
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal173	TokenNameIdentifier	 string literal173
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
defaultType	TokenNameIdentifier	 default Type
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_consistencyLevelStatement2371	TokenNameIdentifier	 FOLLOW  Identifier in consistency Level Statement2371
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_Identifier	TokenNameIdentifier	 stream  Identifier
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
defaultType	TokenNameIdentifier	 default Type
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: defaultType 	TokenNameCOMMENT_LINE	elements: defaultType 
// token labels: defaultType 	TokenNameCOMMENT_LINE	token labels: defaultType 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_defaultType	TokenNameIdentifier	 stream default Type
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token defaultType"	TokenNameStringLiteral	token defaultType
,	TokenNameCOMMA	
defaultType	TokenNameIdentifier	 default Type
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 311:9: -> ^( NODE_CONSISTENCY_LEVEL $defaultType) 	TokenNameCOMMENT_LINE	311:9: -> ^( NODE_CONSISTENCY_LEVEL $defaultType) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:311:12: ^( NODE_CONSISTENCY_LEVEL $defaultType) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:311:12: ^( NODE_CONSISTENCY_LEVEL $defaultType) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_CONSISTENCY_LEVEL	TokenNameIdentifier	 NODE  CONSISTENCY  LEVEL
,	TokenNameCOMMA	
"NODE_CONSISTENCY_LEVEL"	TokenNameStringLiteral	NODE_CONSISTENCY_LEVEL
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_defaultType	TokenNameIdentifier	 stream default Type
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "consistencyLevelStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "consistencyLevelStatement" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
showClusterName_return	TokenNameIdentifier	 show Cluster Name return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "showClusterName" 	TokenNameCOMMENT_LINE	$ANTLR start "showClusterName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:314:1: showClusterName : SHOW 'CLUSTER NAME' -> ^( NODE_SHOW_CLUSTER_NAME ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:314:1: showClusterName : SHOW 'CLUSTER NAME' -> ^( NODE_SHOW_CLUSTER_NAME ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showClusterName_return	TokenNameIdentifier	 show Cluster Name return
showClusterName	TokenNameIdentifier	 show Cluster Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showClusterName_return	TokenNameIdentifier	 show Cluster Name return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showClusterName_return	TokenNameIdentifier	 show Cluster Name return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW174	TokenNameIdentifier	 SHO W174
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal175	TokenNameIdentifier	 string literal175
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW174_tree	TokenNameIdentifier	 SHO W174 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal175_tree	TokenNameIdentifier	 string literal175 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_113	TokenNameIdentifier	 stream 113
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 113"	TokenNameStringLiteral	token 113
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SHOW	TokenNameIdentifier	 stream  SHOW
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SHOW"	TokenNameStringLiteral	token SHOW
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:315:5: ( SHOW 'CLUSTER NAME' -> ^( NODE_SHOW_CLUSTER_NAME ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:315:5: ( SHOW 'CLUSTER NAME' -> ^( NODE_SHOW_CLUSTER_NAME ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:315:7: SHOW 'CLUSTER NAME' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:315:7: SHOW 'CLUSTER NAME' 
{	TokenNameLBRACE	
SHOW174	TokenNameIdentifier	 SHO W174
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_showClusterName2405	TokenNameIdentifier	 FOLLOW  SHOW in show Cluster Name2405
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW174	TokenNameIdentifier	 SHO W174
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal175	TokenNameIdentifier	 string literal175
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
113	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_113_in_showClusterName2407	TokenNameIdentifier	 FOLLOW 113 in show Cluster Name2407
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_113	TokenNameIdentifier	 stream 113
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal175	TokenNameIdentifier	 string literal175
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 316:9: -> ^( NODE_SHOW_CLUSTER_NAME ) 	TokenNameCOMMENT_LINE	316:9: -> ^( NODE_SHOW_CLUSTER_NAME ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:316:12: ^( NODE_SHOW_CLUSTER_NAME ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:316:12: ^( NODE_SHOW_CLUSTER_NAME ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_CLUSTER_NAME	TokenNameIdentifier	 NODE  SHOW  CLUSTER  NAME
,	TokenNameCOMMA	
"NODE_SHOW_CLUSTER_NAME"	TokenNameStringLiteral	NODE_SHOW_CLUSTER_NAME
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "showClusterName" 	TokenNameCOMMENT_LINE	$ANTLR end "showClusterName" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
addKeyspace_return	TokenNameIdentifier	 add Keyspace return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "addKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR start "addKeyspace" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:319:1: addKeyspace : CREATE KEYSPACE keyValuePairExpr -> ^( NODE_ADD_KEYSPACE keyValuePairExpr ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:319:1: addKeyspace : CREATE KEYSPACE keyValuePairExpr -> ^( NODE_ADD_KEYSPACE keyValuePairExpr ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addKeyspace_return	TokenNameIdentifier	 add Keyspace return
addKeyspace	TokenNameIdentifier	 add Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addKeyspace_return	TokenNameIdentifier	 add Keyspace return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addKeyspace_return	TokenNameIdentifier	 add Keyspace return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CREATE176	TokenNameIdentifier	 CREAT E176
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACE177	TokenNameIdentifier	 KEYSPAC E177
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
keyValuePairExpr178	TokenNameIdentifier	 key Value Pair Expr178
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CREATE176_tree	TokenNameIdentifier	 CREAT E176 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACE177_tree	TokenNameIdentifier	 KEYSPAC E177 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CREATE	TokenNameIdentifier	 stream  CREATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CREATE"	TokenNameStringLiteral	token CREATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token KEYSPACE"	TokenNameStringLiteral	token KEYSPACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyValuePairExpr"	TokenNameStringLiteral	rule keyValuePairExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:320:5: ( CREATE KEYSPACE keyValuePairExpr -> ^( NODE_ADD_KEYSPACE keyValuePairExpr ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:320:5: ( CREATE KEYSPACE keyValuePairExpr -> ^( NODE_ADD_KEYSPACE keyValuePairExpr ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:320:7: CREATE KEYSPACE keyValuePairExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:320:7: CREATE KEYSPACE keyValuePairExpr 
{	TokenNameLBRACE	
CREATE176	TokenNameIdentifier	 CREAT E176
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CREATE	TokenNameIdentifier	 CREATE
,	TokenNameCOMMA	
FOLLOW_CREATE_in_addKeyspace2438	TokenNameIdentifier	 FOLLOW  CREATE in add Keyspace2438
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CREATE	TokenNameIdentifier	 stream  CREATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CREATE176	TokenNameIdentifier	 CREAT E176
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACE177	TokenNameIdentifier	 KEYSPAC E177
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
,	TokenNameCOMMA	
FOLLOW_KEYSPACE_in_addKeyspace2440	TokenNameIdentifier	 FOLLOW  KEYSPACE in add Keyspace2440
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACE177	TokenNameIdentifier	 KEYSPAC E177
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyValuePairExpr_in_addKeyspace2442	TokenNameIdentifier	 FOLLOW key Value Pair Expr in add Keyspace2442
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyValuePairExpr178	TokenNameIdentifier	 key Value Pair Expr178
=	TokenNameEQUAL	
keyValuePairExpr	TokenNameIdentifier	 key Value Pair Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyValuePairExpr178	TokenNameIdentifier	 key Value Pair Expr178
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyValuePairExpr 	TokenNameCOMMENT_LINE	elements: keyValuePairExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 321:9: -> ^( NODE_ADD_KEYSPACE keyValuePairExpr ) 	TokenNameCOMMENT_LINE	321:9: -> ^( NODE_ADD_KEYSPACE keyValuePairExpr ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:321:12: ^( NODE_ADD_KEYSPACE keyValuePairExpr ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:321:12: ^( NODE_ADD_KEYSPACE keyValuePairExpr ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ADD_KEYSPACE	TokenNameIdentifier	 NODE  ADD  KEYSPACE
,	TokenNameCOMMA	
"NODE_ADD_KEYSPACE"	TokenNameStringLiteral	NODE_ADD_KEYSPACE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "addKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR end "addKeyspace" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
addColumnFamily_return	TokenNameIdentifier	 add Column Family return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "addColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR start "addColumnFamily" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:324:1: addColumnFamily : CREATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:324:1: addColumnFamily : CREATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addColumnFamily_return	TokenNameIdentifier	 add Column Family return
addColumnFamily	TokenNameIdentifier	 add Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addColumnFamily_return	TokenNameIdentifier	 add Column Family return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
addColumnFamily_return	TokenNameIdentifier	 add Column Family return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
CREATE179	TokenNameIdentifier	 CREAT E179
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COLUMN180	TokenNameIdentifier	 COLUM N180
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
FAMILY181	TokenNameIdentifier	 FAMIL Y181
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
keyValuePairExpr182	TokenNameIdentifier	 key Value Pair Expr182
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
CREATE179_tree	TokenNameIdentifier	 CREAT E179 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COLUMN180_tree	TokenNameIdentifier	 COLUM N180 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
FAMILY181_tree	TokenNameIdentifier	 FAMIL Y181 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token FAMILY"	TokenNameStringLiteral	token FAMILY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_CREATE	TokenNameIdentifier	 stream  CREATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token CREATE"	TokenNameStringLiteral	token CREATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token COLUMN"	TokenNameStringLiteral	token COLUMN
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyValuePairExpr"	TokenNameStringLiteral	rule keyValuePairExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:325:5: ( CREATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:325:5: ( CREATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:325:7: CREATE COLUMN FAMILY keyValuePairExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:325:7: CREATE COLUMN FAMILY keyValuePairExpr 
{	TokenNameLBRACE	
CREATE179	TokenNameIdentifier	 CREAT E179
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
CREATE	TokenNameIdentifier	 CREATE
,	TokenNameCOMMA	
FOLLOW_CREATE_in_addColumnFamily2476	TokenNameIdentifier	 FOLLOW  CREATE in add Column Family2476
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_CREATE	TokenNameIdentifier	 stream  CREATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
CREATE179	TokenNameIdentifier	 CREAT E179
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COLUMN180	TokenNameIdentifier	 COLUM N180
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COLUMN	TokenNameIdentifier	 COLUMN
,	TokenNameCOMMA	
FOLLOW_COLUMN_in_addColumnFamily2478	TokenNameIdentifier	 FOLLOW  COLUMN in add Column Family2478
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COLUMN180	TokenNameIdentifier	 COLUM N180
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
FAMILY181	TokenNameIdentifier	 FAMIL Y181
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
FAMILY	TokenNameIdentifier	 FAMILY
,	TokenNameCOMMA	
FOLLOW_FAMILY_in_addColumnFamily2480	TokenNameIdentifier	 FOLLOW  FAMILY in add Column Family2480
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
FAMILY181	TokenNameIdentifier	 FAMIL Y181
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyValuePairExpr_in_addColumnFamily2482	TokenNameIdentifier	 FOLLOW key Value Pair Expr in add Column Family2482
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyValuePairExpr182	TokenNameIdentifier	 key Value Pair Expr182
=	TokenNameEQUAL	
keyValuePairExpr	TokenNameIdentifier	 key Value Pair Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyValuePairExpr182	TokenNameIdentifier	 key Value Pair Expr182
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyValuePairExpr 	TokenNameCOMMENT_LINE	elements: keyValuePairExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 326:9: -> ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) 	TokenNameCOMMENT_LINE	326:9: -> ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:326:12: ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:326:12: ^( NODE_ADD_COLUMN_FAMILY keyValuePairExpr ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ADD_COLUMN_FAMILY	TokenNameIdentifier	 NODE  ADD  COLUMN  FAMILY
,	TokenNameCOMMA	
"NODE_ADD_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_ADD_COLUMN_FAMILY
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "addColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR end "addColumnFamily" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
updateKeyspace_return	TokenNameIdentifier	 update Keyspace return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "updateKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR start "updateKeyspace" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:329:1: updateKeyspace : UPDATE KEYSPACE keyValuePairExpr -> ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:329:1: updateKeyspace : UPDATE KEYSPACE keyValuePairExpr -> ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateKeyspace_return	TokenNameIdentifier	 update Keyspace return
updateKeyspace	TokenNameIdentifier	 update Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateKeyspace_return	TokenNameIdentifier	 update Keyspace return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateKeyspace_return	TokenNameIdentifier	 update Keyspace return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
UPDATE183	TokenNameIdentifier	 UPDAT E183
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACE184	TokenNameIdentifier	 KEYSPAC E184
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
keyValuePairExpr185	TokenNameIdentifier	 key Value Pair Expr185
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
UPDATE183_tree	TokenNameIdentifier	 UPDAT E183 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACE184_tree	TokenNameIdentifier	 KEYSPAC E184 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token UPDATE"	TokenNameStringLiteral	token UPDATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token KEYSPACE"	TokenNameStringLiteral	token KEYSPACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyValuePairExpr"	TokenNameStringLiteral	rule keyValuePairExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:330:5: ( UPDATE KEYSPACE keyValuePairExpr -> ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:330:5: ( UPDATE KEYSPACE keyValuePairExpr -> ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:330:7: UPDATE KEYSPACE keyValuePairExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:330:7: UPDATE KEYSPACE keyValuePairExpr 
{	TokenNameLBRACE	
UPDATE183	TokenNameIdentifier	 UPDAT E183
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
UPDATE	TokenNameIdentifier	 UPDATE
,	TokenNameCOMMA	
FOLLOW_UPDATE_in_updateKeyspace2516	TokenNameIdentifier	 FOLLOW  UPDATE in update Keyspace2516
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
UPDATE183	TokenNameIdentifier	 UPDAT E183
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACE184	TokenNameIdentifier	 KEYSPAC E184
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
,	TokenNameCOMMA	
FOLLOW_KEYSPACE_in_updateKeyspace2518	TokenNameIdentifier	 FOLLOW  KEYSPACE in update Keyspace2518
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACE184	TokenNameIdentifier	 KEYSPAC E184
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyValuePairExpr_in_updateKeyspace2520	TokenNameIdentifier	 FOLLOW key Value Pair Expr in update Keyspace2520
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyValuePairExpr185	TokenNameIdentifier	 key Value Pair Expr185
=	TokenNameEQUAL	
keyValuePairExpr	TokenNameIdentifier	 key Value Pair Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyValuePairExpr185	TokenNameIdentifier	 key Value Pair Expr185
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyValuePairExpr 	TokenNameCOMMENT_LINE	elements: keyValuePairExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 331:9: -> ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) 	TokenNameCOMMENT_LINE	331:9: -> ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:331:12: ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:331:12: ^( NODE_UPDATE_KEYSPACE keyValuePairExpr ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_UPDATE_KEYSPACE	TokenNameIdentifier	 NODE  UPDATE  KEYSPACE
,	TokenNameCOMMA	
"NODE_UPDATE_KEYSPACE"	TokenNameStringLiteral	NODE_UPDATE_KEYSPACE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "updateKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR end "updateKeyspace" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
updateColumnFamily_return	TokenNameIdentifier	 update Column Family return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "updateColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR start "updateColumnFamily" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:334:1: updateColumnFamily : UPDATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:334:1: updateColumnFamily : UPDATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateColumnFamily_return	TokenNameIdentifier	 update Column Family return
updateColumnFamily	TokenNameIdentifier	 update Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateColumnFamily_return	TokenNameIdentifier	 update Column Family return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
updateColumnFamily_return	TokenNameIdentifier	 update Column Family return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
UPDATE186	TokenNameIdentifier	 UPDAT E186
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COLUMN187	TokenNameIdentifier	 COLUM N187
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
FAMILY188	TokenNameIdentifier	 FAMIL Y188
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
keyValuePairExpr189	TokenNameIdentifier	 key Value Pair Expr189
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
UPDATE186_tree	TokenNameIdentifier	 UPDAT E186 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COLUMN187_tree	TokenNameIdentifier	 COLUM N187 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
FAMILY188_tree	TokenNameIdentifier	 FAMIL Y188 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token FAMILY"	TokenNameStringLiteral	token FAMILY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token UPDATE"	TokenNameStringLiteral	token UPDATE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token COLUMN"	TokenNameStringLiteral	token COLUMN
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyValuePairExpr"	TokenNameStringLiteral	rule keyValuePairExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:335:5: ( UPDATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:335:5: ( UPDATE COLUMN FAMILY keyValuePairExpr -> ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:335:7: UPDATE COLUMN FAMILY keyValuePairExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:335:7: UPDATE COLUMN FAMILY keyValuePairExpr 
{	TokenNameLBRACE	
UPDATE186	TokenNameIdentifier	 UPDAT E186
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
UPDATE	TokenNameIdentifier	 UPDATE
,	TokenNameCOMMA	
FOLLOW_UPDATE_in_updateColumnFamily2553	TokenNameIdentifier	 FOLLOW  UPDATE in update Column Family2553
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_UPDATE	TokenNameIdentifier	 stream  UPDATE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
UPDATE186	TokenNameIdentifier	 UPDAT E186
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COLUMN187	TokenNameIdentifier	 COLUM N187
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COLUMN	TokenNameIdentifier	 COLUMN
,	TokenNameCOMMA	
FOLLOW_COLUMN_in_updateColumnFamily2555	TokenNameIdentifier	 FOLLOW  COLUMN in update Column Family2555
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COLUMN187	TokenNameIdentifier	 COLUM N187
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
FAMILY188	TokenNameIdentifier	 FAMIL Y188
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
FAMILY	TokenNameIdentifier	 FAMILY
,	TokenNameCOMMA	
FOLLOW_FAMILY_in_updateColumnFamily2557	TokenNameIdentifier	 FOLLOW  FAMILY in update Column Family2557
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
FAMILY188	TokenNameIdentifier	 FAMIL Y188
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyValuePairExpr_in_updateColumnFamily2559	TokenNameIdentifier	 FOLLOW key Value Pair Expr in update Column Family2559
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyValuePairExpr189	TokenNameIdentifier	 key Value Pair Expr189
=	TokenNameEQUAL	
keyValuePairExpr	TokenNameIdentifier	 key Value Pair Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyValuePairExpr189	TokenNameIdentifier	 key Value Pair Expr189
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyValuePairExpr 	TokenNameCOMMENT_LINE	elements: keyValuePairExpr 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 336:9: -> ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) 	TokenNameCOMMENT_LINE	336:9: -> ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:336:12: ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:336:12: ^( NODE_UPDATE_COLUMN_FAMILY keyValuePairExpr ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_UPDATE_COLUMN_FAMILY	TokenNameIdentifier	 NODE  UPDATE  COLUMN  FAMILY
,	TokenNameCOMMA	
"NODE_UPDATE_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_UPDATE_COLUMN_FAMILY
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyValuePairExpr	TokenNameIdentifier	 stream key Value Pair Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "updateColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR end "updateColumnFamily" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
delKeyspace_return	TokenNameIdentifier	 del Keyspace return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "delKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR start "delKeyspace" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:339:1: delKeyspace : DROP KEYSPACE keyspace -> ^( NODE_DEL_KEYSPACE keyspace ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:339:1: delKeyspace : DROP KEYSPACE keyspace -> ^( NODE_DEL_KEYSPACE keyspace ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delKeyspace_return	TokenNameIdentifier	 del Keyspace return
delKeyspace	TokenNameIdentifier	 del Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delKeyspace_return	TokenNameIdentifier	 del Keyspace return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delKeyspace_return	TokenNameIdentifier	 del Keyspace return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DROP190	TokenNameIdentifier	 DRO P190
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACE191	TokenNameIdentifier	 KEYSPAC E191
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
keyspace192	TokenNameIdentifier	 keyspace192
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DROP190_tree	TokenNameIdentifier	 DRO P190 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACE191_tree	TokenNameIdentifier	 KEYSPAC E191 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DROP	TokenNameIdentifier	 stream  DROP
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DROP"	TokenNameStringLiteral	token DROP
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token KEYSPACE"	TokenNameStringLiteral	token KEYSPACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyspace	TokenNameIdentifier	 stream keyspace
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyspace"	TokenNameStringLiteral	rule keyspace
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:340:5: ( DROP KEYSPACE keyspace -> ^( NODE_DEL_KEYSPACE keyspace ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:340:5: ( DROP KEYSPACE keyspace -> ^( NODE_DEL_KEYSPACE keyspace ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:340:7: DROP KEYSPACE keyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:340:7: DROP KEYSPACE keyspace 
{	TokenNameLBRACE	
DROP190	TokenNameIdentifier	 DRO P190
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DROP	TokenNameIdentifier	 DROP
,	TokenNameCOMMA	
FOLLOW_DROP_in_delKeyspace2592	TokenNameIdentifier	 FOLLOW  DROP in del Keyspace2592
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DROP	TokenNameIdentifier	 stream  DROP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DROP190	TokenNameIdentifier	 DRO P190
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACE191	TokenNameIdentifier	 KEYSPAC E191
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACE	TokenNameIdentifier	 KEYSPACE
,	TokenNameCOMMA	
FOLLOW_KEYSPACE_in_delKeyspace2594	TokenNameIdentifier	 FOLLOW  KEYSPACE in del Keyspace2594
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACE	TokenNameIdentifier	 stream  KEYSPACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACE191	TokenNameIdentifier	 KEYSPAC E191
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspace_in_delKeyspace2596	TokenNameIdentifier	 FOLLOW keyspace in del Keyspace2596
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyspace192	TokenNameIdentifier	 keyspace192
=	TokenNameEQUAL	
keyspace	TokenNameIdentifier	 keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyspace192	TokenNameIdentifier	 keyspace192
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyspace 	TokenNameCOMMENT_LINE	elements: keyspace 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 341:9: -> ^( NODE_DEL_KEYSPACE keyspace ) 	TokenNameCOMMENT_LINE	341:9: -> ^( NODE_DEL_KEYSPACE keyspace ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:341:12: ^( NODE_DEL_KEYSPACE keyspace ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:341:12: ^( NODE_DEL_KEYSPACE keyspace ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DEL_KEYSPACE	TokenNameIdentifier	 NODE  DEL  KEYSPACE
,	TokenNameCOMMA	
"NODE_DEL_KEYSPACE"	TokenNameStringLiteral	NODE_DEL_KEYSPACE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "delKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR end "delKeyspace" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
delColumnFamily_return	TokenNameIdentifier	 del Column Family return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "delColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR start "delColumnFamily" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:344:1: delColumnFamily : DROP COLUMN FAMILY columnFamily -> ^( NODE_DEL_COLUMN_FAMILY columnFamily ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:344:1: delColumnFamily : DROP COLUMN FAMILY columnFamily -> ^( NODE_DEL_COLUMN_FAMILY columnFamily ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delColumnFamily_return	TokenNameIdentifier	 del Column Family return
delColumnFamily	TokenNameIdentifier	 del Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delColumnFamily_return	TokenNameIdentifier	 del Column Family return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
delColumnFamily_return	TokenNameIdentifier	 del Column Family return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DROP193	TokenNameIdentifier	 DRO P193
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
COLUMN194	TokenNameIdentifier	 COLUM N194
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
FAMILY195	TokenNameIdentifier	 FAMIL Y195
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily196	TokenNameIdentifier	 column Family196
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DROP193_tree	TokenNameIdentifier	 DRO P193 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
COLUMN194_tree	TokenNameIdentifier	 COLUM N194 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
FAMILY195_tree	TokenNameIdentifier	 FAMIL Y195 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token FAMILY"	TokenNameStringLiteral	token FAMILY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DROP	TokenNameIdentifier	 stream  DROP
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DROP"	TokenNameStringLiteral	token DROP
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token COLUMN"	TokenNameStringLiteral	token COLUMN
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:345:5: ( DROP COLUMN FAMILY columnFamily -> ^( NODE_DEL_COLUMN_FAMILY columnFamily ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:345:5: ( DROP COLUMN FAMILY columnFamily -> ^( NODE_DEL_COLUMN_FAMILY columnFamily ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:345:7: DROP COLUMN FAMILY columnFamily 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:345:7: DROP COLUMN FAMILY columnFamily 
{	TokenNameLBRACE	
DROP193	TokenNameIdentifier	 DRO P193
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DROP	TokenNameIdentifier	 DROP
,	TokenNameCOMMA	
FOLLOW_DROP_in_delColumnFamily2630	TokenNameIdentifier	 FOLLOW  DROP in del Column Family2630
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DROP	TokenNameIdentifier	 stream  DROP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DROP193	TokenNameIdentifier	 DRO P193
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
COLUMN194	TokenNameIdentifier	 COLUM N194
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
COLUMN	TokenNameIdentifier	 COLUMN
,	TokenNameCOMMA	
FOLLOW_COLUMN_in_delColumnFamily2632	TokenNameIdentifier	 FOLLOW  COLUMN in del Column Family2632
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_COLUMN	TokenNameIdentifier	 stream  COLUMN
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
COLUMN194	TokenNameIdentifier	 COLUM N194
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
FAMILY195	TokenNameIdentifier	 FAMIL Y195
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
FAMILY	TokenNameIdentifier	 FAMILY
,	TokenNameCOMMA	
FOLLOW_FAMILY_in_delColumnFamily2634	TokenNameIdentifier	 FOLLOW  FAMILY in del Column Family2634
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_FAMILY	TokenNameIdentifier	 stream  FAMILY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
FAMILY195	TokenNameIdentifier	 FAMIL Y195
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_delColumnFamily2636	TokenNameIdentifier	 FOLLOW column Family in del Column Family2636
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily196	TokenNameIdentifier	 column Family196
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily196	TokenNameIdentifier	 column Family196
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamily 	TokenNameCOMMENT_LINE	elements: columnFamily 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 346:9: -> ^( NODE_DEL_COLUMN_FAMILY columnFamily ) 	TokenNameCOMMENT_LINE	346:9: -> ^( NODE_DEL_COLUMN_FAMILY columnFamily ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:346:12: ^( NODE_DEL_COLUMN_FAMILY columnFamily ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:346:12: ^( NODE_DEL_COLUMN_FAMILY columnFamily ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DEL_COLUMN_FAMILY	TokenNameIdentifier	 NODE  DEL  COLUMN  FAMILY
,	TokenNameCOMMA	
"NODE_DEL_COLUMN_FAMILY"	TokenNameStringLiteral	NODE_DEL_COLUMN_FAMILY
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "delColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR end "delColumnFamily" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
dropIndex_return	TokenNameIdentifier	 drop Index return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "dropIndex" 	TokenNameCOMMENT_LINE	$ANTLR start "dropIndex" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:349:1: dropIndex : DROP INDEX ON columnFamily '.' columnName -> ^( NODE_DROP_INDEX columnFamily columnName ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:349:1: dropIndex : DROP INDEX ON columnFamily '.' columnName -> ^( NODE_DROP_INDEX columnFamily columnName ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
dropIndex_return	TokenNameIdentifier	 drop Index return
dropIndex	TokenNameIdentifier	 drop Index
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
dropIndex_return	TokenNameIdentifier	 drop Index return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
dropIndex_return	TokenNameIdentifier	 drop Index return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DROP197	TokenNameIdentifier	 DRO P197
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
INDEX198	TokenNameIdentifier	 INDE X198
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
ON199	TokenNameIdentifier	 O N199
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal201	TokenNameIdentifier	 char literal201
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily200	TokenNameIdentifier	 column Family200
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnName_return	TokenNameIdentifier	 column Name return
columnName202	TokenNameIdentifier	 column Name202
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DROP197_tree	TokenNameIdentifier	 DRO P197 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
INDEX198_tree	TokenNameIdentifier	 INDE X198 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
ON199_tree	TokenNameIdentifier	 O N199 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal201_tree	TokenNameIdentifier	 char literal201 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_INDEX	TokenNameIdentifier	 stream  INDEX
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token INDEX"	TokenNameStringLiteral	token INDEX
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_ON	TokenNameIdentifier	 stream  ON
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token ON"	TokenNameStringLiteral	token ON
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_122	TokenNameIdentifier	 stream 122
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 122"	TokenNameStringLiteral	token 122
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DROP	TokenNameIdentifier	 stream  DROP
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DROP"	TokenNameStringLiteral	token DROP
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnName	TokenNameIdentifier	 stream column Name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnName"	TokenNameStringLiteral	rule columnName
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:350:5: ( DROP INDEX ON columnFamily '.' columnName -> ^( NODE_DROP_INDEX columnFamily columnName ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:350:5: ( DROP INDEX ON columnFamily '.' columnName -> ^( NODE_DROP_INDEX columnFamily columnName ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:350:7: DROP INDEX ON columnFamily '.' columnName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:350:7: DROP INDEX ON columnFamily '.' columnName 
{	TokenNameLBRACE	
DROP197	TokenNameIdentifier	 DRO P197
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DROP	TokenNameIdentifier	 DROP
,	TokenNameCOMMA	
FOLLOW_DROP_in_dropIndex2670	TokenNameIdentifier	 FOLLOW  DROP in drop Index2670
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DROP	TokenNameIdentifier	 stream  DROP
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DROP197	TokenNameIdentifier	 DRO P197
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
INDEX198	TokenNameIdentifier	 INDE X198
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INDEX	TokenNameIdentifier	 INDEX
,	TokenNameCOMMA	
FOLLOW_INDEX_in_dropIndex2672	TokenNameIdentifier	 FOLLOW  INDEX in drop Index2672
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_INDEX	TokenNameIdentifier	 stream  INDEX
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
INDEX198	TokenNameIdentifier	 INDE X198
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ON199	TokenNameIdentifier	 O N199
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
ON	TokenNameIdentifier	 ON
,	TokenNameCOMMA	
FOLLOW_ON_in_dropIndex2674	TokenNameIdentifier	 FOLLOW  ON in drop Index2674
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_ON	TokenNameIdentifier	 stream  ON
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
ON199	TokenNameIdentifier	 O N199
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_dropIndex2676	TokenNameIdentifier	 FOLLOW column Family in drop Index2676
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily200	TokenNameIdentifier	 column Family200
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily200	TokenNameIdentifier	 column Family200
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal201	TokenNameIdentifier	 char literal201
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
122	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_122_in_dropIndex2678	TokenNameIdentifier	 FOLLOW 122 in drop Index2678
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_122	TokenNameIdentifier	 stream 122
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal201	TokenNameIdentifier	 char literal201
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnName_in_dropIndex2680	TokenNameIdentifier	 FOLLOW column Name in drop Index2680
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnName202	TokenNameIdentifier	 column Name202
=	TokenNameEQUAL	
columnName	TokenNameIdentifier	 column Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnName	TokenNameIdentifier	 stream column Name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnName202	TokenNameIdentifier	 column Name202
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnName, columnFamily 	TokenNameCOMMENT_LINE	elements: columnName, columnFamily 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 351:9: -> ^( NODE_DROP_INDEX columnFamily columnName ) 	TokenNameCOMMENT_LINE	351:9: -> ^( NODE_DROP_INDEX columnFamily columnName ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:351:12: ^( NODE_DROP_INDEX columnFamily columnName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:351:12: ^( NODE_DROP_INDEX columnFamily columnName ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DROP_INDEX	TokenNameIdentifier	 NODE  DROP  INDEX
,	TokenNameCOMMA	
"NODE_DROP_INDEX"	TokenNameStringLiteral	NODE_DROP_INDEX
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnName	TokenNameIdentifier	 stream column Name
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "dropIndex" 	TokenNameCOMMENT_LINE	$ANTLR end "dropIndex" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
showVersion_return	TokenNameIdentifier	 show Version return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "showVersion" 	TokenNameCOMMENT_LINE	$ANTLR start "showVersion" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:354:1: showVersion : SHOW API_VERSION -> ^( NODE_SHOW_VERSION ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:354:1: showVersion : SHOW API_VERSION -> ^( NODE_SHOW_VERSION ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showVersion_return	TokenNameIdentifier	 show Version return
showVersion	TokenNameIdentifier	 show Version
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showVersion_return	TokenNameIdentifier	 show Version return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showVersion_return	TokenNameIdentifier	 show Version return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW203	TokenNameIdentifier	 SHO W203
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
API_VERSION204	TokenNameIdentifier	 API  VERSIO N204
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW203_tree	TokenNameIdentifier	 SHO W203 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
API_VERSION204_tree	TokenNameIdentifier	 API  VERSIO N204 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_API_VERSION	TokenNameIdentifier	 stream  API  VERSION
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token API_VERSION"	TokenNameStringLiteral	token API_VERSION
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SHOW	TokenNameIdentifier	 stream  SHOW
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SHOW"	TokenNameStringLiteral	token SHOW
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:355:5: ( SHOW API_VERSION -> ^( NODE_SHOW_VERSION ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:355:5: ( SHOW API_VERSION -> ^( NODE_SHOW_VERSION ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:355:7: SHOW API_VERSION 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:355:7: SHOW API_VERSION 
{	TokenNameLBRACE	
SHOW203	TokenNameIdentifier	 SHO W203
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_showVersion2715	TokenNameIdentifier	 FOLLOW  SHOW in show Version2715
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW203	TokenNameIdentifier	 SHO W203
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
API_VERSION204	TokenNameIdentifier	 API  VERSIO N204
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
API_VERSION	TokenNameIdentifier	 API  VERSION
,	TokenNameCOMMA	
FOLLOW_API_VERSION_in_showVersion2717	TokenNameIdentifier	 FOLLOW  API  VERSION in show Version2717
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_API_VERSION	TokenNameIdentifier	 stream  API  VERSION
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
API_VERSION204	TokenNameIdentifier	 API  VERSIO N204
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 356:9: -> ^( NODE_SHOW_VERSION ) 	TokenNameCOMMENT_LINE	356:9: -> ^( NODE_SHOW_VERSION ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:356:12: ^( NODE_SHOW_VERSION ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:356:12: ^( NODE_SHOW_VERSION ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_VERSION	TokenNameIdentifier	 NODE  SHOW  VERSION
,	TokenNameCOMMA	
"NODE_SHOW_VERSION"	TokenNameStringLiteral	NODE_SHOW_VERSION
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "showVersion" 	TokenNameCOMMENT_LINE	$ANTLR end "showVersion" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
showKeyspaces_return	TokenNameIdentifier	 show Keyspaces return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "showKeyspaces" 	TokenNameCOMMENT_LINE	$ANTLR start "showKeyspaces" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:359:1: showKeyspaces : SHOW KEYSPACES -> ^( NODE_SHOW_KEYSPACES ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:359:1: showKeyspaces : SHOW KEYSPACES -> ^( NODE_SHOW_KEYSPACES ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showKeyspaces_return	TokenNameIdentifier	 show Keyspaces return
showKeyspaces	TokenNameIdentifier	 show Keyspaces
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showKeyspaces_return	TokenNameIdentifier	 show Keyspaces return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showKeyspaces_return	TokenNameIdentifier	 show Keyspaces return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW205	TokenNameIdentifier	 SHO W205
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
KEYSPACES206	TokenNameIdentifier	 KEYSPACE S206
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW205_tree	TokenNameIdentifier	 SHO W205 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
KEYSPACES206_tree	TokenNameIdentifier	 KEYSPACE S206 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_KEYSPACES	TokenNameIdentifier	 stream  KEYSPACES
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token KEYSPACES"	TokenNameStringLiteral	token KEYSPACES
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SHOW	TokenNameIdentifier	 stream  SHOW
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SHOW"	TokenNameStringLiteral	token SHOW
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:360:5: ( SHOW KEYSPACES -> ^( NODE_SHOW_KEYSPACES ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:360:5: ( SHOW KEYSPACES -> ^( NODE_SHOW_KEYSPACES ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:360:7: SHOW KEYSPACES 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:360:7: SHOW KEYSPACES 
{	TokenNameLBRACE	
SHOW205	TokenNameIdentifier	 SHO W205
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_showKeyspaces2748	TokenNameIdentifier	 FOLLOW  SHOW in show Keyspaces2748
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW205	TokenNameIdentifier	 SHO W205
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
KEYSPACES206	TokenNameIdentifier	 KEYSPACE S206
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
KEYSPACES	TokenNameIdentifier	 KEYSPACES
,	TokenNameCOMMA	
FOLLOW_KEYSPACES_in_showKeyspaces2750	TokenNameIdentifier	 FOLLOW  KEYSPACES in show Keyspaces2750
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_KEYSPACES	TokenNameIdentifier	 stream  KEYSPACES
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
KEYSPACES206	TokenNameIdentifier	 KEYSPACE S206
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 361:9: -> ^( NODE_SHOW_KEYSPACES ) 	TokenNameCOMMENT_LINE	361:9: -> ^( NODE_SHOW_KEYSPACES ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:361:12: ^( NODE_SHOW_KEYSPACES ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:361:12: ^( NODE_SHOW_KEYSPACES ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_KEYSPACES	TokenNameIdentifier	 NODE  SHOW  KEYSPACES
,	TokenNameCOMMA	
"NODE_SHOW_KEYSPACES"	TokenNameStringLiteral	NODE_SHOW_KEYSPACES
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "showKeyspaces" 	TokenNameCOMMENT_LINE	$ANTLR end "showKeyspaces" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
showSchema_return	TokenNameIdentifier	 show Schema return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "showSchema" 	TokenNameCOMMENT_LINE	$ANTLR start "showSchema" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:364:1: showSchema : SHOW SCHEMA ( keyspace )? -> ^( NODE_SHOW_SCHEMA ( keyspace )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:364:1: showSchema : SHOW SCHEMA ( keyspace )? -> ^( NODE_SHOW_SCHEMA ( keyspace )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showSchema_return	TokenNameIdentifier	 show Schema return
showSchema	TokenNameIdentifier	 show Schema
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showSchema_return	TokenNameIdentifier	 show Schema return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
showSchema_return	TokenNameIdentifier	 show Schema return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SHOW207	TokenNameIdentifier	 SHO W207
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SCHEMA208	TokenNameIdentifier	 SCHEM A208
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
keyspace209	TokenNameIdentifier	 keyspace209
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SHOW207_tree	TokenNameIdentifier	 SHO W207 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SCHEMA208_tree	TokenNameIdentifier	 SCHEM A208 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SCHEMA	TokenNameIdentifier	 stream  SCHEMA
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SCHEMA"	TokenNameStringLiteral	token SCHEMA
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SHOW	TokenNameIdentifier	 stream  SHOW
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SHOW"	TokenNameStringLiteral	token SHOW
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyspace	TokenNameIdentifier	 stream keyspace
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyspace"	TokenNameStringLiteral	rule keyspace
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:5: ( SHOW SCHEMA ( keyspace )? -> ^( NODE_SHOW_SCHEMA ( keyspace )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:5: ( SHOW SCHEMA ( keyspace )? -> ^( NODE_SHOW_SCHEMA ( keyspace )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:7: SHOW SCHEMA ( keyspace )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:7: SHOW SCHEMA ( keyspace )? 
{	TokenNameLBRACE	
SHOW207	TokenNameIdentifier	 SHO W207
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SHOW	TokenNameIdentifier	 SHOW
,	TokenNameCOMMA	
FOLLOW_SHOW_in_showSchema2782	TokenNameIdentifier	 FOLLOW  SHOW in show Schema2782
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SHOW	TokenNameIdentifier	 stream  SHOW
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SHOW207	TokenNameIdentifier	 SHO W207
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
SCHEMA208	TokenNameIdentifier	 SCHEM A208
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SCHEMA	TokenNameIdentifier	 SCHEMA
,	TokenNameCOMMA	
FOLLOW_SCHEMA_in_showSchema2784	TokenNameIdentifier	 FOLLOW  SCHEMA in show Schema2784
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SCHEMA	TokenNameIdentifier	 stream  SCHEMA
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SCHEMA208	TokenNameIdentifier	 SCHEM A208
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:19: ( keyspace )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:19: ( keyspace )? 
int	TokenNameint	
alt21	TokenNameIdentifier	 alt21
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA21_0	TokenNameIdentifier	 L A21 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA21_0	TokenNameIdentifier	 L A21 0
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA21_0	TokenNameIdentifier	 L A21 0
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA21_0	TokenNameIdentifier	 L A21 0
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt21	TokenNameIdentifier	 alt21
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt21	TokenNameIdentifier	 alt21
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:20: keyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:365:20: keyspace 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspace_in_showSchema2787	TokenNameIdentifier	 FOLLOW keyspace in show Schema2787
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyspace209	TokenNameIdentifier	 keyspace209
=	TokenNameEQUAL	
keyspace	TokenNameIdentifier	 keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyspace209	TokenNameIdentifier	 keyspace209
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyspace 	TokenNameCOMMENT_LINE	elements: keyspace 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 366:9: -> ^( NODE_SHOW_SCHEMA ( keyspace )? ) 	TokenNameCOMMENT_LINE	366:9: -> ^( NODE_SHOW_SCHEMA ( keyspace )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:366:12: ^( NODE_SHOW_SCHEMA ( keyspace )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:366:12: ^( NODE_SHOW_SCHEMA ( keyspace )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SHOW_SCHEMA	TokenNameIdentifier	 NODE  SHOW  SCHEMA
,	TokenNameCOMMA	
"NODE_SHOW_SCHEMA"	TokenNameStringLiteral	NODE_SHOW_SCHEMA
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:366:31: ( keyspace )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:366:31: ( keyspace )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "showSchema" 	TokenNameCOMMENT_LINE	$ANTLR end "showSchema" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
describeTable_return	TokenNameIdentifier	 describe Table return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "describeTable" 	TokenNameCOMMENT_LINE	$ANTLR start "describeTable" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:369:1: describeTable : DESCRIBE ( keyspace )? -> ^( NODE_DESCRIBE ( keyspace )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:369:1: describeTable : DESCRIBE ( keyspace )? -> ^( NODE_DESCRIBE ( keyspace )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeTable_return	TokenNameIdentifier	 describe Table return
describeTable	TokenNameIdentifier	 describe Table
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeTable_return	TokenNameIdentifier	 describe Table return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeTable_return	TokenNameIdentifier	 describe Table return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DESCRIBE210	TokenNameIdentifier	 DESCRIB E210
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
keyspace211	TokenNameIdentifier	 keyspace211
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DESCRIBE210_tree	TokenNameIdentifier	 DESCRIB E210 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DESCRIBE"	TokenNameStringLiteral	token DESCRIBE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyspace	TokenNameIdentifier	 stream keyspace
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyspace"	TokenNameStringLiteral	rule keyspace
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:5: ( DESCRIBE ( keyspace )? -> ^( NODE_DESCRIBE ( keyspace )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:5: ( DESCRIBE ( keyspace )? -> ^( NODE_DESCRIBE ( keyspace )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:7: DESCRIBE ( keyspace )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:7: DESCRIBE ( keyspace )? 
{	TokenNameLBRACE	
DESCRIBE210	TokenNameIdentifier	 DESCRIB E210
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DESCRIBE	TokenNameIdentifier	 DESCRIBE
,	TokenNameCOMMA	
FOLLOW_DESCRIBE_in_describeTable2825	TokenNameIdentifier	 FOLLOW  DESCRIBE in describe Table2825
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DESCRIBE210	TokenNameIdentifier	 DESCRIB E210
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:16: ( keyspace )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:16: ( keyspace )? 
int	TokenNameint	
alt22	TokenNameIdentifier	 alt22
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA22_0	TokenNameIdentifier	 L A22 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA22_0	TokenNameIdentifier	 L A22 0
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA22_0	TokenNameIdentifier	 L A22 0
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA22_0	TokenNameIdentifier	 L A22 0
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt22	TokenNameIdentifier	 alt22
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt22	TokenNameIdentifier	 alt22
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:17: keyspace 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:370:17: keyspace 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspace_in_describeTable2828	TokenNameIdentifier	 FOLLOW keyspace in describe Table2828
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyspace211	TokenNameIdentifier	 keyspace211
=	TokenNameEQUAL	
keyspace	TokenNameIdentifier	 keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyspace211	TokenNameIdentifier	 keyspace211
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyspace 	TokenNameCOMMENT_LINE	elements: keyspace 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 371:9: -> ^( NODE_DESCRIBE ( keyspace )? ) 	TokenNameCOMMENT_LINE	371:9: -> ^( NODE_DESCRIBE ( keyspace )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:371:12: ^( NODE_DESCRIBE ( keyspace )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:371:12: ^( NODE_DESCRIBE ( keyspace )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DESCRIBE	TokenNameIdentifier	 NODE  DESCRIBE
,	TokenNameCOMMA	
"NODE_DESCRIBE"	TokenNameStringLiteral	NODE_DESCRIBE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:371:28: ( keyspace )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:371:28: ( keyspace )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "describeTable" 	TokenNameCOMMENT_LINE	$ANTLR end "describeTable" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
describeCluster_return	TokenNameIdentifier	 describe Cluster return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "describeCluster" 	TokenNameCOMMENT_LINE	$ANTLR start "describeCluster" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:374:1: describeCluster : DESCRIBE 'CLUSTER' -> ^( NODE_DESCRIBE_CLUSTER ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:374:1: describeCluster : DESCRIBE 'CLUSTER' -> ^( NODE_DESCRIBE_CLUSTER ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeCluster_return	TokenNameIdentifier	 describe Cluster return
describeCluster	TokenNameIdentifier	 describe Cluster
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeCluster_return	TokenNameIdentifier	 describe Cluster return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
describeCluster_return	TokenNameIdentifier	 describe Cluster return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DESCRIBE212	TokenNameIdentifier	 DESCRIB E212
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal213	TokenNameIdentifier	 string literal213
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DESCRIBE212_tree	TokenNameIdentifier	 DESCRIB E212 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal213_tree	TokenNameIdentifier	 string literal213 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_112	TokenNameIdentifier	 stream 112
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 112"	TokenNameStringLiteral	token 112
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token DESCRIBE"	TokenNameStringLiteral	token DESCRIBE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:375:5: ( DESCRIBE 'CLUSTER' -> ^( NODE_DESCRIBE_CLUSTER ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:375:5: ( DESCRIBE 'CLUSTER' -> ^( NODE_DESCRIBE_CLUSTER ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:375:7: DESCRIBE 'CLUSTER' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:375:7: DESCRIBE 'CLUSTER' 
{	TokenNameLBRACE	
DESCRIBE212	TokenNameIdentifier	 DESCRIB E212
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DESCRIBE	TokenNameIdentifier	 DESCRIBE
,	TokenNameCOMMA	
FOLLOW_DESCRIBE_in_describeCluster2870	TokenNameIdentifier	 FOLLOW  DESCRIBE in describe Cluster2870
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_DESCRIBE	TokenNameIdentifier	 stream  DESCRIBE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
DESCRIBE212	TokenNameIdentifier	 DESCRIB E212
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
string_literal213	TokenNameIdentifier	 string literal213
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
112	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_112_in_describeCluster2872	TokenNameIdentifier	 FOLLOW 112 in describe Cluster2872
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_112	TokenNameIdentifier	 stream 112
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal213	TokenNameIdentifier	 string literal213
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 376:9: -> ^( NODE_DESCRIBE_CLUSTER ) 	TokenNameCOMMENT_LINE	376:9: -> ^( NODE_DESCRIBE_CLUSTER ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:376:12: ^( NODE_DESCRIBE_CLUSTER ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:376:12: ^( NODE_DESCRIBE_CLUSTER ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_DESCRIBE_CLUSTER	TokenNameIdentifier	 NODE  DESCRIBE  CLUSTER
,	TokenNameCOMMA	
"NODE_DESCRIBE_CLUSTER"	TokenNameStringLiteral	NODE_DESCRIBE_CLUSTER
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "describeCluster" 	TokenNameCOMMENT_LINE	$ANTLR end "describeCluster" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
useKeyspace_return	TokenNameIdentifier	 use Keyspace return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "useKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR start "useKeyspace" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:379:1: useKeyspace : USE keyspace ( username )? ( password )? -> ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:379:1: useKeyspace : USE keyspace ( username )? ( password )? -> ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
useKeyspace_return	TokenNameIdentifier	 use Keyspace return
useKeyspace	TokenNameIdentifier	 use Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
useKeyspace_return	TokenNameIdentifier	 use Keyspace return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
useKeyspace_return	TokenNameIdentifier	 use Keyspace return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
USE214	TokenNameIdentifier	 US E214
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
keyspace215	TokenNameIdentifier	 keyspace215
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username216	TokenNameIdentifier	 username216
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
password_return	TokenNameIdentifier	 password return
password217	TokenNameIdentifier	 password217
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
USE214_tree	TokenNameIdentifier	 US E214 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_USE	TokenNameIdentifier	 stream  USE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token USE"	TokenNameStringLiteral	token USE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_username	TokenNameIdentifier	 stream username
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule username"	TokenNameStringLiteral	rule username
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyspace	TokenNameIdentifier	 stream keyspace
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyspace"	TokenNameStringLiteral	rule keyspace
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_password	TokenNameIdentifier	 stream password
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule password"	TokenNameStringLiteral	rule password
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:5: ( USE keyspace ( username )? ( password )? -> ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:5: ( USE keyspace ( username )? ( password )? -> ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:7: USE keyspace ( username )? ( password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:7: USE keyspace ( username )? ( password )? 
{	TokenNameLBRACE	
USE214	TokenNameIdentifier	 US E214
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
USE	TokenNameIdentifier	 USE
,	TokenNameCOMMA	
FOLLOW_USE_in_useKeyspace2903	TokenNameIdentifier	 FOLLOW  USE in use Keyspace2903
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_USE	TokenNameIdentifier	 stream  USE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
USE214	TokenNameIdentifier	 US E214
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspace_in_useKeyspace2905	TokenNameIdentifier	 FOLLOW keyspace in use Keyspace2905
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyspace215	TokenNameIdentifier	 keyspace215
=	TokenNameEQUAL	
keyspace	TokenNameIdentifier	 keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyspace215	TokenNameIdentifier	 keyspace215
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:20: ( username )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:20: ( username )? 
int	TokenNameint	
alt23	TokenNameIdentifier	 alt23
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA23_0	TokenNameIdentifier	 L A23 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA23_0	TokenNameIdentifier	 L A23 0
==	TokenNameEQUAL_EQUAL	
Identifier	TokenNameIdentifier	 Identifier
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt23	TokenNameIdentifier	 alt23
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt23	TokenNameIdentifier	 alt23
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:22: username 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:22: username 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_useKeyspace2909	TokenNameIdentifier	 FOLLOW username in use Keyspace2909
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username216	TokenNameIdentifier	 username216
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
username216	TokenNameIdentifier	 username216
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:34: ( password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:34: ( password )? 
int	TokenNameint	
alt24	TokenNameIdentifier	 alt24
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA24_0	TokenNameIdentifier	 L A24 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA24_0	TokenNameIdentifier	 L A24 0
==	TokenNameEQUAL_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt24	TokenNameIdentifier	 alt24
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt24	TokenNameIdentifier	 alt24
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:36: password 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:380:36: password 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_password_in_useKeyspace2916	TokenNameIdentifier	 FOLLOW password in use Keyspace2916
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
password217	TokenNameIdentifier	 password217
=	TokenNameEQUAL	
password	TokenNameIdentifier	 password
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
password217	TokenNameIdentifier	 password217
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: username, keyspace, password 	TokenNameCOMMENT_LINE	elements: username, keyspace, password 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 381:9: -> ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) 	TokenNameCOMMENT_LINE	381:9: -> ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:381:12: ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:381:12: ^( NODE_USE_TABLE keyspace ( username )? ( password )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_USE_TABLE	TokenNameIdentifier	 NODE  USE  TABLE
,	TokenNameCOMMA	
"NODE_USE_TABLE"	TokenNameStringLiteral	NODE_USE_TABLE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyspace	TokenNameIdentifier	 stream keyspace
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:381:38: ( username )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:381:38: ( username )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_username	TokenNameIdentifier	 stream username
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:381:52: ( password )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:381:52: ( password )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_password	TokenNameIdentifier	 stream password
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "useKeyspace" 	TokenNameCOMMENT_LINE	$ANTLR end "useKeyspace" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
traceNextQuery_return	TokenNameIdentifier	 trace Next Query return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "traceNextQuery" 	TokenNameCOMMENT_LINE	$ANTLR start "traceNextQuery" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:384:1: traceNextQuery : TRACE NEXT QUERY -> ^( NODE_TRACE_NEXT_QUERY ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:384:1: traceNextQuery : TRACE NEXT QUERY -> ^( NODE_TRACE_NEXT_QUERY ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceNextQuery_return	TokenNameIdentifier	 trace Next Query return
traceNextQuery	TokenNameIdentifier	 trace Next Query
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceNextQuery_return	TokenNameIdentifier	 trace Next Query return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceNextQuery_return	TokenNameIdentifier	 trace Next Query return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TRACE218	TokenNameIdentifier	 TRAC E218
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
NEXT219	TokenNameIdentifier	 NEX T219
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
QUERY220	TokenNameIdentifier	 QUER Y220
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TRACE218_tree	TokenNameIdentifier	 TRAC E218 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
NEXT219_tree	TokenNameIdentifier	 NEX T219 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
QUERY220_tree	TokenNameIdentifier	 QUER Y220 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_QUERY	TokenNameIdentifier	 stream  QUERY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token QUERY"	TokenNameStringLiteral	token QUERY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_NEXT	TokenNameIdentifier	 stream  NEXT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token NEXT"	TokenNameStringLiteral	token NEXT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_TRACE	TokenNameIdentifier	 stream  TRACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token TRACE"	TokenNameStringLiteral	token TRACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:385:5: ( TRACE NEXT QUERY -> ^( NODE_TRACE_NEXT_QUERY ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:385:5: ( TRACE NEXT QUERY -> ^( NODE_TRACE_NEXT_QUERY ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:385:7: TRACE NEXT QUERY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:385:7: TRACE NEXT QUERY 
{	TokenNameLBRACE	
TRACE218	TokenNameIdentifier	 TRAC E218
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TRACE	TokenNameIdentifier	 TRACE
,	TokenNameCOMMA	
FOLLOW_TRACE_in_traceNextQuery2971	TokenNameIdentifier	 FOLLOW  TRACE in trace Next Query2971
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TRACE	TokenNameIdentifier	 stream  TRACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TRACE218	TokenNameIdentifier	 TRAC E218
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
NEXT219	TokenNameIdentifier	 NEX T219
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
NEXT	TokenNameIdentifier	 NEXT
,	TokenNameCOMMA	
FOLLOW_NEXT_in_traceNextQuery2973	TokenNameIdentifier	 FOLLOW  NEXT in trace Next Query2973
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_NEXT	TokenNameIdentifier	 stream  NEXT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
NEXT219	TokenNameIdentifier	 NEX T219
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
QUERY220	TokenNameIdentifier	 QUER Y220
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QUERY	TokenNameIdentifier	 QUERY
,	TokenNameCOMMA	
FOLLOW_QUERY_in_traceNextQuery2975	TokenNameIdentifier	 FOLLOW  QUERY in trace Next Query2975
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_QUERY	TokenNameIdentifier	 stream  QUERY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
QUERY220	TokenNameIdentifier	 QUER Y220
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 386:9: -> ^( NODE_TRACE_NEXT_QUERY ) 	TokenNameCOMMENT_LINE	386:9: -> ^( NODE_TRACE_NEXT_QUERY ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:386:12: ^( NODE_TRACE_NEXT_QUERY ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:386:12: ^( NODE_TRACE_NEXT_QUERY ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_TRACE_NEXT_QUERY	TokenNameIdentifier	 NODE  TRACE  NEXT  QUERY
,	TokenNameCOMMA	
"NODE_TRACE_NEXT_QUERY"	TokenNameStringLiteral	NODE_TRACE_NEXT_QUERY
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "traceNextQuery" 	TokenNameCOMMENT_LINE	$ANTLR end "traceNextQuery" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
setTraceProbability_return	TokenNameIdentifier	 set Trace Probability return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "setTraceProbability" 	TokenNameCOMMENT_LINE	$ANTLR start "setTraceProbability" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:389:1: setTraceProbability : SET TRACE PROBABILITY tracingProbability -> ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:389:1: setTraceProbability : SET TRACE PROBABILITY tracingProbability -> ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setTraceProbability_return	TokenNameIdentifier	 set Trace Probability return
setTraceProbability	TokenNameIdentifier	 set Trace Probability
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setTraceProbability_return	TokenNameIdentifier	 set Trace Probability return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
setTraceProbability_return	TokenNameIdentifier	 set Trace Probability return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
SET221	TokenNameIdentifier	 SE T221
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
TRACE222	TokenNameIdentifier	 TRAC E222
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
PROBABILITY223	TokenNameIdentifier	 PROBABILIT Y223
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
tracingProbability_return	TokenNameIdentifier	 tracing Probability return
tracingProbability224	TokenNameIdentifier	 tracing Probability224
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
SET221_tree	TokenNameIdentifier	 SE T221 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
TRACE222_tree	TokenNameIdentifier	 TRAC E222 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
PROBABILITY223_tree	TokenNameIdentifier	 PROBABILIT Y223 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_SET	TokenNameIdentifier	 stream  SET
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token SET"	TokenNameStringLiteral	token SET
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_PROBABILITY	TokenNameIdentifier	 stream  PROBABILITY
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token PROBABILITY"	TokenNameStringLiteral	token PROBABILITY
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_TRACE	TokenNameIdentifier	 stream  TRACE
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token TRACE"	TokenNameStringLiteral	token TRACE
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_tracingProbability	TokenNameIdentifier	 stream tracing Probability
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule tracingProbability"	TokenNameStringLiteral	rule tracingProbability
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:390:5: ( SET TRACE PROBABILITY tracingProbability -> ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:390:5: ( SET TRACE PROBABILITY tracingProbability -> ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:390:7: SET TRACE PROBABILITY tracingProbability 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:390:7: SET TRACE PROBABILITY tracingProbability 
{	TokenNameLBRACE	
SET221	TokenNameIdentifier	 SE T221
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
SET	TokenNameIdentifier	 SET
,	TokenNameCOMMA	
FOLLOW_SET_in_setTraceProbability3006	TokenNameIdentifier	 FOLLOW  SET in set Trace Probability3006
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_SET	TokenNameIdentifier	 stream  SET
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
SET221	TokenNameIdentifier	 SE T221
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
TRACE222	TokenNameIdentifier	 TRAC E222
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
TRACE	TokenNameIdentifier	 TRACE
,	TokenNameCOMMA	
FOLLOW_TRACE_in_setTraceProbability3008	TokenNameIdentifier	 FOLLOW  TRACE in set Trace Probability3008
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_TRACE	TokenNameIdentifier	 stream  TRACE
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
TRACE222	TokenNameIdentifier	 TRAC E222
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
PROBABILITY223	TokenNameIdentifier	 PROBABILIT Y223
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
PROBABILITY	TokenNameIdentifier	 PROBABILITY
,	TokenNameCOMMA	
FOLLOW_PROBABILITY_in_setTraceProbability3010	TokenNameIdentifier	 FOLLOW  PROBABILITY in set Trace Probability3010
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_PROBABILITY	TokenNameIdentifier	 stream  PROBABILITY
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
PROBABILITY223	TokenNameIdentifier	 PROBABILIT Y223
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_tracingProbability_in_setTraceProbability3012	TokenNameIdentifier	 FOLLOW tracing Probability in set Trace Probability3012
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tracingProbability224	TokenNameIdentifier	 tracing Probability224
=	TokenNameEQUAL	
tracingProbability	TokenNameIdentifier	 tracing Probability
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_tracingProbability	TokenNameIdentifier	 stream tracing Probability
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
tracingProbability224	TokenNameIdentifier	 tracing Probability224
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: tracingProbability 	TokenNameCOMMENT_LINE	elements: tracingProbability 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 391:9: -> ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) 	TokenNameCOMMENT_LINE	391:9: -> ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:391:12: ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:391:12: ^( NODE_SET_TRACE_PROBABILITY tracingProbability ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_SET_TRACE_PROBABILITY	TokenNameIdentifier	 NODE  SET  TRACE  PROBABILITY
,	TokenNameCOMMA	
"NODE_SET_TRACE_PROBABILITY"	TokenNameStringLiteral	NODE_SET_TRACE_PROBABILITY
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_tracingProbability	TokenNameIdentifier	 stream tracing Probability
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "setTraceProbability" 	TokenNameCOMMENT_LINE	$ANTLR end "setTraceProbability" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "keyValuePairExpr" 	TokenNameCOMMENT_LINE	$ANTLR start "keyValuePairExpr" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:394:1: keyValuePairExpr : entityName ( ( AND | WITH ) keyValuePair )* -> ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:394:1: keyValuePairExpr : entityName ( ( AND | WITH ) keyValuePair )* -> ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
keyValuePairExpr	TokenNameIdentifier	 key Value Pair Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePairExpr_return	TokenNameIdentifier	 key Value Pair Expr return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
AND226	TokenNameIdentifier	 AN D226
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
WITH227	TokenNameIdentifier	 WIT H227
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName225	TokenNameIdentifier	 entity Name225
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePair_return	TokenNameIdentifier	 key Value Pair return
keyValuePair228	TokenNameIdentifier	 key Value Pair228
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
AND226_tree	TokenNameIdentifier	 AN D226 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
WITH227_tree	TokenNameIdentifier	 WIT H227 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_AND	TokenNameIdentifier	 stream  AND
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token AND"	TokenNameStringLiteral	token AND
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_WITH	TokenNameIdentifier	 stream  WITH
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token WITH"	TokenNameStringLiteral	token WITH
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_keyValuePair	TokenNameIdentifier	 stream key Value Pair
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule keyValuePair"	TokenNameStringLiteral	rule keyValuePair
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_entityName	TokenNameIdentifier	 stream entity Name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule entityName"	TokenNameStringLiteral	rule entityName
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:5: ( entityName ( ( AND | WITH ) keyValuePair )* -> ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:5: ( entityName ( ( AND | WITH ) keyValuePair )* -> ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:7: entityName ( ( AND | WITH ) keyValuePair )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:7: entityName ( ( AND | WITH ) keyValuePair )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_keyValuePairExpr3045	TokenNameIdentifier	 FOLLOW entity Name in key Value Pair Expr3045
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName225	TokenNameIdentifier	 entity Name225
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_entityName	TokenNameIdentifier	 stream entity Name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
entityName225	TokenNameIdentifier	 entity Name225
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:18: ( ( AND | WITH ) keyValuePair )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:18: ( ( AND | WITH ) keyValuePair )* 
loop26	TokenNameIdentifier	 loop26
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt26	TokenNameIdentifier	 alt26
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA26_0	TokenNameIdentifier	 L A26 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA26_0	TokenNameIdentifier	 L A26 0
==	TokenNameEQUAL_EQUAL	
WITH	TokenNameIdentifier	 WITH
||	TokenNameOR_OR	
LA26_0	TokenNameIdentifier	 L A26 0
==	TokenNameEQUAL_EQUAL	
AND	TokenNameIdentifier	 AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt26	TokenNameIdentifier	 alt26
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt26	TokenNameIdentifier	 alt26
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:20: ( AND | WITH ) keyValuePair 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:20: ( AND | WITH ) keyValuePair 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:20: ( AND | WITH ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:20: ( AND | WITH ) 
int	TokenNameint	
alt25	TokenNameIdentifier	 alt25
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA25_0	TokenNameIdentifier	 L A25 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
AND	TokenNameIdentifier	 AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt25	TokenNameIdentifier	 alt25
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
WITH	TokenNameIdentifier	 WITH
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt25	TokenNameIdentifier	 alt25
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
25	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt25	TokenNameIdentifier	 alt25
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:21: AND 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:21: AND 
{	TokenNameLBRACE	
AND226	TokenNameIdentifier	 AN D226
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
AND	TokenNameIdentifier	 AND
,	TokenNameCOMMA	
FOLLOW_AND_in_keyValuePairExpr3050	TokenNameIdentifier	 FOLLOW  AND in key Value Pair Expr3050
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_AND	TokenNameIdentifier	 stream  AND
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
AND226	TokenNameIdentifier	 AN D226
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:27: WITH 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:395:27: WITH 
{	TokenNameLBRACE	
WITH227	TokenNameIdentifier	 WIT H227
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
WITH	TokenNameIdentifier	 WITH
,	TokenNameCOMMA	
FOLLOW_WITH_in_keyValuePairExpr3054	TokenNameIdentifier	 FOLLOW  WITH in key Value Pair Expr3054
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_WITH	TokenNameIdentifier	 stream  WITH
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
WITH227	TokenNameIdentifier	 WIT H227
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyValuePair_in_keyValuePairExpr3057	TokenNameIdentifier	 FOLLOW key Value Pair in key Value Pair Expr3057
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
keyValuePair228	TokenNameIdentifier	 key Value Pair228
=	TokenNameEQUAL	
keyValuePair	TokenNameIdentifier	 key Value Pair
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_keyValuePair	TokenNameIdentifier	 stream key Value Pair
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
keyValuePair228	TokenNameIdentifier	 key Value Pair228
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop26	TokenNameIdentifier	 loop26
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: keyValuePair, entityName 	TokenNameCOMMENT_LINE	elements: keyValuePair, entityName 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 396:9: -> ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) 	TokenNameCOMMENT_LINE	396:9: -> ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:396:12: ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:396:12: ^( NODE_NEW_KEYSPACE_ACCESS entityName ( keyValuePair )* ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_NEW_KEYSPACE_ACCESS	TokenNameIdentifier	 NODE  NEW  KEYSPACE  ACCESS
,	TokenNameCOMMA	
"NODE_NEW_KEYSPACE_ACCESS"	TokenNameStringLiteral	NODE_NEW_KEYSPACE_ACCESS
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_entityName	TokenNameIdentifier	 stream entity Name
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:396:50: ( keyValuePair )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:396:50: ( keyValuePair )* 
while	TokenNamewhile	
(	TokenNameLPAREN	
stream_keyValuePair	TokenNameIdentifier	 stream key Value Pair
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_keyValuePair	TokenNameIdentifier	 stream key Value Pair
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_keyValuePair	TokenNameIdentifier	 stream key Value Pair
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "keyValuePairExpr" 	TokenNameCOMMENT_LINE	$ANTLR end "keyValuePairExpr" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
keyValuePair_return	TokenNameIdentifier	 key Value Pair return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "keyValuePair" 	TokenNameCOMMENT_LINE	$ANTLR start "keyValuePair" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:399:1: keyValuePair : attr_name '=' attrValue -> attr_name attrValue ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:399:1: keyValuePair : attr_name '=' attrValue -> attr_name attrValue ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePair_return	TokenNameIdentifier	 key Value Pair return
keyValuePair	TokenNameIdentifier	 key Value Pair
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePair_return	TokenNameIdentifier	 key Value Pair return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyValuePair_return	TokenNameIdentifier	 key Value Pair return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal230	TokenNameIdentifier	 char literal230
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attr_name_return	TokenNameIdentifier	 attr name return
attr_name229	TokenNameIdentifier	 attr name229
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValue_return	TokenNameIdentifier	 attr Value return
attrValue231	TokenNameIdentifier	 attr Value231
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal230_tree	TokenNameIdentifier	 char literal230 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_117	TokenNameIdentifier	 stream 117
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 117"	TokenNameStringLiteral	token 117
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_attr_name	TokenNameIdentifier	 stream attr name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule attr_name"	TokenNameStringLiteral	rule attr_name
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_attrValue	TokenNameIdentifier	 stream attr Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule attrValue"	TokenNameStringLiteral	rule attrValue
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:400:5: ( attr_name '=' attrValue -> attr_name attrValue ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:400:5: ( attr_name '=' attrValue -> attr_name attrValue ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:400:7: attr_name '=' attrValue 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:400:7: attr_name '=' attrValue 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_attr_name_in_keyValuePair3114	TokenNameIdentifier	 FOLLOW attr name in key Value Pair3114
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attr_name229	TokenNameIdentifier	 attr name229
=	TokenNameEQUAL	
attr_name	TokenNameIdentifier	 attr name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_attr_name	TokenNameIdentifier	 stream attr name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
attr_name229	TokenNameIdentifier	 attr name229
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal230	TokenNameIdentifier	 char literal230
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
117	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_117_in_keyValuePair3116	TokenNameIdentifier	 FOLLOW 117 in key Value Pair3116
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_117	TokenNameIdentifier	 stream 117
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal230	TokenNameIdentifier	 char literal230
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_attrValue_in_keyValuePair3118	TokenNameIdentifier	 FOLLOW attr Value in key Value Pair3118
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attrValue231	TokenNameIdentifier	 attr Value231
=	TokenNameEQUAL	
attrValue	TokenNameIdentifier	 attr Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_attrValue	TokenNameIdentifier	 stream attr Value
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
attrValue231	TokenNameIdentifier	 attr Value231
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: attr_name, attrValue 	TokenNameCOMMENT_LINE	elements: attr_name, attrValue 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 401:9: -> attr_name attrValue 	TokenNameCOMMENT_LINE	401:9: -> attr_name attrValue 
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
stream_attr_name	TokenNameIdentifier	 stream attr name
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
stream_attrValue	TokenNameIdentifier	 stream attr Value
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "keyValuePair" 	TokenNameCOMMENT_LINE	$ANTLR end "keyValuePair" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
attrValue_return	TokenNameIdentifier	 attr Value return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "attrValue" 	TokenNameCOMMENT_LINE	$ANTLR start "attrValue" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:404:1: attrValue : ( arrayConstruct | hashConstruct | attrValueString | attrValueInt | attrValueDouble ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:404:1: attrValue : ( arrayConstruct | hashConstruct | attrValueString | attrValueInt | attrValueDouble ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValue_return	TokenNameIdentifier	 attr Value return
attrValue	TokenNameIdentifier	 attr Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValue_return	TokenNameIdentifier	 attr Value return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValue_return	TokenNameIdentifier	 attr Value return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
arrayConstruct_return	TokenNameIdentifier	 array Construct return
arrayConstruct232	TokenNameIdentifier	 array Construct232
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
hashConstruct233	TokenNameIdentifier	 hash Construct233
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueString_return	TokenNameIdentifier	 attr Value String return
attrValueString234	TokenNameIdentifier	 attr Value String234
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueInt_return	TokenNameIdentifier	 attr Value Int return
attrValueInt235	TokenNameIdentifier	 attr Value Int235
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueDouble_return	TokenNameIdentifier	 attr Value Double return
attrValueDouble236	TokenNameIdentifier	 attr Value Double236
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:405:5: ( arrayConstruct | hashConstruct | attrValueString | attrValueInt | attrValueDouble ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:405:5: ( arrayConstruct | hashConstruct | attrValueString | attrValueInt | attrValueDouble ) 
int	TokenNameint	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
123	TokenNameIntegerLiteral	
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
126	TokenNameIntegerLiteral	
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
Identifier	TokenNameIdentifier	 Identifier
:	TokenNameCOLON	
case	TokenNamecase	
StringLiteral	TokenNameIdentifier	 String Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
:	TokenNameCOLON	
case	TokenNamecase	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
DoubleLiteral	TokenNameIdentifier	 Double Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
27	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt27	TokenNameIdentifier	 alt27
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:405:7: arrayConstruct 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:405:7: arrayConstruct 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_arrayConstruct_in_attrValue3150	TokenNameIdentifier	 FOLLOW array Construct in attr Value3150
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
arrayConstruct232	TokenNameIdentifier	 array Construct232
=	TokenNameEQUAL	
arrayConstruct	TokenNameIdentifier	 array Construct
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
arrayConstruct232	TokenNameIdentifier	 array Construct232
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:406:7: hashConstruct 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:406:7: hashConstruct 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_hashConstruct_in_attrValue3158	TokenNameIdentifier	 FOLLOW hash Construct in attr Value3158
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
hashConstruct233	TokenNameIdentifier	 hash Construct233
=	TokenNameEQUAL	
hashConstruct	TokenNameIdentifier	 hash Construct
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
hashConstruct233	TokenNameIdentifier	 hash Construct233
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:407:7: attrValueString 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:407:7: attrValueString 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_attrValueString_in_attrValue3166	TokenNameIdentifier	 FOLLOW attr Value String in attr Value3166
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attrValueString234	TokenNameIdentifier	 attr Value String234
=	TokenNameEQUAL	
attrValueString	TokenNameIdentifier	 attr Value String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
attrValueString234	TokenNameIdentifier	 attr Value String234
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:408:7: attrValueInt 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:408:7: attrValueInt 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_attrValueInt_in_attrValue3174	TokenNameIdentifier	 FOLLOW attr Value Int in attr Value3174
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attrValueInt235	TokenNameIdentifier	 attr Value Int235
=	TokenNameEQUAL	
attrValueInt	TokenNameIdentifier	 attr Value Int
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
attrValueInt235	TokenNameIdentifier	 attr Value Int235
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:409:7: attrValueDouble 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:409:7: attrValueDouble 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_attrValueDouble_in_attrValue3182	TokenNameIdentifier	 FOLLOW attr Value Double in attr Value3182
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attrValueDouble236	TokenNameIdentifier	 attr Value Double236
=	TokenNameEQUAL	
attrValueDouble	TokenNameIdentifier	 attr Value Double
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
attrValueDouble236	TokenNameIdentifier	 attr Value Double236
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "attrValue" 	TokenNameCOMMENT_LINE	$ANTLR end "attrValue" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
arrayConstruct_return	TokenNameIdentifier	 array Construct return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "arrayConstruct" 	TokenNameCOMMENT_LINE	$ANTLR start "arrayConstruct" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:413:1: arrayConstruct : '[' ( hashConstruct ( ',' )? )* ']' -> ^( ARRAY ( hashConstruct )* ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:413:1: arrayConstruct : '[' ( hashConstruct ( ',' )? )* ']' -> ^( ARRAY ( hashConstruct )* ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
arrayConstruct_return	TokenNameIdentifier	 array Construct return
arrayConstruct	TokenNameIdentifier	 array Construct
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
arrayConstruct_return	TokenNameIdentifier	 array Construct return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
arrayConstruct_return	TokenNameIdentifier	 array Construct return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal237	TokenNameIdentifier	 char literal237
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal239	TokenNameIdentifier	 char literal239
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal240	TokenNameIdentifier	 char literal240
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
hashConstruct238	TokenNameIdentifier	 hash Construct238
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal237_tree	TokenNameIdentifier	 char literal237 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal239_tree	TokenNameIdentifier	 char literal239 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal240_tree	TokenNameIdentifier	 char literal240 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_125	TokenNameIdentifier	 stream 125
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 125"	TokenNameStringLiteral	token 125
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_123	TokenNameIdentifier	 stream 123
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 123"	TokenNameStringLiteral	token 123
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_124	TokenNameIdentifier	 stream 124
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 124"	TokenNameStringLiteral	token 124
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_hashConstruct	TokenNameIdentifier	 stream hash Construct
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule hashConstruct"	TokenNameStringLiteral	rule hashConstruct
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:5: ( '[' ( hashConstruct ( ',' )? )* ']' -> ^( ARRAY ( hashConstruct )* ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:5: ( '[' ( hashConstruct ( ',' )? )* ']' -> ^( ARRAY ( hashConstruct )* ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:7: '[' ( hashConstruct ( ',' )? )* ']' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:7: '[' ( hashConstruct ( ',' )? )* ']' 
{	TokenNameLBRACE	
char_literal237	TokenNameIdentifier	 char literal237
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
123	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_123_in_arrayConstruct3201	TokenNameIdentifier	 FOLLOW 123 in array Construct3201
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_123	TokenNameIdentifier	 stream 123
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal237	TokenNameIdentifier	 char literal237
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:11: ( hashConstruct ( ',' )? )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:11: ( hashConstruct ( ',' )? )* 
loop29	TokenNameIdentifier	 loop29
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt29	TokenNameIdentifier	 alt29
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA29_0	TokenNameIdentifier	 L A29 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA29_0	TokenNameIdentifier	 L A29 0
==	TokenNameEQUAL_EQUAL	
126	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt29	TokenNameIdentifier	 alt29
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt29	TokenNameIdentifier	 alt29
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:12: hashConstruct ( ',' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:12: hashConstruct ( ',' )? 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_hashConstruct_in_arrayConstruct3204	TokenNameIdentifier	 FOLLOW hash Construct in array Construct3204
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
hashConstruct238	TokenNameIdentifier	 hash Construct238
=	TokenNameEQUAL	
hashConstruct	TokenNameIdentifier	 hash Construct
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_hashConstruct	TokenNameIdentifier	 stream hash Construct
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
hashConstruct238	TokenNameIdentifier	 hash Construct238
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:26: ( ',' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:414:26: ( ',' )? 
int	TokenNameint	
alt28	TokenNameIdentifier	 alt28
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA28_0	TokenNameIdentifier	 L A28 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA28_0	TokenNameIdentifier	 L A28 0
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt28	TokenNameIdentifier	 alt28
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt28	TokenNameIdentifier	 alt28
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: ',' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: ',' 
{	TokenNameLBRACE	
char_literal239	TokenNameIdentifier	 char literal239
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
124	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_124_in_arrayConstruct3206	TokenNameIdentifier	 FOLLOW 124 in array Construct3206
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_124	TokenNameIdentifier	 stream 124
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal239	TokenNameIdentifier	 char literal239
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop29	TokenNameIdentifier	 loop29
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal240	TokenNameIdentifier	 char literal240
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_arrayConstruct3211	TokenNameIdentifier	 FOLLOW 125 in array Construct3211
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_125	TokenNameIdentifier	 stream 125
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal240	TokenNameIdentifier	 char literal240
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: hashConstruct 	TokenNameCOMMENT_LINE	elements: hashConstruct 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 415:9: -> ^( ARRAY ( hashConstruct )* ) 	TokenNameCOMMENT_LINE	415:9: -> ^( ARRAY ( hashConstruct )* ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:415:12: ^( ARRAY ( hashConstruct )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:415:12: ^( ARRAY ( hashConstruct )* ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
ARRAY	TokenNameIdentifier	 ARRAY
,	TokenNameCOMMA	
"ARRAY"	TokenNameStringLiteral	ARRAY
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:415:20: ( hashConstruct )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:415:20: ( hashConstruct )* 
while	TokenNamewhile	
(	TokenNameLPAREN	
stream_hashConstruct	TokenNameIdentifier	 stream hash Construct
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_hashConstruct	TokenNameIdentifier	 stream hash Construct
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_hashConstruct	TokenNameIdentifier	 stream hash Construct
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "arrayConstruct" 	TokenNameCOMMENT_LINE	$ANTLR end "arrayConstruct" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "hashConstruct" 	TokenNameCOMMENT_LINE	$ANTLR start "hashConstruct" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:418:1: hashConstruct : '{' hashElementPair ( ',' hashElementPair )* '}' -> ^( HASH ( hashElementPair )+ ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:418:1: hashConstruct : '{' hashElementPair ( ',' hashElementPair )* '}' -> ^( HASH ( hashElementPair )+ ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
hashConstruct	TokenNameIdentifier	 hash Construct
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal241	TokenNameIdentifier	 char literal241
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal243	TokenNameIdentifier	 char literal243
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal245	TokenNameIdentifier	 char literal245
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashElementPair_return	TokenNameIdentifier	 hash Element Pair return
hashElementPair242	TokenNameIdentifier	 hash Element Pair242
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashElementPair_return	TokenNameIdentifier	 hash Element Pair return
hashElementPair244	TokenNameIdentifier	 hash Element Pair244
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal241_tree	TokenNameIdentifier	 char literal241 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal243_tree	TokenNameIdentifier	 char literal243 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal245_tree	TokenNameIdentifier	 char literal245 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_126	TokenNameIdentifier	 stream 126
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 126"	TokenNameStringLiteral	token 126
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_127	TokenNameIdentifier	 stream 127
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 127"	TokenNameStringLiteral	token 127
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_124	TokenNameIdentifier	 stream 124
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 124"	TokenNameStringLiteral	token 124
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule hashElementPair"	TokenNameStringLiteral	rule hashElementPair
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:5: ( '{' hashElementPair ( ',' hashElementPair )* '}' -> ^( HASH ( hashElementPair )+ ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:5: ( '{' hashElementPair ( ',' hashElementPair )* '}' -> ^( HASH ( hashElementPair )+ ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:7: '{' hashElementPair ( ',' hashElementPair )* '}' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:7: '{' hashElementPair ( ',' hashElementPair )* '}' 
{	TokenNameLBRACE	
char_literal241	TokenNameIdentifier	 char literal241
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_hashConstruct3249	TokenNameIdentifier	 FOLLOW 126 in hash Construct3249
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_126	TokenNameIdentifier	 stream 126
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal241	TokenNameIdentifier	 char literal241
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_hashElementPair_in_hashConstruct3251	TokenNameIdentifier	 FOLLOW hash Element Pair in hash Construct3251
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
hashElementPair242	TokenNameIdentifier	 hash Element Pair242
=	TokenNameEQUAL	
hashElementPair	TokenNameIdentifier	 hash Element Pair
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
hashElementPair242	TokenNameIdentifier	 hash Element Pair242
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:27: ( ',' hashElementPair )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:27: ( ',' hashElementPair )* 
loop30	TokenNameIdentifier	 loop30
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt30	TokenNameIdentifier	 alt30
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA30_0	TokenNameIdentifier	 L A30 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA30_0	TokenNameIdentifier	 L A30 0
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt30	TokenNameIdentifier	 alt30
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt30	TokenNameIdentifier	 alt30
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:28: ',' hashElementPair 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:419:28: ',' hashElementPair 
{	TokenNameLBRACE	
char_literal243	TokenNameIdentifier	 char literal243
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
124	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_124_in_hashConstruct3254	TokenNameIdentifier	 FOLLOW 124 in hash Construct3254
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_124	TokenNameIdentifier	 stream 124
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal243	TokenNameIdentifier	 char literal243
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_hashElementPair_in_hashConstruct3256	TokenNameIdentifier	 FOLLOW hash Element Pair in hash Construct3256
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
hashElementPair244	TokenNameIdentifier	 hash Element Pair244
=	TokenNameEQUAL	
hashElementPair	TokenNameIdentifier	 hash Element Pair
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
hashElementPair244	TokenNameIdentifier	 hash Element Pair244
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop30	TokenNameIdentifier	 loop30
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal245	TokenNameIdentifier	 char literal245
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_hashConstruct3260	TokenNameIdentifier	 FOLLOW 127 in hash Construct3260
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_127	TokenNameIdentifier	 stream 127
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal245	TokenNameIdentifier	 char literal245
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: hashElementPair 	TokenNameCOMMENT_LINE	elements: hashElementPair 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 420:9: -> ^( HASH ( hashElementPair )+ ) 	TokenNameCOMMENT_LINE	420:9: -> ^( HASH ( hashElementPair )+ ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:420:12: ^( HASH ( hashElementPair )+ ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:420:12: ^( HASH ( hashElementPair )+ ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
HASH	TokenNameIdentifier	 HASH
,	TokenNameCOMMA	
"HASH"	TokenNameStringLiteral	HASH
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
(	TokenNameLPAREN	
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
throw	TokenNamethrow	
new	TokenNamenew	
RewriteEarlyExitException	TokenNameIdentifier	 Rewrite Early Exit Exception
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_hashElementPair	TokenNameIdentifier	 stream hash Element Pair
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "hashConstruct" 	TokenNameCOMMENT_LINE	$ANTLR end "hashConstruct" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
hashElementPair_return	TokenNameIdentifier	 hash Element Pair return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "hashElementPair" 	TokenNameCOMMENT_LINE	$ANTLR start "hashElementPair" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:423:1: hashElementPair : rowKey ':' rowValue -> ^( PAIR rowKey rowValue ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:423:1: hashElementPair : rowKey ':' rowValue -> ^( PAIR rowKey rowValue ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashElementPair_return	TokenNameIdentifier	 hash Element Pair return
hashElementPair	TokenNameIdentifier	 hash Element Pair
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashElementPair_return	TokenNameIdentifier	 hash Element Pair return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashElementPair_return	TokenNameIdentifier	 hash Element Pair return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal247	TokenNameIdentifier	 char literal247
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowKey_return	TokenNameIdentifier	 row Key return
rowKey246	TokenNameIdentifier	 row Key246
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowValue_return	TokenNameIdentifier	 row Value return
rowValue248	TokenNameIdentifier	 row Value248
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal247_tree	TokenNameIdentifier	 char literal247 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_128	TokenNameIdentifier	 stream 128
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 128"	TokenNameStringLiteral	token 128
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_rowKey	TokenNameIdentifier	 stream row Key
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule rowKey"	TokenNameStringLiteral	rule rowKey
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_rowValue	TokenNameIdentifier	 stream row Value
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule rowValue"	TokenNameStringLiteral	rule rowValue
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:424:5: ( rowKey ':' rowValue -> ^( PAIR rowKey rowValue ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:424:5: ( rowKey ':' rowValue -> ^( PAIR rowKey rowValue ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:424:7: rowKey ':' rowValue 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:424:7: rowKey ':' rowValue 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_rowKey_in_hashElementPair3296	TokenNameIdentifier	 FOLLOW row Key in hash Element Pair3296
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
rowKey246	TokenNameIdentifier	 row Key246
=	TokenNameEQUAL	
rowKey	TokenNameIdentifier	 row Key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_rowKey	TokenNameIdentifier	 stream row Key
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
rowKey246	TokenNameIdentifier	 row Key246
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal247	TokenNameIdentifier	 char literal247
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
128	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_128_in_hashElementPair3298	TokenNameIdentifier	 FOLLOW 128 in hash Element Pair3298
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_128	TokenNameIdentifier	 stream 128
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal247	TokenNameIdentifier	 char literal247
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_rowValue_in_hashElementPair3300	TokenNameIdentifier	 FOLLOW row Value in hash Element Pair3300
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
rowValue248	TokenNameIdentifier	 row Value248
=	TokenNameEQUAL	
rowValue	TokenNameIdentifier	 row Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_rowValue	TokenNameIdentifier	 stream row Value
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
rowValue248	TokenNameIdentifier	 row Value248
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: rowKey, rowValue 	TokenNameCOMMENT_LINE	elements: rowKey, rowValue 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 425:9: -> ^( PAIR rowKey rowValue ) 	TokenNameCOMMENT_LINE	425:9: -> ^( PAIR rowKey rowValue ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:425:12: ^( PAIR rowKey rowValue ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:425:12: ^( PAIR rowKey rowValue ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
PAIR	TokenNameIdentifier	 PAIR
,	TokenNameCOMMA	
"PAIR"	TokenNameStringLiteral	PAIR
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_rowKey	TokenNameIdentifier	 stream row Key
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_rowValue	TokenNameIdentifier	 stream row Value
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "hashElementPair" 	TokenNameCOMMENT_LINE	$ANTLR end "hashElementPair" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "columnFamilyExpr" 	TokenNameCOMMENT_LINE	$ANTLR start "columnFamilyExpr" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:428:1: columnFamilyExpr : columnFamily '[' rowKey ']' ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? -> ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:428:1: columnFamilyExpr : columnFamily '[' rowKey ']' ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? -> ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
columnFamilyExpr	TokenNameIdentifier	 column Family Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamilyExpr_return	TokenNameIdentifier	 column Family Expr return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal250	TokenNameIdentifier	 char literal250
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal252	TokenNameIdentifier	 char literal252
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal253	TokenNameIdentifier	 char literal253
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal254	TokenNameIdentifier	 char literal254
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal255	TokenNameIdentifier	 char literal255
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal256	TokenNameIdentifier	 char literal256
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
super_column	TokenNameIdentifier	 super column
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily249	TokenNameIdentifier	 column Family249
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowKey_return	TokenNameIdentifier	 row Key return
rowKey251	TokenNameIdentifier	 row Key251
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal250_tree	TokenNameIdentifier	 char literal250 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal252_tree	TokenNameIdentifier	 char literal252 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal253_tree	TokenNameIdentifier	 char literal253 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal254_tree	TokenNameIdentifier	 char literal254 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal255_tree	TokenNameIdentifier	 char literal255 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal256_tree	TokenNameIdentifier	 char literal256 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_125	TokenNameIdentifier	 stream 125
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 125"	TokenNameStringLiteral	token 125
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_123	TokenNameIdentifier	 stream 123
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 123"	TokenNameStringLiteral	token 123
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnFamily	TokenNameIdentifier	 stream column Family
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnFamily"	TokenNameStringLiteral	rule columnFamily
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_rowKey	TokenNameIdentifier	 stream row Key
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule rowKey"	TokenNameStringLiteral	rule rowKey
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_columnOrSuperColumn	TokenNameIdentifier	 stream column Or Super Column
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule columnOrSuperColumn"	TokenNameStringLiteral	rule columnOrSuperColumn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:429:5: ( columnFamily '[' rowKey ']' ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? -> ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:429:5: ( columnFamily '[' rowKey ']' ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? -> ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:429:7: columnFamily '[' rowKey ']' ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:429:7: columnFamily '[' rowKey ']' ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamily_in_columnFamilyExpr3335	TokenNameIdentifier	 FOLLOW column Family in column Family Expr3335
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columnFamily249	TokenNameIdentifier	 column Family249
=	TokenNameEQUAL	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columnFamily249	TokenNameIdentifier	 column Family249
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal250	TokenNameIdentifier	 char literal250
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
123	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_123_in_columnFamilyExpr3337	TokenNameIdentifier	 FOLLOW 123 in column Family Expr3337
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_123	TokenNameIdentifier	 stream 123
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal250	TokenNameIdentifier	 char literal250
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_rowKey_in_columnFamilyExpr3339	TokenNameIdentifier	 FOLLOW row Key in column Family Expr3339
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
rowKey251	TokenNameIdentifier	 row Key251
=	TokenNameEQUAL	
rowKey	TokenNameIdentifier	 row Key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_rowKey	TokenNameIdentifier	 stream row Key
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
rowKey251	TokenNameIdentifier	 row Key251
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal252	TokenNameIdentifier	 char literal252
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_columnFamilyExpr3341	TokenNameIdentifier	 FOLLOW 125 in column Family Expr3341
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_125	TokenNameIdentifier	 stream 125
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal252	TokenNameIdentifier	 char literal252
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:430:9: ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:430:9: ( '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? )? 
int	TokenNameint	
alt32	TokenNameIdentifier	 alt32
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA32_0	TokenNameIdentifier	 L A32 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA32_0	TokenNameIdentifier	 L A32 0
==	TokenNameEQUAL_EQUAL	
123	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt32	TokenNameIdentifier	 alt32
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt32	TokenNameIdentifier	 alt32
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:430:11: '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:430:11: '[' column= columnOrSuperColumn ']' ( '[' super_column= columnOrSuperColumn ']' )? 
{	TokenNameLBRACE	
char_literal253	TokenNameIdentifier	 char literal253
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
123	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_123_in_columnFamilyExpr3354	TokenNameIdentifier	 FOLLOW 123 in column Family Expr3354
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_123	TokenNameIdentifier	 stream 123
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal253	TokenNameIdentifier	 char literal253
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnOrSuperColumn_in_columnFamilyExpr3358	TokenNameIdentifier	 FOLLOW column Or Super Column in column Family Expr3358
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
column	TokenNameIdentifier	 column
=	TokenNameEQUAL	
columnOrSuperColumn	TokenNameIdentifier	 column Or Super Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnOrSuperColumn	TokenNameIdentifier	 stream column Or Super Column
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
column	TokenNameIdentifier	 column
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal254	TokenNameIdentifier	 char literal254
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_columnFamilyExpr3360	TokenNameIdentifier	 FOLLOW 125 in column Family Expr3360
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_125	TokenNameIdentifier	 stream 125
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal254	TokenNameIdentifier	 char literal254
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:431:13: ( '[' super_column= columnOrSuperColumn ']' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:431:13: ( '[' super_column= columnOrSuperColumn ']' )? 
int	TokenNameint	
alt31	TokenNameIdentifier	 alt31
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA31_0	TokenNameIdentifier	 L A31 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA31_0	TokenNameIdentifier	 L A31 0
==	TokenNameEQUAL_EQUAL	
123	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt31	TokenNameIdentifier	 alt31
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt31	TokenNameIdentifier	 alt31
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:431:14: '[' super_column= columnOrSuperColumn ']' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:431:14: '[' super_column= columnOrSuperColumn ']' 
{	TokenNameLBRACE	
char_literal255	TokenNameIdentifier	 char literal255
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
123	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_123_in_columnFamilyExpr3376	TokenNameIdentifier	 FOLLOW 123 in column Family Expr3376
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_123	TokenNameIdentifier	 stream 123
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal255	TokenNameIdentifier	 char literal255
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnOrSuperColumn_in_columnFamilyExpr3380	TokenNameIdentifier	 FOLLOW column Or Super Column in column Family Expr3380
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
super_column	TokenNameIdentifier	 super column
=	TokenNameEQUAL	
columnOrSuperColumn	TokenNameIdentifier	 column Or Super Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_columnOrSuperColumn	TokenNameIdentifier	 stream column Or Super Column
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
super_column	TokenNameIdentifier	 super column
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal256	TokenNameIdentifier	 char literal256
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_columnFamilyExpr3382	TokenNameIdentifier	 FOLLOW 125 in column Family Expr3382
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_125	TokenNameIdentifier	 stream 125
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal256	TokenNameIdentifier	 char literal256
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columnFamily, rowKey, column, super_column 	TokenNameCOMMENT_LINE	elements: columnFamily, rowKey, column, super_column 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval, column, super_column 	TokenNameCOMMENT_LINE	rule labels: retval, column, super_column 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_column	TokenNameIdentifier	 stream column
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule column"	TokenNameStringLiteral	rule column
,	TokenNameCOMMA	
column	TokenNameIdentifier	 column
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
column	TokenNameIdentifier	 column
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_super_column	TokenNameIdentifier	 stream super column
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule super_column"	TokenNameStringLiteral	rule super_column
,	TokenNameCOMMA	
super_column	TokenNameIdentifier	 super column
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
super_column	TokenNameIdentifier	 super column
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 433:7: -> ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) 	TokenNameCOMMENT_LINE	433:7: -> ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:433:10: ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:433:10: ^( NODE_COLUMN_ACCESS columnFamily rowKey ( $column ( $super_column)? )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_COLUMN_ACCESS	TokenNameIdentifier	 NODE  COLUMN  ACCESS
,	TokenNameCOMMA	
"NODE_COLUMN_ACCESS"	TokenNameStringLiteral	NODE_COLUMN_ACCESS
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columnFamily	TokenNameIdentifier	 stream column Family
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_rowKey	TokenNameIdentifier	 stream row Key
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:433:51: ( $column ( $super_column)? )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:433:51: ( $column ( $super_column)? )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_column	TokenNameIdentifier	 stream column
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
||	TokenNameOR_OR	
stream_super_column	TokenNameIdentifier	 stream super column
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_column	TokenNameIdentifier	 stream column
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:433:60: ( $super_column)? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:433:60: ( $super_column)? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_super_column	TokenNameIdentifier	 stream super column
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_super_column	TokenNameIdentifier	 stream super column
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_super_column	TokenNameIdentifier	 stream super column
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_column	TokenNameIdentifier	 stream column
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
stream_super_column	TokenNameIdentifier	 stream super column
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "columnFamilyExpr" 	TokenNameCOMMENT_LINE	$ANTLR end "columnFamilyExpr" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
keyRangeExpr_return	TokenNameIdentifier	 key Range Expr return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "keyRangeExpr" 	TokenNameCOMMENT_LINE	$ANTLR start "keyRangeExpr" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:436:1: keyRangeExpr : '[' ( (startKey= entityName )? ':' (endKey= entityName )? )? ']' -> ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:436:1: keyRangeExpr : '[' ( (startKey= entityName )? ':' (endKey= entityName )? )? ']' -> ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyRangeExpr_return	TokenNameIdentifier	 key Range Expr return
keyRangeExpr	TokenNameIdentifier	 key Range Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyRangeExpr_return	TokenNameIdentifier	 key Range Expr return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyRangeExpr_return	TokenNameIdentifier	 key Range Expr return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal257	TokenNameIdentifier	 char literal257
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal258	TokenNameIdentifier	 char literal258
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal259	TokenNameIdentifier	 char literal259
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
startKey	TokenNameIdentifier	 start Key
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
endKey	TokenNameIdentifier	 end Key
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal257_tree	TokenNameIdentifier	 char literal257 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal258_tree	TokenNameIdentifier	 char literal258 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal259_tree	TokenNameIdentifier	 char literal259 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_125	TokenNameIdentifier	 stream 125
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 125"	TokenNameStringLiteral	token 125
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_128	TokenNameIdentifier	 stream 128
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 128"	TokenNameStringLiteral	token 128
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_123	TokenNameIdentifier	 stream 123
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 123"	TokenNameStringLiteral	token 123
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_entityName	TokenNameIdentifier	 stream entity Name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule entityName"	TokenNameStringLiteral	rule entityName
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:5: ( '[' ( (startKey= entityName )? ':' (endKey= entityName )? )? ']' -> ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:5: ( '[' ( (startKey= entityName )? ':' (endKey= entityName )? )? ']' -> ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:10: '[' ( (startKey= entityName )? ':' (endKey= entityName )? )? ']' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:10: '[' ( (startKey= entityName )? ':' (endKey= entityName )? )? ']' 
{	TokenNameLBRACE	
char_literal257	TokenNameIdentifier	 char literal257
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
123	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_123_in_keyRangeExpr3445	TokenNameIdentifier	 FOLLOW 123 in key Range Expr3445
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_123	TokenNameIdentifier	 stream 123
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal257	TokenNameIdentifier	 char literal257
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:14: ( (startKey= entityName )? ':' (endKey= entityName )? )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:14: ( (startKey= entityName )? ':' (endKey= entityName )? )? 
int	TokenNameint	
alt35	TokenNameIdentifier	 alt35
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA35_0	TokenNameIdentifier	 L A35 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA35_0	TokenNameIdentifier	 L A35 0
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA35_0	TokenNameIdentifier	 L A35 0
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
128	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt35	TokenNameIdentifier	 alt35
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt35	TokenNameIdentifier	 alt35
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:16: (startKey= entityName )? ':' (endKey= entityName )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:16: (startKey= entityName )? ':' (endKey= entityName )? 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:24: (startKey= entityName )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:24: (startKey= entityName )? 
int	TokenNameint	
alt33	TokenNameIdentifier	 alt33
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA33_0	TokenNameIdentifier	 L A33 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA33_0	TokenNameIdentifier	 L A33 0
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA33_0	TokenNameIdentifier	 L A33 0
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA33_0	TokenNameIdentifier	 L A33 0
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt33	TokenNameIdentifier	 alt33
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt33	TokenNameIdentifier	 alt33
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: startKey= entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: startKey= entityName 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_keyRangeExpr3451	TokenNameIdentifier	 FOLLOW entity Name in key Range Expr3451
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
startKey	TokenNameIdentifier	 start Key
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_entityName	TokenNameIdentifier	 stream entity Name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
startKey	TokenNameIdentifier	 start Key
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
char_literal258	TokenNameIdentifier	 char literal258
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
128	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_128_in_keyRangeExpr3454	TokenNameIdentifier	 FOLLOW 128 in key Range Expr3454
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_128	TokenNameIdentifier	 stream 128
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal258	TokenNameIdentifier	 char literal258
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:47: (endKey= entityName )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:437:47: (endKey= entityName )? 
int	TokenNameint	
alt34	TokenNameIdentifier	 alt34
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA34_0	TokenNameIdentifier	 L A34 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA34_0	TokenNameIdentifier	 L A34 0
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA34_0	TokenNameIdentifier	 L A34 0
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA34_0	TokenNameIdentifier	 L A34 0
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt34	TokenNameIdentifier	 alt34
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt34	TokenNameIdentifier	 alt34
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: endKey= entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: endKey= entityName 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_keyRangeExpr3458	TokenNameIdentifier	 FOLLOW entity Name in key Range Expr3458
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
endKey	TokenNameIdentifier	 end Key
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_entityName	TokenNameIdentifier	 stream entity Name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
endKey	TokenNameIdentifier	 end Key
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
char_literal259	TokenNameIdentifier	 char literal259
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_keyRangeExpr3464	TokenNameIdentifier	 FOLLOW 125 in key Range Expr3464
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_125	TokenNameIdentifier	 stream 125
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal259	TokenNameIdentifier	 char literal259
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: endKey, startKey 	TokenNameCOMMENT_LINE	elements: endKey, startKey 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: endKey, retval, startKey 	TokenNameCOMMENT_LINE	rule labels: endKey, retval, startKey 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_endKey	TokenNameIdentifier	 stream end Key
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule endKey"	TokenNameStringLiteral	rule endKey
,	TokenNameCOMMA	
endKey	TokenNameIdentifier	 end Key
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
endKey	TokenNameIdentifier	 end Key
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_startKey	TokenNameIdentifier	 stream start Key
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule startKey"	TokenNameStringLiteral	rule startKey
,	TokenNameCOMMA	
startKey	TokenNameIdentifier	 start Key
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
startKey	TokenNameIdentifier	 start Key
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 438:7: -> ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) 	TokenNameCOMMENT_LINE	438:7: -> ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:438:10: ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:438:10: ^( NODE_KEY_RANGE ( $startKey)? ( $endKey)? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_KEY_RANGE	TokenNameIdentifier	 NODE  KEY  RANGE
,	TokenNameCOMMA	
"NODE_KEY_RANGE"	TokenNameStringLiteral	NODE_KEY_RANGE
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:438:27: ( $startKey)? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:438:27: ( $startKey)? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_startKey	TokenNameIdentifier	 stream start Key
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_startKey	TokenNameIdentifier	 stream start Key
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_startKey	TokenNameIdentifier	 stream start Key
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:438:38: ( $endKey)? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:438:38: ( $endKey)? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_endKey	TokenNameIdentifier	 stream end Key
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_endKey	TokenNameIdentifier	 stream end Key
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_endKey	TokenNameIdentifier	 stream end Key
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "keyRangeExpr" 	TokenNameCOMMENT_LINE	$ANTLR end "keyRangeExpr" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
rowLimitExpr_return	TokenNameIdentifier	 row Limit Expr return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "rowLimitExpr" 	TokenNameCOMMENT_LINE	$ANTLR start "rowLimitExpr" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:441:1: rowLimitExpr : 'LIMIT' limit= IntegerPositiveLiteral -> ^( NODE_LIMIT $limit) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:441:1: rowLimitExpr : 'LIMIT' limit= IntegerPositiveLiteral -> ^( NODE_LIMIT $limit) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowLimitExpr_return	TokenNameIdentifier	 row Limit Expr return
rowLimitExpr	TokenNameIdentifier	 row Limit Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowLimitExpr_return	TokenNameIdentifier	 row Limit Expr return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowLimitExpr_return	TokenNameIdentifier	 row Limit Expr return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal260	TokenNameIdentifier	 string literal260
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
limit_tree	TokenNameIdentifier	 limit tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal260_tree	TokenNameIdentifier	 string literal260 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token IntegerPositiveLiteral"	TokenNameStringLiteral	token IntegerPositiveLiteral
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_LIMIT	TokenNameIdentifier	 stream  LIMIT
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token LIMIT"	TokenNameStringLiteral	token LIMIT
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:442:5: ( 'LIMIT' limit= IntegerPositiveLiteral -> ^( NODE_LIMIT $limit) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:442:5: ( 'LIMIT' limit= IntegerPositiveLiteral -> ^( NODE_LIMIT $limit) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:442:7: 'LIMIT' limit= IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:442:7: 'LIMIT' limit= IntegerPositiveLiteral 
{	TokenNameLBRACE	
string_literal260	TokenNameIdentifier	 string literal260
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
LIMIT	TokenNameIdentifier	 LIMIT
,	TokenNameCOMMA	
FOLLOW_LIMIT_in_rowLimitExpr3501	TokenNameIdentifier	 FOLLOW  LIMIT in row Limit Expr3501
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_LIMIT	TokenNameIdentifier	 stream  LIMIT
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal260	TokenNameIdentifier	 string literal260
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_rowLimitExpr3505	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in row Limit Expr3505
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
limit	TokenNameIdentifier	 limit
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: limit 	TokenNameCOMMENT_LINE	elements: limit 
// token labels: limit 	TokenNameCOMMENT_LINE	token labels: limit 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_limit	TokenNameIdentifier	 stream limit
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token limit"	TokenNameStringLiteral	token limit
,	TokenNameCOMMA	
limit	TokenNameIdentifier	 limit
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 443:9: -> ^( NODE_LIMIT $limit) 	TokenNameCOMMENT_LINE	443:9: -> ^( NODE_LIMIT $limit) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:443:12: ^( NODE_LIMIT $limit) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:443:12: ^( NODE_LIMIT $limit) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_LIMIT	TokenNameIdentifier	 NODE  LIMIT
,	TokenNameCOMMA	
"NODE_LIMIT"	TokenNameStringLiteral	NODE_LIMIT
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_limit	TokenNameIdentifier	 stream limit
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "rowLimitExpr" 	TokenNameCOMMENT_LINE	$ANTLR end "rowLimitExpr" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
columnLimitExpr_return	TokenNameIdentifier	 column Limit Expr return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "columnLimitExpr" 	TokenNameCOMMENT_LINE	$ANTLR start "columnLimitExpr" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:446:1: columnLimitExpr : 'COLUMNS' columns= IntegerPositiveLiteral ( reversedExpr )? -> ^( NODE_COLUMNS $columns ( reversedExpr )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:446:1: columnLimitExpr : 'COLUMNS' columns= IntegerPositiveLiteral ( reversedExpr )? -> ^( NODE_COLUMNS $columns ( reversedExpr )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnLimitExpr_return	TokenNameIdentifier	 column Limit Expr return
columnLimitExpr	TokenNameIdentifier	 column Limit Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnLimitExpr_return	TokenNameIdentifier	 column Limit Expr return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnLimitExpr_return	TokenNameIdentifier	 column Limit Expr return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
columns	TokenNameIdentifier	 columns
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal261	TokenNameIdentifier	 string literal261
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
reversedExpr_return	TokenNameIdentifier	 reversed Expr return
reversedExpr262	TokenNameIdentifier	 reversed Expr262
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
columns_tree	TokenNameIdentifier	 columns tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal261_tree	TokenNameIdentifier	 string literal261 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token IntegerPositiveLiteral"	TokenNameStringLiteral	token IntegerPositiveLiteral
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_129	TokenNameIdentifier	 stream 129
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 129"	TokenNameStringLiteral	token 129
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_reversedExpr	TokenNameIdentifier	 stream reversed Expr
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule reversedExpr"	TokenNameStringLiteral	rule reversedExpr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:447:5: ( 'COLUMNS' columns= IntegerPositiveLiteral ( reversedExpr )? -> ^( NODE_COLUMNS $columns ( reversedExpr )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:447:5: ( 'COLUMNS' columns= IntegerPositiveLiteral ( reversedExpr )? -> ^( NODE_COLUMNS $columns ( reversedExpr )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:447:7: 'COLUMNS' columns= IntegerPositiveLiteral ( reversedExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:447:7: 'COLUMNS' columns= IntegerPositiveLiteral ( reversedExpr )? 
{	TokenNameLBRACE	
string_literal261	TokenNameIdentifier	 string literal261
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
129	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_129_in_columnLimitExpr3539	TokenNameIdentifier	 FOLLOW 129 in column Limit Expr3539
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_129	TokenNameIdentifier	 stream 129
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal261	TokenNameIdentifier	 string literal261
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columns	TokenNameIdentifier	 columns
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_columnLimitExpr3543	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in column Limit Expr3543
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_IntegerPositiveLiteral	TokenNameIdentifier	 stream  Integer Positive Literal
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
columns	TokenNameIdentifier	 columns
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:447:48: ( reversedExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:447:48: ( reversedExpr )? 
int	TokenNameint	
alt36	TokenNameIdentifier	 alt36
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA36_0	TokenNameIdentifier	 L A36 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA36_0	TokenNameIdentifier	 L A36 0
==	TokenNameEQUAL_EQUAL	
130	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt36	TokenNameIdentifier	 alt36
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt36	TokenNameIdentifier	 alt36
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: reversedExpr 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: reversedExpr 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_reversedExpr_in_columnLimitExpr3545	TokenNameIdentifier	 FOLLOW reversed Expr in column Limit Expr3545
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
reversedExpr262	TokenNameIdentifier	 reversed Expr262
=	TokenNameEQUAL	
reversedExpr	TokenNameIdentifier	 reversed Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_reversedExpr	TokenNameIdentifier	 stream reversed Expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
reversedExpr262	TokenNameIdentifier	 reversed Expr262
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: columns, reversedExpr 	TokenNameCOMMENT_LINE	elements: columns, reversedExpr 
// token labels: columns 	TokenNameCOMMENT_LINE	token labels: columns 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_columns	TokenNameIdentifier	 stream columns
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token columns"	TokenNameStringLiteral	token columns
,	TokenNameCOMMA	
columns	TokenNameIdentifier	 columns
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 448:9: -> ^( NODE_COLUMNS $columns ( reversedExpr )? ) 	TokenNameCOMMENT_LINE	448:9: -> ^( NODE_COLUMNS $columns ( reversedExpr )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:448:12: ^( NODE_COLUMNS $columns ( reversedExpr )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:448:12: ^( NODE_COLUMNS $columns ( reversedExpr )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_COLUMNS	TokenNameIdentifier	 NODE  COLUMNS
,	TokenNameCOMMA	
"NODE_COLUMNS"	TokenNameStringLiteral	NODE_COLUMNS
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_columns	TokenNameIdentifier	 stream columns
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:448:36: ( reversedExpr )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:448:36: ( reversedExpr )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_reversedExpr	TokenNameIdentifier	 stream reversed Expr
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_reversedExpr	TokenNameIdentifier	 stream reversed Expr
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_reversedExpr	TokenNameIdentifier	 stream reversed Expr
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "columnLimitExpr" 	TokenNameCOMMENT_LINE	$ANTLR end "columnLimitExpr" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
reversedExpr_return	TokenNameIdentifier	 reversed Expr return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "reversedExpr" 	TokenNameCOMMENT_LINE	$ANTLR start "reversedExpr" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:451:1: reversedExpr : 'REVERSED' -> ^( NODE_REVERSED ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:451:1: reversedExpr : 'REVERSED' -> ^( NODE_REVERSED ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
reversedExpr_return	TokenNameIdentifier	 reversed Expr return
reversedExpr	TokenNameIdentifier	 reversed Expr
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
reversedExpr_return	TokenNameIdentifier	 reversed Expr return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
reversedExpr_return	TokenNameIdentifier	 reversed Expr return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
string_literal263	TokenNameIdentifier	 string literal263
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
string_literal263_tree	TokenNameIdentifier	 string literal263 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_130	TokenNameIdentifier	 stream 130
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 130"	TokenNameStringLiteral	token 130
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:452:5: ( 'REVERSED' -> ^( NODE_REVERSED ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:452:5: ( 'REVERSED' -> ^( NODE_REVERSED ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:452:7: 'REVERSED' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:452:7: 'REVERSED' 
{	TokenNameLBRACE	
string_literal263	TokenNameIdentifier	 string literal263
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
130	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_130_in_reversedExpr3583	TokenNameIdentifier	 FOLLOW 130 in reversed Expr3583
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_130	TokenNameIdentifier	 stream 130
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
string_literal263	TokenNameIdentifier	 string literal263
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: 	TokenNameCOMMENT_LINE	elements: 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 453:9: -> ^( NODE_REVERSED ) 	TokenNameCOMMENT_LINE	453:9: -> ^( NODE_REVERSED ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:453:12: ^( NODE_REVERSED ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:453:12: ^( NODE_REVERSED ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_REVERSED	TokenNameIdentifier	 NODE  REVERSED
,	TokenNameCOMMA	
"NODE_REVERSED"	TokenNameStringLiteral	NODE_REVERSED
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "reversedExpr" 	TokenNameCOMMENT_LINE	$ANTLR end "reversedExpr" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
columnName_return	TokenNameIdentifier	 column Name return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "columnName" 	TokenNameCOMMENT_LINE	$ANTLR start "columnName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:456:1: columnName : entityName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:456:1: columnName : entityName ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnName_return	TokenNameIdentifier	 column Name return
columnName	TokenNameIdentifier	 column Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnName_return	TokenNameIdentifier	 column Name return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnName_return	TokenNameIdentifier	 column Name return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName264	TokenNameIdentifier	 entity Name264
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:457:2: ( entityName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:457:2: ( entityName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:457:4: entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:457:4: entityName 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_columnName3611	TokenNameIdentifier	 FOLLOW entity Name in column Name3611
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName264	TokenNameIdentifier	 entity Name264
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
entityName264	TokenNameIdentifier	 entity Name264
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "columnName" 	TokenNameCOMMENT_LINE	$ANTLR end "columnName" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
attr_name_return	TokenNameIdentifier	 attr name return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "attr_name" 	TokenNameCOMMENT_LINE	$ANTLR start "attr_name" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:460:1: attr_name : Identifier ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:460:1: attr_name : Identifier ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attr_name_return	TokenNameIdentifier	 attr name return
attr_name	TokenNameIdentifier	 attr name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attr_name_return	TokenNameIdentifier	 attr name return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attr_name_return	TokenNameIdentifier	 attr name return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier265	TokenNameIdentifier	 Identifier265
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier265_tree	TokenNameIdentifier	 Identifier265 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:461:5: ( Identifier ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:461:5: ( Identifier ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:461:7: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:461:7: Identifier 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Identifier265	TokenNameIdentifier	 Identifier265
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_attr_name3625	TokenNameIdentifier	 FOLLOW  Identifier in attr name3625
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier265_tree	TokenNameIdentifier	 Identifier265 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier265	TokenNameIdentifier	 Identifier265
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier265_tree	TokenNameIdentifier	 Identifier265 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "attr_name" 	TokenNameCOMMENT_LINE	$ANTLR end "attr_name" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
attrValueString_return	TokenNameIdentifier	 attr Value String return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "attrValueString" 	TokenNameCOMMENT_LINE	$ANTLR start "attrValueString" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:464:1: attrValueString : ( Identifier | StringLiteral ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:464:1: attrValueString : ( Identifier | StringLiteral ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueString_return	TokenNameIdentifier	 attr Value String return
attrValueString	TokenNameIdentifier	 attr Value String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueString_return	TokenNameIdentifier	 attr Value String return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueString_return	TokenNameIdentifier	 attr Value String return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set266	TokenNameIdentifier	 set266
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set266_tree	TokenNameIdentifier	 set266 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:465:5: ( ( Identifier | StringLiteral ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:465:5: ( ( Identifier | StringLiteral ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:465:7: ( Identifier | StringLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:465:7: ( Identifier | StringLiteral ) 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set266	TokenNameIdentifier	 set266
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
Identifier	TokenNameIdentifier	 Identifier
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set266	TokenNameIdentifier	 set266
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "attrValueString" 	TokenNameCOMMENT_LINE	$ANTLR end "attrValueString" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
attrValueInt_return	TokenNameIdentifier	 attr Value Int return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "attrValueInt" 	TokenNameCOMMENT_LINE	$ANTLR start "attrValueInt" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:468:1: attrValueInt : ( IntegerPositiveLiteral | IntegerNegativeLiteral ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:468:1: attrValueInt : ( IntegerPositiveLiteral | IntegerNegativeLiteral ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueInt_return	TokenNameIdentifier	 attr Value Int return
attrValueInt	TokenNameIdentifier	 attr Value Int
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueInt_return	TokenNameIdentifier	 attr Value Int return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueInt_return	TokenNameIdentifier	 attr Value Int return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set267	TokenNameIdentifier	 set267
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set267_tree	TokenNameIdentifier	 set267 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:469:5: ( IntegerPositiveLiteral | IntegerNegativeLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:469:5: ( IntegerPositiveLiteral | IntegerNegativeLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set267	TokenNameIdentifier	 set267
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set267	TokenNameIdentifier	 set267
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "attrValueInt" 	TokenNameCOMMENT_LINE	$ANTLR end "attrValueInt" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
attrValueDouble_return	TokenNameIdentifier	 attr Value Double return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "attrValueDouble" 	TokenNameCOMMENT_LINE	$ANTLR start "attrValueDouble" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:473:1: attrValueDouble : DoubleLiteral ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:473:1: attrValueDouble : DoubleLiteral ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueDouble_return	TokenNameIdentifier	 attr Value Double return
attrValueDouble	TokenNameIdentifier	 attr Value Double
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueDouble_return	TokenNameIdentifier	 attr Value Double return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
attrValueDouble_return	TokenNameIdentifier	 attr Value Double return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DoubleLiteral268	TokenNameIdentifier	 Double Literal268
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DoubleLiteral268_tree	TokenNameIdentifier	 Double Literal268 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:474:5: ( DoubleLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:474:5: ( DoubleLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:474:7: DoubleLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:474:7: DoubleLiteral 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DoubleLiteral268	TokenNameIdentifier	 Double Literal268
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DoubleLiteral	TokenNameIdentifier	 Double Literal
,	TokenNameCOMMA	
FOLLOW_DoubleLiteral_in_attrValueDouble3694	TokenNameIdentifier	 FOLLOW  Double Literal in attr Value Double3694
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DoubleLiteral268_tree	TokenNameIdentifier	 Double Literal268 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
DoubleLiteral268	TokenNameIdentifier	 Double Literal268
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
DoubleLiteral268_tree	TokenNameIdentifier	 Double Literal268 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "attrValueDouble" 	TokenNameCOMMENT_LINE	$ANTLR end "attrValueDouble" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
keyspace_return	TokenNameIdentifier	 keyspace return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "keyspace" 	TokenNameCOMMENT_LINE	$ANTLR start "keyspace" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:477:1: keyspace : entityName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:477:1: keyspace : entityName ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
keyspace	TokenNameIdentifier	 keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspace_return	TokenNameIdentifier	 keyspace return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName269	TokenNameIdentifier	 entity Name269
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:478:2: ( entityName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:478:2: ( entityName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:478:4: entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:478:4: entityName 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_keyspace3710	TokenNameIdentifier	 FOLLOW entity Name in keyspace3710
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName269	TokenNameIdentifier	 entity Name269
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
entityName269	TokenNameIdentifier	 entity Name269
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "keyspace" 	TokenNameCOMMENT_LINE	$ANTLR end "keyspace" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
replica_placement_strategy_return	TokenNameIdentifier	 replica placement strategy return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "replica_placement_strategy" 	TokenNameCOMMENT_LINE	$ANTLR start "replica_placement_strategy" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:481:1: replica_placement_strategy : StringLiteral ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:481:1: replica_placement_strategy : StringLiteral ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
replica_placement_strategy_return	TokenNameIdentifier	 replica placement strategy return
replica_placement_strategy	TokenNameIdentifier	 replica placement strategy
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
replica_placement_strategy_return	TokenNameIdentifier	 replica placement strategy return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
replica_placement_strategy_return	TokenNameIdentifier	 replica placement strategy return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral270	TokenNameIdentifier	 String Literal270
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral270_tree	TokenNameIdentifier	 String Literal270 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:482:5: ( StringLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:482:5: ( StringLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:482:7: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:482:7: StringLiteral 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
StringLiteral270	TokenNameIdentifier	 String Literal270
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_replica_placement_strategy3724	TokenNameIdentifier	 FOLLOW  String Literal in replica placement strategy3724
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral270_tree	TokenNameIdentifier	 String Literal270 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral270	TokenNameIdentifier	 String Literal270
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral270_tree	TokenNameIdentifier	 String Literal270 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "replica_placement_strategy" 	TokenNameCOMMENT_LINE	$ANTLR end "replica_placement_strategy" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
keyspaceNewName_return	TokenNameIdentifier	 keyspace New Name return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "keyspaceNewName" 	TokenNameCOMMENT_LINE	$ANTLR start "keyspaceNewName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:485:1: keyspaceNewName : entityName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:485:1: keyspaceNewName : entityName ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspaceNewName_return	TokenNameIdentifier	 keyspace New Name return
keyspaceNewName	TokenNameIdentifier	 keyspace New Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspaceNewName_return	TokenNameIdentifier	 keyspace New Name return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
keyspaceNewName_return	TokenNameIdentifier	 keyspace New Name return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName271	TokenNameIdentifier	 entity Name271
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:486:2: ( entityName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:486:2: ( entityName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:486:4: entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:486:4: entityName 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_keyspaceNewName3738	TokenNameIdentifier	 FOLLOW entity Name in keyspace New Name3738
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName271	TokenNameIdentifier	 entity Name271
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
entityName271	TokenNameIdentifier	 entity Name271
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "keyspaceNewName" 	TokenNameCOMMENT_LINE	$ANTLR end "keyspaceNewName" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
comparator_return	TokenNameIdentifier	 comparator return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "comparator" 	TokenNameCOMMENT_LINE	$ANTLR start "comparator" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:489:1: comparator : StringLiteral ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:489:1: comparator : StringLiteral ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
comparator_return	TokenNameIdentifier	 comparator return
comparator	TokenNameIdentifier	 comparator
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
comparator_return	TokenNameIdentifier	 comparator return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
comparator_return	TokenNameIdentifier	 comparator return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral272	TokenNameIdentifier	 String Literal272
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral272_tree	TokenNameIdentifier	 String Literal272 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:490:5: ( StringLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:490:5: ( StringLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:490:7: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:490:7: StringLiteral 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
StringLiteral272	TokenNameIdentifier	 String Literal272
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_comparator3752	TokenNameIdentifier	 FOLLOW  String Literal in comparator3752
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral272_tree	TokenNameIdentifier	 String Literal272 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral272	TokenNameIdentifier	 String Literal272
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral272_tree	TokenNameIdentifier	 String Literal272 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "comparator" 	TokenNameCOMMENT_LINE	$ANTLR end "comparator" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
command_return	TokenNameIdentifier	 command return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "command" 	TokenNameCOMMENT_LINE	$ANTLR start "command" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:493:1: command : Identifier ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:493:1: command : Identifier ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
command_return	TokenNameIdentifier	 command return
command	TokenNameIdentifier	 command
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
command_return	TokenNameIdentifier	 command return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
command_return	TokenNameIdentifier	 command return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier273	TokenNameIdentifier	 Identifier273
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier273_tree	TokenNameIdentifier	 Identifier273 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:493:9: ( Identifier ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:493:9: ( Identifier ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:493:11: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:493:11: Identifier 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Identifier273	TokenNameIdentifier	 Identifier273
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_command3771	TokenNameIdentifier	 FOLLOW  Identifier in command3771
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier273_tree	TokenNameIdentifier	 Identifier273 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier273	TokenNameIdentifier	 Identifier273
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier273_tree	TokenNameIdentifier	 Identifier273 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "command" 	TokenNameCOMMENT_LINE	$ANTLR end "command" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
newColumnFamily_return	TokenNameIdentifier	 new Column Family return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "newColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR start "newColumnFamily" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:496:1: newColumnFamily : entityName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:496:1: newColumnFamily : entityName ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
newColumnFamily_return	TokenNameIdentifier	 new Column Family return
newColumnFamily	TokenNameIdentifier	 new Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
newColumnFamily_return	TokenNameIdentifier	 new Column Family return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
newColumnFamily_return	TokenNameIdentifier	 new Column Family return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName274	TokenNameIdentifier	 entity Name274
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:497:2: ( entityName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:497:2: ( entityName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:497:4: entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:497:4: entityName 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_newColumnFamily3785	TokenNameIdentifier	 FOLLOW entity Name in new Column Family3785
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName274	TokenNameIdentifier	 entity Name274
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
entityName274	TokenNameIdentifier	 entity Name274
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "newColumnFamily" 	TokenNameCOMMENT_LINE	$ANTLR end "newColumnFamily" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
username_return	TokenNameIdentifier	 username return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "username" 	TokenNameCOMMENT_LINE	$ANTLR start "username" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:500:1: username : Identifier ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:500:1: username : Identifier ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier275	TokenNameIdentifier	 Identifier275
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier275_tree	TokenNameIdentifier	 Identifier275 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:500:9: ( Identifier ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:500:9: ( Identifier ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:500:11: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:500:11: Identifier 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Identifier275	TokenNameIdentifier	 Identifier275
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_username3794	TokenNameIdentifier	 FOLLOW  Identifier in username3794
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier275_tree	TokenNameIdentifier	 Identifier275 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier275	TokenNameIdentifier	 Identifier275
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier275_tree	TokenNameIdentifier	 Identifier275 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "username" 	TokenNameCOMMENT_LINE	$ANTLR end "username" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
password_return	TokenNameIdentifier	 password return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "password" 	TokenNameCOMMENT_LINE	$ANTLR start "password" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:503:1: password : StringLiteral ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:503:1: password : StringLiteral ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
password_return	TokenNameIdentifier	 password return
password	TokenNameIdentifier	 password
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
password_return	TokenNameIdentifier	 password return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
password_return	TokenNameIdentifier	 password return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral276	TokenNameIdentifier	 String Literal276
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral276_tree	TokenNameIdentifier	 String Literal276 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:503:9: ( StringLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:503:9: ( StringLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:503:11: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:503:11: StringLiteral 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
StringLiteral276	TokenNameIdentifier	 String Literal276
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_password3806	TokenNameIdentifier	 FOLLOW  String Literal in password3806
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral276_tree	TokenNameIdentifier	 String Literal276 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral276	TokenNameIdentifier	 String Literal276
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral276_tree	TokenNameIdentifier	 String Literal276 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "password" 	TokenNameCOMMENT_LINE	$ANTLR end "password" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
columnFamily_return	TokenNameIdentifier	 column Family return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "columnFamily" 	TokenNameCOMMENT_LINE	$ANTLR start "columnFamily" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:506:1: columnFamily : entityName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:506:1: columnFamily : entityName ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnFamily_return	TokenNameIdentifier	 column Family return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName277	TokenNameIdentifier	 entity Name277
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:507:3: ( entityName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:507:3: ( entityName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:507:5: entityName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:507:5: entityName 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_entityName_in_columnFamily3821	TokenNameIdentifier	 FOLLOW entity Name in column Family3821
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
entityName277	TokenNameIdentifier	 entity Name277
=	TokenNameEQUAL	
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
entityName277	TokenNameIdentifier	 entity Name277
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "columnFamily" 	TokenNameCOMMENT_LINE	$ANTLR end "columnFamily" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
entityName_return	TokenNameIdentifier	 entity Name return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "entityName" 	TokenNameCOMMENT_LINE	$ANTLR start "entityName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:510:1: entityName : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:510:1: entityName : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
entityName	TokenNameIdentifier	 entity Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
entityName_return	TokenNameIdentifier	 entity Name return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set278	TokenNameIdentifier	 set278
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set278_tree	TokenNameIdentifier	 set278 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:511:3: ( ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:511:3: ( ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:511:5: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:511:5: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set278	TokenNameIdentifier	 set278
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set278	TokenNameIdentifier	 set278
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "entityName" 	TokenNameCOMMENT_LINE	$ANTLR end "entityName" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
rowKey_return	TokenNameIdentifier	 row Key return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "rowKey" 	TokenNameCOMMENT_LINE	$ANTLR start "rowKey" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:514:1: rowKey : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:514:1: rowKey : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowKey_return	TokenNameIdentifier	 row Key return
rowKey	TokenNameIdentifier	 row Key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowKey_return	TokenNameIdentifier	 row Key return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowKey_return	TokenNameIdentifier	 row Key return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier279	TokenNameIdentifier	 Identifier279
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral280	TokenNameIdentifier	 String Literal280
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerPositiveLiteral281	TokenNameIdentifier	 Integer Positive Literal281
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerNegativeLiteral282	TokenNameIdentifier	 Integer Negative Literal282
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
functionCall283	TokenNameIdentifier	 function Call283
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier279_tree	TokenNameIdentifier	 Identifier279 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral280_tree	TokenNameIdentifier	 String Literal280 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerPositiveLiteral281_tree	TokenNameIdentifier	 Integer Positive Literal281 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerNegativeLiteral282_tree	TokenNameIdentifier	 Integer Negative Literal282 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:5: ( ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:5: ( ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall ) 
int	TokenNameint	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
Identifier	TokenNameIdentifier	 Identifier
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA37_1	TokenNameIdentifier	 L A37 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA37_1	TokenNameIdentifier	 L A37 1
==	TokenNameEQUAL_EQUAL	
131	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA37_1	TokenNameIdentifier	 L A37 1
==	TokenNameEQUAL_EQUAL	
125	TokenNameIntegerLiteral	
||	TokenNameOR_OR	
LA37_1	TokenNameIdentifier	 L A37 1
==	TokenNameEQUAL_EQUAL	
128	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
37	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
StringLiteral	TokenNameIdentifier	 String Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
37	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt37	TokenNameIdentifier	 alt37
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:9: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:9: Identifier 
{	TokenNameLBRACE	
Identifier279	TokenNameIdentifier	 Identifier279
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_rowKey3866	TokenNameIdentifier	 FOLLOW  Identifier in row Key3866
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier279_tree	TokenNameIdentifier	 Identifier279 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier279	TokenNameIdentifier	 Identifier279
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier279_tree	TokenNameIdentifier	 Identifier279 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:22: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:22: StringLiteral 
{	TokenNameLBRACE	
StringLiteral280	TokenNameIdentifier	 String Literal280
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_rowKey3870	TokenNameIdentifier	 FOLLOW  String Literal in row Key3870
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral280_tree	TokenNameIdentifier	 String Literal280 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral280	TokenNameIdentifier	 String Literal280
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral280_tree	TokenNameIdentifier	 String Literal280 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:38: IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:38: IntegerPositiveLiteral 
{	TokenNameLBRACE	
IntegerPositiveLiteral281	TokenNameIdentifier	 Integer Positive Literal281
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_rowKey3874	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in row Key3874
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerPositiveLiteral281_tree	TokenNameIdentifier	 Integer Positive Literal281 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerPositiveLiteral281	TokenNameIdentifier	 Integer Positive Literal281
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerPositiveLiteral281_tree	TokenNameIdentifier	 Integer Positive Literal281 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:63: IntegerNegativeLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:63: IntegerNegativeLiteral 
{	TokenNameLBRACE	
IntegerNegativeLiteral282	TokenNameIdentifier	 Integer Negative Literal282
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
,	TokenNameCOMMA	
FOLLOW_IntegerNegativeLiteral_in_rowKey3878	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in row Key3878
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerNegativeLiteral282_tree	TokenNameIdentifier	 Integer Negative Literal282 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerNegativeLiteral282	TokenNameIdentifier	 Integer Negative Literal282
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerNegativeLiteral282_tree	TokenNameIdentifier	 Integer Negative Literal282 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:88: functionCall 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:515:88: functionCall 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_functionCall_in_rowKey3882	TokenNameIdentifier	 FOLLOW function Call in row Key3882
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
functionCall283	TokenNameIdentifier	 function Call283
=	TokenNameEQUAL	
functionCall	TokenNameIdentifier	 function Call
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
functionCall283	TokenNameIdentifier	 function Call283
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "rowKey" 	TokenNameCOMMENT_LINE	$ANTLR end "rowKey" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
rowValue_return	TokenNameIdentifier	 row Value return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "rowValue" 	TokenNameCOMMENT_LINE	$ANTLR start "rowValue" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:518:1: rowValue : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:518:1: rowValue : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowValue_return	TokenNameIdentifier	 row Value return
rowValue	TokenNameIdentifier	 row Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowValue_return	TokenNameIdentifier	 row Value return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
rowValue_return	TokenNameIdentifier	 row Value return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier284	TokenNameIdentifier	 Identifier284
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral285	TokenNameIdentifier	 String Literal285
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerPositiveLiteral286	TokenNameIdentifier	 Integer Positive Literal286
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerNegativeLiteral287	TokenNameIdentifier	 Integer Negative Literal287
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
functionCall288	TokenNameIdentifier	 function Call288
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
hashConstruct_return	TokenNameIdentifier	 hash Construct return
hashConstruct289	TokenNameIdentifier	 hash Construct289
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier284_tree	TokenNameIdentifier	 Identifier284 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral285_tree	TokenNameIdentifier	 String Literal285 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerPositiveLiteral286_tree	TokenNameIdentifier	 Integer Positive Literal286 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerNegativeLiteral287_tree	TokenNameIdentifier	 Integer Negative Literal287 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:5: ( ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:5: ( ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:8: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral | functionCall | hashConstruct ) 
int	TokenNameint	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
Identifier	TokenNameIdentifier	 Identifier
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA38_1	TokenNameIdentifier	 L A38 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA38_1	TokenNameIdentifier	 L A38 1
==	TokenNameEQUAL_EQUAL	
131	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA38_1	TokenNameIdentifier	 L A38 1
==	TokenNameEQUAL_EQUAL	
EOF	TokenNameIdentifier	 EOF
||	TokenNameOR_OR	
LA38_1	TokenNameIdentifier	 L A38 1
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
||	TokenNameOR_OR	
LA38_1	TokenNameIdentifier	 L A38 1
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
38	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
StringLiteral	TokenNameIdentifier	 String Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
126	TokenNameIntegerLiteral	
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
38	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt38	TokenNameIdentifier	 alt38
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:9: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:9: Identifier 
{	TokenNameLBRACE	
Identifier284	TokenNameIdentifier	 Identifier284
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_rowValue3904	TokenNameIdentifier	 FOLLOW  Identifier in row Value3904
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier284_tree	TokenNameIdentifier	 Identifier284 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier284	TokenNameIdentifier	 Identifier284
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier284_tree	TokenNameIdentifier	 Identifier284 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:22: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:22: StringLiteral 
{	TokenNameLBRACE	
StringLiteral285	TokenNameIdentifier	 String Literal285
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_rowValue3908	TokenNameIdentifier	 FOLLOW  String Literal in row Value3908
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral285_tree	TokenNameIdentifier	 String Literal285 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral285	TokenNameIdentifier	 String Literal285
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral285_tree	TokenNameIdentifier	 String Literal285 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:38: IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:38: IntegerPositiveLiteral 
{	TokenNameLBRACE	
IntegerPositiveLiteral286	TokenNameIdentifier	 Integer Positive Literal286
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_rowValue3912	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in row Value3912
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerPositiveLiteral286_tree	TokenNameIdentifier	 Integer Positive Literal286 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerPositiveLiteral286	TokenNameIdentifier	 Integer Positive Literal286
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerPositiveLiteral286_tree	TokenNameIdentifier	 Integer Positive Literal286 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:63: IntegerNegativeLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:63: IntegerNegativeLiteral 
{	TokenNameLBRACE	
IntegerNegativeLiteral287	TokenNameIdentifier	 Integer Negative Literal287
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
,	TokenNameCOMMA	
FOLLOW_IntegerNegativeLiteral_in_rowValue3916	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in row Value3916
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerNegativeLiteral287_tree	TokenNameIdentifier	 Integer Negative Literal287 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerNegativeLiteral287	TokenNameIdentifier	 Integer Negative Literal287
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerNegativeLiteral287_tree	TokenNameIdentifier	 Integer Negative Literal287 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:88: functionCall 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:88: functionCall 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_functionCall_in_rowValue3920	TokenNameIdentifier	 FOLLOW function Call in row Value3920
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
functionCall288	TokenNameIdentifier	 function Call288
=	TokenNameEQUAL	
functionCall	TokenNameIdentifier	 function Call
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
functionCall288	TokenNameIdentifier	 function Call288
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
6	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:103: hashConstruct 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:519:103: hashConstruct 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_hashConstruct_in_rowValue3924	TokenNameIdentifier	 FOLLOW hash Construct in row Value3924
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
hashConstruct289	TokenNameIdentifier	 hash Construct289
=	TokenNameEQUAL	
hashConstruct	TokenNameIdentifier	 hash Construct
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
hashConstruct289	TokenNameIdentifier	 hash Construct289
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "rowValue" 	TokenNameCOMMENT_LINE	$ANTLR end "rowValue" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
value_return	TokenNameIdentifier	 value return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "value" 	TokenNameCOMMENT_LINE	$ANTLR start "value" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:522:1: value : ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:522:1: value : ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
value_return	TokenNameIdentifier	 value return
value	TokenNameIdentifier	 value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
value_return	TokenNameIdentifier	 value return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
value_return	TokenNameIdentifier	 value return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier290	TokenNameIdentifier	 Identifier290
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerPositiveLiteral291	TokenNameIdentifier	 Integer Positive Literal291
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerNegativeLiteral292	TokenNameIdentifier	 Integer Negative Literal292
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral293	TokenNameIdentifier	 String Literal293
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
functionCall294	TokenNameIdentifier	 function Call294
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier290_tree	TokenNameIdentifier	 Identifier290 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerPositiveLiteral291_tree	TokenNameIdentifier	 Integer Positive Literal291 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerNegativeLiteral292_tree	TokenNameIdentifier	 Integer Negative Literal292 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral293_tree	TokenNameIdentifier	 String Literal293 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:5: ( ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:5: ( ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 
int	TokenNameint	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
Identifier	TokenNameIdentifier	 Identifier
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA39_1	TokenNameIdentifier	 L A39 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA39_1	TokenNameIdentifier	 L A39 1
==	TokenNameEQUAL_EQUAL	
131	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA39_1	TokenNameIdentifier	 L A39 1
==	TokenNameEQUAL_EQUAL	
EOF	TokenNameIdentifier	 EOF
||	TokenNameOR_OR	
LA39_1	TokenNameIdentifier	 L A39 1
==	TokenNameEQUAL_EQUAL	
SEMICOLON	TokenNameIdentifier	 SEMICOLON
||	TokenNameOR_OR	
LA39_1	TokenNameIdentifier	 L A39 1
==	TokenNameEQUAL_EQUAL	
WITH	TokenNameIdentifier	 WITH
||	TokenNameOR_OR	
LA39_1	TokenNameIdentifier	 L A39 1
==	TokenNameEQUAL_EQUAL	
AND	TokenNameIdentifier	 AND
||	TokenNameOR_OR	
LA39_1	TokenNameIdentifier	 L A39 1
==	TokenNameEQUAL_EQUAL	
LIMIT	TokenNameIdentifier	 LIMIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
39	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
StringLiteral	TokenNameIdentifier	 String Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
39	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt39	TokenNameIdentifier	 alt39
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:8: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:8: Identifier 
{	TokenNameLBRACE	
Identifier290	TokenNameIdentifier	 Identifier290
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_value3946	TokenNameIdentifier	 FOLLOW  Identifier in value3946
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier290_tree	TokenNameIdentifier	 Identifier290 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier290	TokenNameIdentifier	 Identifier290
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier290_tree	TokenNameIdentifier	 Identifier290 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:21: IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:21: IntegerPositiveLiteral 
{	TokenNameLBRACE	
IntegerPositiveLiteral291	TokenNameIdentifier	 Integer Positive Literal291
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_value3950	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in value3950
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerPositiveLiteral291_tree	TokenNameIdentifier	 Integer Positive Literal291 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerPositiveLiteral291	TokenNameIdentifier	 Integer Positive Literal291
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerPositiveLiteral291_tree	TokenNameIdentifier	 Integer Positive Literal291 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:46: IntegerNegativeLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:46: IntegerNegativeLiteral 
{	TokenNameLBRACE	
IntegerNegativeLiteral292	TokenNameIdentifier	 Integer Negative Literal292
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
,	TokenNameCOMMA	
FOLLOW_IntegerNegativeLiteral_in_value3954	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in value3954
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerNegativeLiteral292_tree	TokenNameIdentifier	 Integer Negative Literal292 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerNegativeLiteral292	TokenNameIdentifier	 Integer Negative Literal292
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerNegativeLiteral292_tree	TokenNameIdentifier	 Integer Negative Literal292 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:71: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:71: StringLiteral 
{	TokenNameLBRACE	
StringLiteral293	TokenNameIdentifier	 String Literal293
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_value3958	TokenNameIdentifier	 FOLLOW  String Literal in value3958
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral293_tree	TokenNameIdentifier	 String Literal293 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral293	TokenNameIdentifier	 String Literal293
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral293_tree	TokenNameIdentifier	 String Literal293 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:87: functionCall 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:523:87: functionCall 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_functionCall_in_value3962	TokenNameIdentifier	 FOLLOW function Call in value3962
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
functionCall294	TokenNameIdentifier	 function Call294
=	TokenNameEQUAL	
functionCall	TokenNameIdentifier	 function Call
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
functionCall294	TokenNameIdentifier	 function Call294
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "value" 	TokenNameCOMMENT_LINE	$ANTLR end "value" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
functionCall_return	TokenNameIdentifier	 function Call return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "functionCall" 	TokenNameCOMMENT_LINE	$ANTLR start "functionCall" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:526:1: functionCall : functionName= Identifier '(' ( functionArgument )? ')' -> ^( FUNCTION_CALL $functionName ( functionArgument )? ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:526:1: functionCall : functionName= Identifier '(' ( functionArgument )? ')' -> ^( FUNCTION_CALL $functionName ( functionArgument )? ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
functionCall	TokenNameIdentifier	 function Call
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
functionName	TokenNameIdentifier	 function Name
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal295	TokenNameIdentifier	 char literal295
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal297	TokenNameIdentifier	 char literal297
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionArgument_return	TokenNameIdentifier	 function Argument return
functionArgument296	TokenNameIdentifier	 function Argument296
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
functionName_tree	TokenNameIdentifier	 function Name tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal295_tree	TokenNameIdentifier	 char literal295 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal297_tree	TokenNameIdentifier	 char literal297 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_132	TokenNameIdentifier	 stream 132
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 132"	TokenNameStringLiteral	token 132
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_Identifier	TokenNameIdentifier	 stream  Identifier
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token Identifier"	TokenNameStringLiteral	token Identifier
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_131	TokenNameIdentifier	 stream 131
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token 131"	TokenNameStringLiteral	token 131
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_functionArgument	TokenNameIdentifier	 stream function Argument
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule functionArgument"	TokenNameStringLiteral	rule functionArgument
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:527:5: (functionName= Identifier '(' ( functionArgument )? ')' -> ^( FUNCTION_CALL $functionName ( functionArgument )? ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:527:5: (functionName= Identifier '(' ( functionArgument )? ')' -> ^( FUNCTION_CALL $functionName ( functionArgument )? ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:527:7: functionName= Identifier '(' ( functionArgument )? ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:527:7: functionName= Identifier '(' ( functionArgument )? ')' 
{	TokenNameLBRACE	
functionName	TokenNameIdentifier	 function Name
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_functionCall3983	TokenNameIdentifier	 FOLLOW  Identifier in function Call3983
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_Identifier	TokenNameIdentifier	 stream  Identifier
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
functionName	TokenNameIdentifier	 function Name
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
char_literal295	TokenNameIdentifier	 char literal295
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
131	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_131_in_functionCall3985	TokenNameIdentifier	 FOLLOW 131 in function Call3985
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_131	TokenNameIdentifier	 stream 131
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal295	TokenNameIdentifier	 char literal295
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:527:35: ( functionArgument )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:527:35: ( functionArgument )? 
int	TokenNameint	
alt40	TokenNameIdentifier	 alt40
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA40_0	TokenNameIdentifier	 L A40 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA40_0	TokenNameIdentifier	 L A40 0
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
LA40_0	TokenNameIdentifier	 L A40 0
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA40_0	TokenNameIdentifier	 L A40 0
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt40	TokenNameIdentifier	 alt40
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt40	TokenNameIdentifier	 alt40
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: functionArgument 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:0:0: functionArgument 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_functionArgument_in_functionCall3987	TokenNameIdentifier	 FOLLOW function Argument in function Call3987
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
functionArgument296	TokenNameIdentifier	 function Argument296
=	TokenNameEQUAL	
functionArgument	TokenNameIdentifier	 function Argument
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_functionArgument	TokenNameIdentifier	 stream function Argument
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
functionArgument296	TokenNameIdentifier	 function Argument296
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
char_literal297	TokenNameIdentifier	 char literal297
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
132	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_132_in_functionCall3990	TokenNameIdentifier	 FOLLOW 132 in function Call3990
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_132	TokenNameIdentifier	 stream 132
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
char_literal297	TokenNameIdentifier	 char literal297
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: functionName, functionArgument 	TokenNameCOMMENT_LINE	elements: functionName, functionArgument 
// token labels: functionName 	TokenNameCOMMENT_LINE	token labels: functionName 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_functionName	TokenNameIdentifier	 stream function Name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token functionName"	TokenNameStringLiteral	token functionName
,	TokenNameCOMMA	
functionName	TokenNameIdentifier	 function Name
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 528:9: -> ^( FUNCTION_CALL $functionName ( functionArgument )? ) 	TokenNameCOMMENT_LINE	528:9: -> ^( FUNCTION_CALL $functionName ( functionArgument )? ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:528:12: ^( FUNCTION_CALL $functionName ( functionArgument )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:528:12: ^( FUNCTION_CALL $functionName ( functionArgument )? ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
FUNCTION_CALL	TokenNameIdentifier	 FUNCTION  CALL
,	TokenNameCOMMA	
"FUNCTION_CALL"	TokenNameStringLiteral	FUNCTION_CALL
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_functionName	TokenNameIdentifier	 stream function Name
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:528:42: ( functionArgument )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:528:42: ( functionArgument )? 
if	TokenNameif	
(	TokenNameLPAREN	
stream_functionArgument	TokenNameIdentifier	 stream function Argument
.	TokenNameDOT	
hasNext	TokenNameIdentifier	 has Next
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_functionArgument	TokenNameIdentifier	 stream function Argument
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stream_functionArgument	TokenNameIdentifier	 stream function Argument
.	TokenNameDOT	
reset	TokenNameIdentifier	 reset
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "functionCall" 	TokenNameCOMMENT_LINE	$ANTLR end "functionCall" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
functionArgument_return	TokenNameIdentifier	 function Argument return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "functionArgument" 	TokenNameCOMMENT_LINE	$ANTLR start "functionArgument" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:531:1: functionArgument : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:531:1: functionArgument : ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionArgument_return	TokenNameIdentifier	 function Argument return
functionArgument	TokenNameIdentifier	 function Argument
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionArgument_return	TokenNameIdentifier	 function Argument return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionArgument_return	TokenNameIdentifier	 function Argument return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set298	TokenNameIdentifier	 set298
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set298_tree	TokenNameIdentifier	 set298 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:532:5: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:532:5: ( Identifier | StringLiteral | IntegerPositiveLiteral | IntegerNegativeLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set298	TokenNameIdentifier	 set298
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
StringLiteral	TokenNameIdentifier	 String Literal
)	TokenNameRPAREN	
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set298	TokenNameIdentifier	 set298
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "functionArgument" 	TokenNameCOMMENT_LINE	$ANTLR end "functionArgument" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "columnOrSuperColumn" 	TokenNameCOMMENT_LINE	$ANTLR start "columnOrSuperColumn" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:535:1: columnOrSuperColumn : ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:535:1: columnOrSuperColumn : ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
columnOrSuperColumn	TokenNameIdentifier	 column Or Super Column
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
columnOrSuperColumn_return	TokenNameIdentifier	 column Or Super Column return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier299	TokenNameIdentifier	 Identifier299
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerPositiveLiteral300	TokenNameIdentifier	 Integer Positive Literal300
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerNegativeLiteral301	TokenNameIdentifier	 Integer Negative Literal301
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
StringLiteral302	TokenNameIdentifier	 String Literal302
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
functionCall_return	TokenNameIdentifier	 function Call return
functionCall303	TokenNameIdentifier	 function Call303
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier299_tree	TokenNameIdentifier	 Identifier299 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerPositiveLiteral300_tree	TokenNameIdentifier	 Integer Positive Literal300 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerNegativeLiteral301_tree	TokenNameIdentifier	 Integer Negative Literal301 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
StringLiteral302_tree	TokenNameIdentifier	 String Literal302 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:5: ( ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:5: ( ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:7: ( Identifier | IntegerPositiveLiteral | IntegerNegativeLiteral | StringLiteral | functionCall ) 
int	TokenNameint	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
Identifier	TokenNameIdentifier	 Identifier
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA41_1	TokenNameIdentifier	 L A41 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA41_1	TokenNameIdentifier	 L A41 1
==	TokenNameEQUAL_EQUAL	
131	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA41_1	TokenNameIdentifier	 L A41 1
>=	TokenNameGREATER_EQUAL	
117	TokenNameIntegerLiteral	
&&	TokenNameAND_AND	
LA41_1	TokenNameIdentifier	 L A41 1
<=	TokenNameLESS_EQUAL	
121	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA41_1	TokenNameIdentifier	 L A41 1
==	TokenNameEQUAL_EQUAL	
125	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
41	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
StringLiteral	TokenNameIdentifier	 String Literal
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
41	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt41	TokenNameIdentifier	 alt41
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:8: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:8: Identifier 
{	TokenNameLBRACE	
Identifier299	TokenNameIdentifier	 Identifier299
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_columnOrSuperColumn4058	TokenNameIdentifier	 FOLLOW  Identifier in column Or Super Column4058
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier299_tree	TokenNameIdentifier	 Identifier299 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier299	TokenNameIdentifier	 Identifier299
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier299_tree	TokenNameIdentifier	 Identifier299 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:21: IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:21: IntegerPositiveLiteral 
{	TokenNameLBRACE	
IntegerPositiveLiteral300	TokenNameIdentifier	 Integer Positive Literal300
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_columnOrSuperColumn4062	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in column Or Super Column4062
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerPositiveLiteral300_tree	TokenNameIdentifier	 Integer Positive Literal300 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerPositiveLiteral300	TokenNameIdentifier	 Integer Positive Literal300
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerPositiveLiteral300_tree	TokenNameIdentifier	 Integer Positive Literal300 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:46: IntegerNegativeLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:46: IntegerNegativeLiteral 
{	TokenNameLBRACE	
IntegerNegativeLiteral301	TokenNameIdentifier	 Integer Negative Literal301
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
,	TokenNameCOMMA	
FOLLOW_IntegerNegativeLiteral_in_columnOrSuperColumn4066	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in column Or Super Column4066
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerNegativeLiteral301_tree	TokenNameIdentifier	 Integer Negative Literal301 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerNegativeLiteral301	TokenNameIdentifier	 Integer Negative Literal301
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerNegativeLiteral301_tree	TokenNameIdentifier	 Integer Negative Literal301 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:71: StringLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:71: StringLiteral 
{	TokenNameLBRACE	
StringLiteral302	TokenNameIdentifier	 String Literal302
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
StringLiteral	TokenNameIdentifier	 String Literal
,	TokenNameCOMMA	
FOLLOW_StringLiteral_in_columnOrSuperColumn4070	TokenNameIdentifier	 FOLLOW  String Literal in column Or Super Column4070
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
StringLiteral302_tree	TokenNameIdentifier	 String Literal302 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
StringLiteral302	TokenNameIdentifier	 String Literal302
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
StringLiteral302_tree	TokenNameIdentifier	 String Literal302 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:87: functionCall 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:536:87: functionCall 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_functionCall_in_columnOrSuperColumn4074	TokenNameIdentifier	 FOLLOW function Call in column Or Super Column4074
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
functionCall303	TokenNameIdentifier	 function Call303
=	TokenNameEQUAL	
functionCall	TokenNameIdentifier	 function Call
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
functionCall303	TokenNameIdentifier	 function Call303
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "columnOrSuperColumn" 	TokenNameCOMMENT_LINE	$ANTLR end "columnOrSuperColumn" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
host_return	TokenNameIdentifier	 host return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "host" 	TokenNameCOMMENT_LINE	$ANTLR start "host" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:539:1: host : host_name -> ^( NODE_ID_LIST host_name ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:539:1: host : host_name -> ^( NODE_ID_LIST host_name ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_return	TokenNameIdentifier	 host return
host	TokenNameIdentifier	 host
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_return	TokenNameIdentifier	 host return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_return	TokenNameIdentifier	 host return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_name_return	TokenNameIdentifier	 host name return
host_name304	TokenNameIdentifier	 host name304
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_host_name	TokenNameIdentifier	 stream host name
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule host_name"	TokenNameStringLiteral	rule host_name
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:540:5: ( host_name -> ^( NODE_ID_LIST host_name ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:540:5: ( host_name -> ^( NODE_ID_LIST host_name ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:540:7: host_name 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:540:7: host_name 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_host_name_in_host4096	TokenNameIdentifier	 FOLLOW host name in host4096
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
host_name304	TokenNameIdentifier	 host name304
=	TokenNameEQUAL	
host_name	TokenNameIdentifier	 host name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_host_name	TokenNameIdentifier	 stream host name
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
host_name304	TokenNameIdentifier	 host name304
.	TokenNameDOT	
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: host_name 	TokenNameCOMMENT_LINE	elements: host_name 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 541:9: -> ^( NODE_ID_LIST host_name ) 	TokenNameCOMMENT_LINE	541:9: -> ^( NODE_ID_LIST host_name ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:541:12: ^( NODE_ID_LIST host_name ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:541:12: ^( NODE_ID_LIST host_name ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ID_LIST	TokenNameIdentifier	 NODE  ID  LIST
,	TokenNameCOMMA	
"NODE_ID_LIST"	TokenNameStringLiteral	NODE_ID_LIST
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_host_name	TokenNameIdentifier	 stream host name
.	TokenNameDOT	
nextTree	TokenNameIdentifier	 next Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "host" 	TokenNameCOMMENT_LINE	$ANTLR end "host" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
host_name_return	TokenNameIdentifier	 host name return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "host_name" 	TokenNameCOMMENT_LINE	$ANTLR start "host_name" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:544:1: host_name : Identifier ( '.' Identifier )* ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:544:1: host_name : Identifier ( '.' Identifier )* ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_name_return	TokenNameIdentifier	 host name return
host_name	TokenNameIdentifier	 host name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_name_return	TokenNameIdentifier	 host name return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
host_name_return	TokenNameIdentifier	 host name return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier305	TokenNameIdentifier	 Identifier305
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
char_literal306	TokenNameIdentifier	 char literal306
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier307	TokenNameIdentifier	 Identifier307
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier305_tree	TokenNameIdentifier	 Identifier305 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
char_literal306_tree	TokenNameIdentifier	 char literal306 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier307_tree	TokenNameIdentifier	 Identifier307 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:5: ( Identifier ( '.' Identifier )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:5: ( Identifier ( '.' Identifier )* ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:7: Identifier ( '.' Identifier )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:7: Identifier ( '.' Identifier )* 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Identifier305	TokenNameIdentifier	 Identifier305
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_host_name4129	TokenNameIdentifier	 FOLLOW  Identifier in host name4129
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier305_tree	TokenNameIdentifier	 Identifier305 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier305	TokenNameIdentifier	 Identifier305
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier305_tree	TokenNameIdentifier	 Identifier305 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:18: ( '.' Identifier )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:18: ( '.' Identifier )* 
loop42	TokenNameIdentifier	 loop42
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt42	TokenNameIdentifier	 alt42
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA42_0	TokenNameIdentifier	 L A42 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA42_0	TokenNameIdentifier	 L A42 0
==	TokenNameEQUAL_EQUAL	
122	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt42	TokenNameIdentifier	 alt42
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt42	TokenNameIdentifier	 alt42
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:19: '.' Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:545:19: '.' Identifier 
{	TokenNameLBRACE	
char_literal306	TokenNameIdentifier	 char literal306
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
122	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_122_in_host_name4132	TokenNameIdentifier	 FOLLOW 122 in host name4132
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
char_literal306_tree	TokenNameIdentifier	 char literal306 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
char_literal306	TokenNameIdentifier	 char literal306
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
char_literal306_tree	TokenNameIdentifier	 char literal306 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
Identifier307	TokenNameIdentifier	 Identifier307
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_host_name4134	TokenNameIdentifier	 FOLLOW  Identifier in host name4134
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier307_tree	TokenNameIdentifier	 Identifier307 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier307	TokenNameIdentifier	 Identifier307
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier307_tree	TokenNameIdentifier	 Identifier307 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop42	TokenNameIdentifier	 loop42
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "host_name" 	TokenNameCOMMENT_LINE	$ANTLR end "host_name" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
ip_address_return	TokenNameIdentifier	 ip address return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "ip_address" 	TokenNameCOMMENT_LINE	$ANTLR start "ip_address" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:548:1: ip_address : IP_ADDRESS -> ^( NODE_ID_LIST IP_ADDRESS ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:548:1: ip_address : IP_ADDRESS -> ^( NODE_ID_LIST IP_ADDRESS ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
ip_address_return	TokenNameIdentifier	 ip address return
ip_address	TokenNameIdentifier	 ip address
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
ip_address_return	TokenNameIdentifier	 ip address return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
ip_address_return	TokenNameIdentifier	 ip address return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IP_ADDRESS308	TokenNameIdentifier	 IP  ADDRES S308
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IP_ADDRESS308_tree	TokenNameIdentifier	 IP  ADDRES S308 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
stream_IP_ADDRESS	TokenNameIdentifier	 stream  IP  ADDRESS
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleTokenStream	TokenNameIdentifier	 Rewrite Rule Token Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"token IP_ADDRESS"	TokenNameStringLiteral	token IP_ADDRESS
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:549:5: ( IP_ADDRESS -> ^( NODE_ID_LIST IP_ADDRESS ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:549:5: ( IP_ADDRESS -> ^( NODE_ID_LIST IP_ADDRESS ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:549:7: IP_ADDRESS 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:549:7: IP_ADDRESS 
{	TokenNameLBRACE	
IP_ADDRESS308	TokenNameIdentifier	 IP  ADDRES S308
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IP_ADDRESS	TokenNameIdentifier	 IP  ADDRESS
,	TokenNameCOMMA	
FOLLOW_IP_ADDRESS_in_ip_address4157	TokenNameIdentifier	 FOLLOW  IP  ADDRESS in ip address4157
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
stream_IP_ADDRESS	TokenNameIdentifier	 stream  IP  ADDRESS
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
IP_ADDRESS308	TokenNameIdentifier	 IP  ADDRES S308
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// AST REWRITE 	TokenNameCOMMENT_LINE	AST REWRITE 
// elements: IP_ADDRESS 	TokenNameCOMMENT_LINE	elements: IP_ADDRESS 
// token labels: 	TokenNameCOMMENT_LINE	token labels: 
// rule labels: retval 	TokenNameCOMMENT_LINE	rule labels: retval 
// token list labels: 	TokenNameCOMMENT_LINE	token list labels: 
// rule list labels: 	TokenNameCOMMENT_LINE	rule list labels: 
// wildcard labels: 	TokenNameCOMMENT_LINE	wildcard labels: 
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
stream_retval	TokenNameIdentifier	 stream retval
=	TokenNameEQUAL	
new	TokenNamenew	
RewriteRuleSubtreeStream	TokenNameIdentifier	 Rewrite Rule Subtree Stream
(	TokenNameLPAREN	
adaptor	TokenNameIdentifier	 adaptor
,	TokenNameCOMMA	
"rule retval"	TokenNameStringLiteral	rule retval
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// 550:9: -> ^( NODE_ID_LIST IP_ADDRESS ) 	TokenNameCOMMENT_LINE	550:9: -> ^( NODE_ID_LIST IP_ADDRESS ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:550:12: ^( NODE_ID_LIST IP_ADDRESS ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:550:12: ^( NODE_ID_LIST IP_ADDRESS ) 
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
root_1	TokenNameIdentifier	 root 1
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
becomeRoot	TokenNameIdentifier	 become Root
(	TokenNameLPAREN	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
NODE_ID_LIST	TokenNameIdentifier	 NODE  ID  LIST
,	TokenNameCOMMA	
"NODE_ID_LIST"	TokenNameStringLiteral	NODE_ID_LIST
)	TokenNameRPAREN	
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_1	TokenNameIdentifier	 root 1
,	TokenNameCOMMA	
stream_IP_ADDRESS	TokenNameIdentifier	 stream  IP  ADDRESS
.	TokenNameDOT	
nextNode	TokenNameIdentifier	 next Node
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
root_1	TokenNameIdentifier	 root 1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
root_0	TokenNameIdentifier	 root 0
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "ip_address" 	TokenNameCOMMENT_LINE	$ANTLR end "ip_address" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
port_return	TokenNameIdentifier	 port return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "port" 	TokenNameCOMMENT_LINE	$ANTLR start "port" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:553:1: port : IntegerPositiveLiteral ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:553:1: port : IntegerPositiveLiteral ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
port_return	TokenNameIdentifier	 port return
port	TokenNameIdentifier	 port
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
port_return	TokenNameIdentifier	 port return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
port_return	TokenNameIdentifier	 port return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
IntegerPositiveLiteral309	TokenNameIdentifier	 Integer Positive Literal309
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
IntegerPositiveLiteral309_tree	TokenNameIdentifier	 Integer Positive Literal309 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:554:5: ( IntegerPositiveLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:554:5: ( IntegerPositiveLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:554:7: IntegerPositiveLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:554:7: IntegerPositiveLiteral 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
IntegerPositiveLiteral309	TokenNameIdentifier	 Integer Positive Literal309
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
,	TokenNameCOMMA	
FOLLOW_IntegerPositiveLiteral_in_port4195	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in port4195
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
IntegerPositiveLiteral309_tree	TokenNameIdentifier	 Integer Positive Literal309 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
IntegerPositiveLiteral309	TokenNameIdentifier	 Integer Positive Literal309
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
IntegerPositiveLiteral309_tree	TokenNameIdentifier	 Integer Positive Literal309 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "port" 	TokenNameCOMMENT_LINE	$ANTLR end "port" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
incrementValue_return	TokenNameIdentifier	 increment Value return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "incrementValue" 	TokenNameCOMMENT_LINE	$ANTLR start "incrementValue" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:557:1: incrementValue : ( IntegerPositiveLiteral | IntegerNegativeLiteral ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:557:1: incrementValue : ( IntegerPositiveLiteral | IntegerNegativeLiteral ); 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrementValue_return	TokenNameIdentifier	 increment Value return
incrementValue	TokenNameIdentifier	 increment Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrementValue_return	TokenNameIdentifier	 increment Value return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
incrementValue_return	TokenNameIdentifier	 increment Value return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
set310	TokenNameIdentifier	 set310
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
set310_tree	TokenNameIdentifier	 set310 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:558:5: ( IntegerPositiveLiteral | IntegerNegativeLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:558:5: ( IntegerPositiveLiteral | IntegerNegativeLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g: 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set310	TokenNameIdentifier	 set310
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IntegerPositiveLiteral	TokenNameIdentifier	 Integer Positive Literal
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IntegerNegativeLiteral	TokenNameIdentifier	 Integer Negative Literal
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
set310	TokenNameIdentifier	 set310
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "incrementValue" 	TokenNameCOMMENT_LINE	$ANTLR end "incrementValue" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
traceSessionId_return	TokenNameIdentifier	 trace Session Id return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "traceSessionId" 	TokenNameCOMMENT_LINE	$ANTLR start "traceSessionId" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:562:1: traceSessionId : Identifier ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:562:1: traceSessionId : Identifier ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceSessionId_return	TokenNameIdentifier	 trace Session Id return
traceSessionId	TokenNameIdentifier	 trace Session Id
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceSessionId_return	TokenNameIdentifier	 trace Session Id return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
traceSessionId_return	TokenNameIdentifier	 trace Session Id return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
Identifier311	TokenNameIdentifier	 Identifier311
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
Identifier311_tree	TokenNameIdentifier	 Identifier311 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:563:5: ( Identifier ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:563:5: ( Identifier ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:563:7: Identifier 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:563:7: Identifier 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Identifier311	TokenNameIdentifier	 Identifier311
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
Identifier	TokenNameIdentifier	 Identifier
,	TokenNameCOMMA	
FOLLOW_Identifier_in_traceSessionId4237	TokenNameIdentifier	 FOLLOW  Identifier in trace Session Id4237
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Identifier311_tree	TokenNameIdentifier	 Identifier311 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
Identifier311	TokenNameIdentifier	 Identifier311
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
Identifier311_tree	TokenNameIdentifier	 Identifier311 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "traceSessionId" 	TokenNameCOMMENT_LINE	$ANTLR end "traceSessionId" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
tracingProbability_return	TokenNameIdentifier	 tracing Probability return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
CommonTree	TokenNameIdentifier	 Common Tree
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
public	TokenNamepublic	
Object	TokenNameIdentifier	 Object
getTree	TokenNameIdentifier	 get Tree
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
tree	TokenNameIdentifier	 tree
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "tracingProbability" 	TokenNameCOMMENT_LINE	$ANTLR start "tracingProbability" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:566:1: tracingProbability : DoubleLiteral ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:566:1: tracingProbability : DoubleLiteral ; 
public	TokenNamepublic	
final	TokenNamefinal	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
tracingProbability_return	TokenNameIdentifier	 tracing Probability return
tracingProbability	TokenNameIdentifier	 tracing Probability
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
tracingProbability_return	TokenNameIdentifier	 tracing Probability return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CliParser	TokenNameIdentifier	 Cli Parser
.	TokenNameDOT	
tracingProbability_return	TokenNameIdentifier	 tracing Probability return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
DoubleLiteral312	TokenNameIdentifier	 Double Literal312
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CommonTree	TokenNameIdentifier	 Common Tree
DoubleLiteral312_tree	TokenNameIdentifier	 Double Literal312 tree
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:567:5: ( DoubleLiteral ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:567:5: ( DoubleLiteral ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:567:7: DoubleLiteral 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cli/Cli.g:567:7: DoubleLiteral 
{	TokenNameLBRACE	
root_0	TokenNameIdentifier	 root 0
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
nil	TokenNameIdentifier	 nil
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
DoubleLiteral312	TokenNameIdentifier	 Double Literal312
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
DoubleLiteral	TokenNameIdentifier	 Double Literal
,	TokenNameCOMMA	
FOLLOW_DoubleLiteral_in_tracingProbability4254	TokenNameIdentifier	 FOLLOW  Double Literal in tracing Probability4254
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
failed	TokenNameIdentifier	 failed
)	TokenNameRPAREN	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DoubleLiteral312_tree	TokenNameIdentifier	 Double Literal312 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
DoubleLiteral312	TokenNameIdentifier	 Double Literal312
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
addChild	TokenNameIdentifier	 add Child
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
,	TokenNameCOMMA	
DoubleLiteral312_tree	TokenNameIdentifier	 Double Literal312 tree
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
backtracking	TokenNameIdentifier	 backtracking
==	TokenNameEQUAL_EQUAL	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
rulePostProcessing	TokenNameIdentifier	 rule Post Processing
(	TokenNameLPAREN	
root_0	TokenNameIdentifier	 root 0
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
setTokenBoundaries	TokenNameIdentifier	 set Token Boundaries
(	TokenNameLPAREN	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
tree	TokenNameIdentifier	 tree
=	TokenNameEQUAL	
(	TokenNameLPAREN	
CommonTree	TokenNameIdentifier	 Common Tree
)	TokenNameRPAREN	
adaptor	TokenNameIdentifier	 adaptor
.	TokenNameDOT	
errorNode	TokenNameIdentifier	 error Node
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "tracingProbability" 	TokenNameCOMMENT_LINE	$ANTLR end "tracingProbability" 
// Delegated rules 	TokenNameCOMMENT_LINE	Delegated rules 
protected	TokenNameprotected	
DFA2	TokenNameIdentifier	 DF A2
dfa2	TokenNameIdentifier	 dfa2
=	TokenNameEQUAL	
new	TokenNamenew	
DFA2	TokenNameIdentifier	 DF A2
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA6	TokenNameIdentifier	 DF A6
dfa6	TokenNameIdentifier	 dfa6
=	TokenNameEQUAL	
new	TokenNamenew	
DFA6	TokenNameIdentifier	 DF A6
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_eotS	TokenNameIdentifier	 DF A2 eot S
=	TokenNameEQUAL	
" ?"	TokenNameStringLiteral	 ?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_eofS	TokenNameIdentifier	 DF A2 eof S
=	TokenNameEQUAL	
"??"	TokenNameStringLiteral	??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_minS	TokenNameIdentifier	 DF A2 min S
=	TokenNameEQUAL	
"2?2C?6?"	TokenNameStringLiteral	2?2C?6?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_maxS	TokenNameIdentifier	 DF A2 max S
=	TokenNameEQUAL	
"r?pEH?Z?"	TokenNameStringLiteral	r?pEH?Z?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_acceptS	TokenNameIdentifier	 DF A2 accept S
=	TokenNameEQUAL	
"??  ?"	TokenNameStringLiteral	??  ?
+	TokenNamePLUS	
"  "	TokenNameStringLiteral	  
+	TokenNamePLUS	
" "	TokenNameStringLiteral	 
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_specialS	TokenNameIdentifier	 DF A2 special S
=	TokenNameEQUAL	
" ?}>"	TokenNameStringLiteral	 ?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_transitionS	TokenNameIdentifier	 DF A2 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"  ? ?"	TokenNameStringLiteral	  ? ?
+	TokenNamePLUS	
"????  "	TokenNameStringLiteral	????  
+	TokenNamePLUS	
" ? "	TokenNameStringLiteral	 ? 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"???"	TokenNameStringLiteral	???
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"??"	TokenNameStringLiteral	??
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"??"	TokenNameStringLiteral	??
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_eot	TokenNameIdentifier	 DF A2 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_eotS	TokenNameIdentifier	 DF A2 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_eof	TokenNameIdentifier	 DF A2 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_eofS	TokenNameIdentifier	 DF A2 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_min	TokenNameIdentifier	 DF A2 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA2_minS	TokenNameIdentifier	 DF A2 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_max	TokenNameIdentifier	 DF A2 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA2_maxS	TokenNameIdentifier	 DF A2 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_accept	TokenNameIdentifier	 DF A2 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_acceptS	TokenNameIdentifier	 DF A2 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_special	TokenNameIdentifier	 DF A2 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_specialS	TokenNameIdentifier	 DF A2 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA2_transitionS	TokenNameIdentifier	 DF A2 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_transitionS	TokenNameIdentifier	 DF A2 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA2	TokenNameIdentifier	 DF A2
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA2	TokenNameIdentifier	 DF A2
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA2_eot	TokenNameIdentifier	 DF A2 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA2_eof	TokenNameIdentifier	 DF A2 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA2_min	TokenNameIdentifier	 DF A2 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA2_max	TokenNameIdentifier	 DF A2 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA2_accept	TokenNameIdentifier	 DF A2 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA2_special	TokenNameIdentifier	 DF A2 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"137:1: statement : ( connectStatement | exitStatement | countStatement | describeTable | describeCluster | addKeyspace | addColumnFamily | updateKeyspace | updateColumnFamily | delColumnFamily | delKeyspace | useKeyspace | traceNextQuery | setTraceProbability | delStatement | getStatement | helpStatement | setStatement | incrStatement | showStatement | listStatement | truncateStatement | assumeStatement | consistencyLevelStatement | dropIndex | -> ^( NODE_NO_OP ) );"	TokenNameStringLiteral	137:1: statement : ( connectStatement | exitStatement | countStatement | describeTable | describeCluster | addKeyspace | addColumnFamily | updateKeyspace | updateColumnFamily | delColumnFamily | delKeyspace | useKeyspace | traceNextQuery | setTraceProbability | delStatement | getStatement | helpStatement | setStatement | incrStatement | showStatement | listStatement | truncateStatement | assumeStatement | consistencyLevelStatement | dropIndex | -> ^( NODE_NO_OP ) );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA6_eotS	TokenNameIdentifier	 DF A6 eot S
=	TokenNameEQUAL	
"(?"	TokenNameStringLiteral	(?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA6_eofS	TokenNameIdentifier	 DF A6 eof S
=	TokenNameEQUAL	
"???"	TokenNameStringLiteral	???
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA6_minS	TokenNameIdentifier	 DF A6 min S
=	TokenNameEQUAL	
"42?2??C?"	TokenNameStringLiteral	42?2??C?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA6_maxS	TokenNameIdentifier	 DF A6 max S
=	TokenNameEQUAL	
"rQ?6p?qEH?"	TokenNameStringLiteral	rQ?6p?qEH?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA6_acceptS	TokenNameIdentifier	 DF A6 accept S
=	TokenNameEQUAL	
"? ? ?"	TokenNameStringLiteral	? ? ?
+	TokenNamePLUS	
" "	TokenNameStringLiteral	 
+	TokenNamePLUS	
"   "	TokenNameStringLiteral	   
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA6_specialS	TokenNameIdentifier	 DF A6 special S
=	TokenNameEQUAL	
"(?}>"	TokenNameStringLiteral	(?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_transitionS	TokenNameIdentifier	 DF A6 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"=?"	TokenNameStringLiteral	=?
,	TokenNameCOMMA	
"??  "	TokenNameStringLiteral	??  
+	TokenNamePLUS	
" ? ? ??"	TokenNameStringLiteral	 ? ? ??
+	TokenNamePLUS	
""	TokenNameStringLiteral	
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"=?"	TokenNameStringLiteral	=?
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
" /?"	TokenNameStringLiteral	 /?
,	TokenNameCOMMA	
"!?""	TokenNameStringLiteral	!?"
,	TokenNameCOMMA	
"#?$"	TokenNameStringLiteral	#?$
,	TokenNameCOMMA	
"%?&?'"	TokenNameStringLiteral	%?&?'
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_eot	TokenNameIdentifier	 DF A6 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA6_eotS	TokenNameIdentifier	 DF A6 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_eof	TokenNameIdentifier	 DF A6 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA6_eofS	TokenNameIdentifier	 DF A6 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_min	TokenNameIdentifier	 DF A6 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA6_minS	TokenNameIdentifier	 DF A6 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_max	TokenNameIdentifier	 DF A6 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA6_maxS	TokenNameIdentifier	 DF A6 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_accept	TokenNameIdentifier	 DF A6 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA6_acceptS	TokenNameIdentifier	 DF A6 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_special	TokenNameIdentifier	 DF A6 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA6_specialS	TokenNameIdentifier	 DF A6 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA6_transition	TokenNameIdentifier	 DF A6 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA6_transitionS	TokenNameIdentifier	 DF A6 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA6_transition	TokenNameIdentifier	 DF A6 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA6_transition	TokenNameIdentifier	 DF A6 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA6_transitionS	TokenNameIdentifier	 DF A6 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA6	TokenNameIdentifier	 DF A6
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA6	TokenNameIdentifier	 DF A6
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA6_eot	TokenNameIdentifier	 DF A6 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA6_eof	TokenNameIdentifier	 DF A6 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA6_min	TokenNameIdentifier	 DF A6 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA6_max	TokenNameIdentifier	 DF A6 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA6_accept	TokenNameIdentifier	 DF A6 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA6_special	TokenNameIdentifier	 DF A6 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA6_transition	TokenNameIdentifier	 DF A6 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"173:1: helpStatement : ( HELP HELP -> ^( NODE_HELP NODE_HELP ) | HELP CONNECT -> ^( NODE_HELP NODE_CONNECT ) | HELP USE -> ^( NODE_HELP NODE_USE_TABLE ) | HELP TRACE NEXT QUERY -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) | HELP SET TRACE PROBABILITY -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) | HELP DESCRIBE -> ^( NODE_HELP NODE_DESCRIBE ) | HELP DESCRIBE 'CLUSTER' -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) | HELP EXIT -> ^( NODE_HELP NODE_EXIT ) | HELP QUIT -> ^( NODE_HELP NODE_EXIT ) | HELP SHOW 'CLUSTER NAME' -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) | HELP SHOW KEYSPACES -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) | HELP SHOW SCHEMA -> ^( NODE_HELP NODE_SHOW_SCHEMA ) | HELP SHOW API_VERSION -> ^( NODE_HELP NODE_SHOW_VERSION ) | HELP CREATE KEYSPACE -> ^( NODE_HELP NODE_ADD_KEYSPACE ) | HELP UPDATE KEYSPACE -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) | HELP CREATE COLUMN FAMILY -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) | HELP UPDATE COLUMN FAMILY -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) | HELP DROP KEYSPACE -> ^( NODE_HELP NODE_DEL_KEYSPACE ) | HELP DROP COLUMN FAMILY -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) | HELP DROP INDEX -> ^( NODE_HELP NODE_DROP_INDEX ) | HELP GET -> ^( NODE_HELP NODE_THRIFT_GET ) | HELP SET -> ^( NODE_HELP NODE_THRIFT_SET ) | HELP INCR -> ^( NODE_HELP NODE_THRIFT_INCR ) | HELP DECR -> ^( NODE_HELP NODE_THRIFT_DECR ) | HELP DEL -> ^( NODE_HELP NODE_THRIFT_DEL ) | HELP COUNT -> ^( NODE_HELP NODE_THRIFT_COUNT ) | HELP LIST -> ^( NODE_HELP NODE_LIST ) | HELP TRUNCATE -> ^( NODE_HELP NODE_TRUNCATE ) | HELP ASSUME -> ^( NODE_HELP NODE_ASSUME ) | HELP CONSISTENCYLEVEL -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) | HELP -> ^( NODE_HELP ) | '?' -> ^( NODE_HELP ) );"	TokenNameStringLiteral	173:1: helpStatement : ( HELP HELP -> ^( NODE_HELP NODE_HELP ) | HELP CONNECT -> ^( NODE_HELP NODE_CONNECT ) | HELP USE -> ^( NODE_HELP NODE_USE_TABLE ) | HELP TRACE NEXT QUERY -> ^( NODE_HELP NODE_TRACE_NEXT_QUERY ) | HELP SET TRACE PROBABILITY -> ^( NODE_HELP NODE_SET_TRACE_PROBABILITY ) | HELP DESCRIBE -> ^( NODE_HELP NODE_DESCRIBE ) | HELP DESCRIBE 'CLUSTER' -> ^( NODE_HELP NODE_DESCRIBE_CLUSTER ) | HELP EXIT -> ^( NODE_HELP NODE_EXIT ) | HELP QUIT -> ^( NODE_HELP NODE_EXIT ) | HELP SHOW 'CLUSTER NAME' -> ^( NODE_HELP NODE_SHOW_CLUSTER_NAME ) | HELP SHOW KEYSPACES -> ^( NODE_HELP NODE_SHOW_KEYSPACES ) | HELP SHOW SCHEMA -> ^( NODE_HELP NODE_SHOW_SCHEMA ) | HELP SHOW API_VERSION -> ^( NODE_HELP NODE_SHOW_VERSION ) | HELP CREATE KEYSPACE -> ^( NODE_HELP NODE_ADD_KEYSPACE ) | HELP UPDATE KEYSPACE -> ^( NODE_HELP NODE_UPDATE_KEYSPACE ) | HELP CREATE COLUMN FAMILY -> ^( NODE_HELP NODE_ADD_COLUMN_FAMILY ) | HELP UPDATE COLUMN FAMILY -> ^( NODE_HELP NODE_UPDATE_COLUMN_FAMILY ) | HELP DROP KEYSPACE -> ^( NODE_HELP NODE_DEL_KEYSPACE ) | HELP DROP COLUMN FAMILY -> ^( NODE_HELP NODE_DEL_COLUMN_FAMILY ) | HELP DROP INDEX -> ^( NODE_HELP NODE_DROP_INDEX ) | HELP GET -> ^( NODE_HELP NODE_THRIFT_GET ) | HELP SET -> ^( NODE_HELP NODE_THRIFT_SET ) | HELP INCR -> ^( NODE_HELP NODE_THRIFT_INCR ) | HELP DECR -> ^( NODE_HELP NODE_THRIFT_DECR ) | HELP DEL -> ^( NODE_HELP NODE_THRIFT_DEL ) | HELP COUNT -> ^( NODE_HELP NODE_THRIFT_COUNT ) | HELP LIST -> ^( NODE_HELP NODE_LIST ) | HELP TRUNCATE -> ^( NODE_HELP NODE_TRUNCATE ) | HELP ASSUME -> ^( NODE_HELP NODE_ASSUME ) | HELP CONSISTENCYLEVEL -> ^( NODE_HELP NODE_CONSISTENCY_LEVEL ) | HELP -> ^( NODE_HELP ) | '?' -> ^( NODE_HELP ) );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_statement_in_root449	TokenNameIdentifier	 FOLLOW statement in root449
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0004000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SEMICOLON_in_root451	TokenNameIdentifier	 FOLLOW  SEMICOLON in root451
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_EOF_in_root454	TokenNameIdentifier	 FOLLOW  EOF in root454
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_connectStatement_in_statement470	TokenNameIdentifier	 FOLLOW connect Statement in statement470
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_exitStatement_in_statement478	TokenNameIdentifier	 FOLLOW exit Statement in statement478
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_countStatement_in_statement486	TokenNameIdentifier	 FOLLOW count Statement in statement486
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_describeTable_in_statement494	TokenNameIdentifier	 FOLLOW describe Table in statement494
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_describeCluster_in_statement502	TokenNameIdentifier	 FOLLOW describe Cluster in statement502
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_addKeyspace_in_statement510	TokenNameIdentifier	 FOLLOW add Keyspace in statement510
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_addColumnFamily_in_statement518	TokenNameIdentifier	 FOLLOW add Column Family in statement518
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_updateKeyspace_in_statement526	TokenNameIdentifier	 FOLLOW update Keyspace in statement526
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_updateColumnFamily_in_statement534	TokenNameIdentifier	 FOLLOW update Column Family in statement534
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_delColumnFamily_in_statement542	TokenNameIdentifier	 FOLLOW del Column Family in statement542
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_delKeyspace_in_statement550	TokenNameIdentifier	 FOLLOW del Keyspace in statement550
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_useKeyspace_in_statement558	TokenNameIdentifier	 FOLLOW use Keyspace in statement558
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_traceNextQuery_in_statement566	TokenNameIdentifier	 FOLLOW trace Next Query in statement566
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_setTraceProbability_in_statement574	TokenNameIdentifier	 FOLLOW set Trace Probability in statement574
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_delStatement_in_statement582	TokenNameIdentifier	 FOLLOW del Statement in statement582
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_getStatement_in_statement590	TokenNameIdentifier	 FOLLOW get Statement in statement590
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_helpStatement_in_statement598	TokenNameIdentifier	 FOLLOW help Statement in statement598
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_setStatement_in_statement606	TokenNameIdentifier	 FOLLOW set Statement in statement606
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_incrStatement_in_statement614	TokenNameIdentifier	 FOLLOW incr Statement in statement614
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_showStatement_in_statement622	TokenNameIdentifier	 FOLLOW show Statement in statement622
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_listStatement_in_statement630	TokenNameIdentifier	 FOLLOW list Statement in statement630
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_truncateStatement_in_statement638	TokenNameIdentifier	 FOLLOW truncate Statement in statement638
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_assumeStatement_in_statement646	TokenNameIdentifier	 FOLLOW assume Statement in statement646
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_consistencyLevelStatement_in_statement654	TokenNameIdentifier	 FOLLOW consistency Level Statement in statement654
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_dropIndex_in_statement662	TokenNameIdentifier	 FOLLOW drop Index in statement662
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CONNECT_in_connectStatement691	TokenNameIdentifier	 FOLLOW  CONNECT in connect Statement691
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_host_in_connectStatement693	TokenNameIdentifier	 FOLLOW host in connect Statement693
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000800000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_111_in_connectStatement695	TokenNameIdentifier	 FOLLOW 111 in connect Statement695
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_port_in_connectStatement697	TokenNameIdentifier	 FOLLOW port in connect Statement697
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_connectStatement700	TokenNameIdentifier	 FOLLOW username in connect Statement700
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000100000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_password_in_connectStatement702	TokenNameIdentifier	 FOLLOW password in connect Statement702
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CONNECT_in_connectStatement737	TokenNameIdentifier	 FOLLOW  CONNECT in connect Statement737
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000010000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_ip_address_in_connectStatement739	TokenNameIdentifier	 FOLLOW ip address in connect Statement739
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000800000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_111_in_connectStatement741	TokenNameIdentifier	 FOLLOW 111 in connect Statement741
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_port_in_connectStatement743	TokenNameIdentifier	 FOLLOW port in connect Statement743
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_connectStatement746	TokenNameIdentifier	 FOLLOW username in connect Statement746
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000100000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_password_in_connectStatement748	TokenNameIdentifier	 FOLLOW password in connect Statement748
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement792	TokenNameIdentifier	 FOLLOW  HELP in help Statement792
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0010000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement794	TokenNameIdentifier	 FOLLOW  HELP in help Statement794
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement819	TokenNameIdentifier	 FOLLOW  HELP in help Statement819
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0008000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CONNECT_in_helpStatement821	TokenNameIdentifier	 FOLLOW  CONNECT in help Statement821
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement846	TokenNameIdentifier	 FOLLOW  HELP in help Statement846
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0020000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_USE_in_helpStatement848	TokenNameIdentifier	 FOLLOW  USE in help Statement848
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement873	TokenNameIdentifier	 FOLLOW  HELP in help Statement873
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0040000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TRACE_in_helpStatement875	TokenNameIdentifier	 FOLLOW  TRACE in help Statement875
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0080000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_NEXT_in_helpStatement877	TokenNameIdentifier	 FOLLOW  NEXT in help Statement877
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0100000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QUERY_in_helpStatement879	TokenNameIdentifier	 FOLLOW  QUERY in help Statement879
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement903	TokenNameIdentifier	 FOLLOW  HELP in help Statement903
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0200000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SET_in_helpStatement905	TokenNameIdentifier	 FOLLOW  SET in help Statement905
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0040000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TRACE_in_helpStatement907	TokenNameIdentifier	 FOLLOW  TRACE in help Statement907
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0400000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_PROBABILITY_in_helpStatement909	TokenNameIdentifier	 FOLLOW  PROBABILITY in help Statement909
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement933	TokenNameIdentifier	 FOLLOW  HELP in help Statement933
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0800000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DESCRIBE_in_helpStatement935	TokenNameIdentifier	 FOLLOW  DESCRIBE in help Statement935
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement959	TokenNameIdentifier	 FOLLOW  HELP in help Statement959
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0800000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DESCRIBE_in_helpStatement961	TokenNameIdentifier	 FOLLOW  DESCRIBE in help Statement961
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0001000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_112_in_helpStatement963	TokenNameIdentifier	 FOLLOW 112 in help Statement963
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement987	TokenNameIdentifier	 FOLLOW  HELP in help Statement987
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x1000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_EXIT_in_helpStatement989	TokenNameIdentifier	 FOLLOW  EXIT in help Statement989
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1014	TokenNameIdentifier	 FOLLOW  HELP in help Statement1014
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QUIT_in_helpStatement1016	TokenNameIdentifier	 FOLLOW  QUIT in help Statement1016
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1041	TokenNameIdentifier	 FOLLOW  HELP in help Statement1041
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_helpStatement1043	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1043
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0002000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_113_in_helpStatement1045	TokenNameIdentifier	 FOLLOW 113 in help Statement1045
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1069	TokenNameIdentifier	 FOLLOW  HELP in help Statement1069
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_helpStatement1071	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1071
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACES_in_helpStatement1073	TokenNameIdentifier	 FOLLOW  KEYSPACES in help Statement1073
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1098	TokenNameIdentifier	 FOLLOW  HELP in help Statement1098
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_helpStatement1100	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1100
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SCHEMA_in_helpStatement1102	TokenNameIdentifier	 FOLLOW  SCHEMA in help Statement1102
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1130	TokenNameIdentifier	 FOLLOW  HELP in help Statement1130
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_helpStatement1132	TokenNameIdentifier	 FOLLOW  SHOW in help Statement1132
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_API_VERSION_in_helpStatement1134	TokenNameIdentifier	 FOLLOW  API  VERSION in help Statement1134
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1158	TokenNameIdentifier	 FOLLOW  HELP in help Statement1158
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CREATE_in_helpStatement1160	TokenNameIdentifier	 FOLLOW  CREATE in help Statement1160
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACE_in_helpStatement1162	TokenNameIdentifier	 FOLLOW  KEYSPACE in help Statement1162
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1187	TokenNameIdentifier	 FOLLOW  HELP in help Statement1187
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_UPDATE_in_helpStatement1189	TokenNameIdentifier	 FOLLOW  UPDATE in help Statement1189
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACE_in_helpStatement1191	TokenNameIdentifier	 FOLLOW  KEYSPACE in help Statement1191
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1215	TokenNameIdentifier	 FOLLOW  HELP in help Statement1215
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CREATE_in_helpStatement1217	TokenNameIdentifier	 FOLLOW  CREATE in help Statement1217
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COLUMN_in_helpStatement1219	TokenNameIdentifier	 FOLLOW  COLUMN in help Statement1219
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_FAMILY_in_helpStatement1221	TokenNameIdentifier	 FOLLOW  FAMILY in help Statement1221
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1246	TokenNameIdentifier	 FOLLOW  HELP in help Statement1246
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_UPDATE_in_helpStatement1248	TokenNameIdentifier	 FOLLOW  UPDATE in help Statement1248
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COLUMN_in_helpStatement1250	TokenNameIdentifier	 FOLLOW  COLUMN in help Statement1250
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_FAMILY_in_helpStatement1252	TokenNameIdentifier	 FOLLOW  FAMILY in help Statement1252
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1276	TokenNameIdentifier	 FOLLOW  HELP in help Statement1276
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DROP_in_helpStatement1278	TokenNameIdentifier	 FOLLOW  DROP in help Statement1278
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACE_in_helpStatement1280	TokenNameIdentifier	 FOLLOW  KEYSPACE in help Statement1280
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1305	TokenNameIdentifier	 FOLLOW  HELP in help Statement1305
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DROP_in_helpStatement1307	TokenNameIdentifier	 FOLLOW  DROP in help Statement1307
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COLUMN_in_helpStatement1309	TokenNameIdentifier	 FOLLOW  COLUMN in help Statement1309
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_FAMILY_in_helpStatement1311	TokenNameIdentifier	 FOLLOW  FAMILY in help Statement1311
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1336	TokenNameIdentifier	 FOLLOW  HELP in help Statement1336
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DROP_in_helpStatement1338	TokenNameIdentifier	 FOLLOW  DROP in help Statement1338
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000100L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INDEX_in_helpStatement1340	TokenNameIdentifier	 FOLLOW  INDEX in help Statement1340
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1364	TokenNameIdentifier	 FOLLOW  HELP in help Statement1364
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000200L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_GET_in_helpStatement1366	TokenNameIdentifier	 FOLLOW  GET in help Statement1366
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1391	TokenNameIdentifier	 FOLLOW  HELP in help Statement1391
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0200000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SET_in_helpStatement1393	TokenNameIdentifier	 FOLLOW  SET in help Statement1393
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1418	TokenNameIdentifier	 FOLLOW  HELP in help Statement1418
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000400L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INCR_in_helpStatement1420	TokenNameIdentifier	 FOLLOW  INCR in help Statement1420
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1444	TokenNameIdentifier	 FOLLOW  HELP in help Statement1444
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000800L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DECR_in_helpStatement1446	TokenNameIdentifier	 FOLLOW  DECR in help Statement1446
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1470	TokenNameIdentifier	 FOLLOW  HELP in help Statement1470
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DEL_in_helpStatement1472	TokenNameIdentifier	 FOLLOW  DEL in help Statement1472
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1497	TokenNameIdentifier	 FOLLOW  HELP in help Statement1497
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000002000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COUNT_in_helpStatement1499	TokenNameIdentifier	 FOLLOW  COUNT in help Statement1499
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1524	TokenNameIdentifier	 FOLLOW  HELP in help Statement1524
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000004000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_LIST_in_helpStatement1526	TokenNameIdentifier	 FOLLOW  LIST in help Statement1526
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1551	TokenNameIdentifier	 FOLLOW  HELP in help Statement1551
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000008000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TRUNCATE_in_helpStatement1553	TokenNameIdentifier	 FOLLOW  TRUNCATE in help Statement1553
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1577	TokenNameIdentifier	 FOLLOW  HELP in help Statement1577
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000010000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_ASSUME_in_helpStatement1579	TokenNameIdentifier	 FOLLOW  ASSUME in help Statement1579
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1603	TokenNameIdentifier	 FOLLOW  HELP in help Statement1603
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000020000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CONSISTENCYLEVEL_in_helpStatement1605	TokenNameIdentifier	 FOLLOW  CONSISTENCYLEVEL in help Statement1605
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_HELP_in_helpStatement1629	TokenNameIdentifier	 FOLLOW  HELP in help Statement1629
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_114_in_helpStatement1652	TokenNameIdentifier	 FOLLOW 114 in help Statement1652
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QUIT_in_exitStatement1687	TokenNameIdentifier	 FOLLOW  QUIT in exit Statement1687
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_EXIT_in_exitStatement1701	TokenNameIdentifier	 FOLLOW  EXIT in exit Statement1701
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_GET_in_getStatement1724	TokenNameIdentifier	 FOLLOW  GET in get Statement1724
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyExpr_in_getStatement1726	TokenNameIdentifier	 FOLLOW column Family Expr in get Statement1726
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0008000080000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_115_in_getStatement1729	TokenNameIdentifier	 FOLLOW 115 in get Statement1729
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000001C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_typeIdentifier_in_getStatement1731	TokenNameIdentifier	 FOLLOW type Identifier in get Statement1731
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000080000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_LIMIT_in_getStatement1736	TokenNameIdentifier	 FOLLOW  LIMIT in get Statement1736
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_getStatement1740	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in get Statement1740
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_GET_in_getStatement1785	TokenNameIdentifier	 FOLLOW  GET in get Statement1785
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_getStatement1787	TokenNameIdentifier	 FOLLOW column Family in get Statement1787
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0010000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_116_in_getStatement1789	TokenNameIdentifier	 FOLLOW 116 in get Statement1789
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_getCondition_in_getStatement1791	TokenNameIdentifier	 FOLLOW get Condition in get Statement1791
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000082000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_AND_in_getStatement1794	TokenNameIdentifier	 FOLLOW  AND in get Statement1794
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_getCondition_in_getStatement1796	TokenNameIdentifier	 FOLLOW get Condition in get Statement1796
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000082000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_LIMIT_in_getStatement1801	TokenNameIdentifier	 FOLLOW  LIMIT in get Statement1801
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_getStatement1805	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in get Statement1805
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnOrSuperColumn_in_getCondition1856	TokenNameIdentifier	 FOLLOW column Or Super Column in get Condition1856
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x03E0000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_operator_in_getCondition1858	TokenNameIdentifier	 FOLLOW operator in get Condition1858
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_value_in_getCondition1860	TokenNameIdentifier	 FOLLOW value in get Condition1860
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_operator0	TokenNameIdentifier	 FOLLOW set in operator0
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_typeIdentifier0	TokenNameIdentifier	 FOLLOW set in type Identifier0
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SET_in_setStatement1956	TokenNameIdentifier	 FOLLOW  SET in set Statement1956
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyExpr_in_setStatement1958	TokenNameIdentifier	 FOLLOW column Family Expr in set Statement1958
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0020000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_117_in_setStatement1960	TokenNameIdentifier	 FOLLOW 117 in set Statement1960
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_value_in_setStatement1964	TokenNameIdentifier	 FOLLOW value in set Statement1964
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000200000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_WITH_in_setStatement1967	TokenNameIdentifier	 FOLLOW  WITH in set Statement1967
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000400000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TTL_in_setStatement1969	TokenNameIdentifier	 FOLLOW  TTL in set Statement1969
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0020000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_117_in_setStatement1971	TokenNameIdentifier	 FOLLOW 117 in set Statement1971
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_setStatement1975	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in set Statement1975
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INCR_in_incrStatement2021	TokenNameIdentifier	 FOLLOW  INCR in incr Statement2021
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyExpr_in_incrStatement2023	TokenNameIdentifier	 FOLLOW column Family Expr in incr Statement2023
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000800000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_BY_in_incrStatement2026	TokenNameIdentifier	 FOLLOW  BY in incr Statement2026
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000004040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_incrementValue_in_incrStatement2030	TokenNameIdentifier	 FOLLOW increment Value in incr Statement2030
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DECR_in_incrStatement2064	TokenNameIdentifier	 FOLLOW  DECR in incr Statement2064
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyExpr_in_incrStatement2066	TokenNameIdentifier	 FOLLOW column Family Expr in incr Statement2066
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000800000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_BY_in_incrStatement2069	TokenNameIdentifier	 FOLLOW  BY in incr Statement2069
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000004040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_incrementValue_in_incrStatement2073	TokenNameIdentifier	 FOLLOW increment Value in incr Statement2073
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COUNT_in_countStatement2116	TokenNameIdentifier	 FOLLOW  COUNT in count Statement2116
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyExpr_in_countStatement2118	TokenNameIdentifier	 FOLLOW column Family Expr in count Statement2118
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DEL_in_delStatement2152	TokenNameIdentifier	 FOLLOW  DEL in del Statement2152
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyExpr_in_delStatement2154	TokenNameIdentifier	 FOLLOW column Family Expr in del Statement2154
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_showClusterName_in_showStatement2188	TokenNameIdentifier	 FOLLOW show Cluster Name in show Statement2188
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_showVersion_in_showStatement2196	TokenNameIdentifier	 FOLLOW show Version in show Statement2196
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_showKeyspaces_in_showStatement2204	TokenNameIdentifier	 FOLLOW show Keyspaces in show Statement2204
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_showSchema_in_showStatement2212	TokenNameIdentifier	 FOLLOW show Schema in show Statement2212
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_LIST_in_listStatement2229	TokenNameIdentifier	 FOLLOW  LIST in list Statement2229
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_listStatement2231	TokenNameIdentifier	 FOLLOW column Family in list Statement2231
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0800000080000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyRangeExpr_in_listStatement2233	TokenNameIdentifier	 FOLLOW key Range Expr in list Statement2233
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000080000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_rowLimitExpr_in_listStatement2236	TokenNameIdentifier	 FOLLOW row Limit Expr in list Statement2236
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnLimitExpr_in_listStatement2239	TokenNameIdentifier	 FOLLOW column Limit Expr in list Statement2239
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TRUNCATE_in_truncateStatement2282	TokenNameIdentifier	 FOLLOW  TRUNCATE in truncate Statement2282
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_truncateStatement2284	TokenNameIdentifier	 FOLLOW column Family in truncate Statement2284
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_ASSUME_in_assumeStatement2317	TokenNameIdentifier	 FOLLOW  ASSUME in assume Statement2317
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_assumeStatement2319	TokenNameIdentifier	 FOLLOW column Family in assume Statement2319
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_assumeStatement2323	TokenNameIdentifier	 FOLLOW  Identifier in assume Statement2323
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0008000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_115_in_assumeStatement2325	TokenNameIdentifier	 FOLLOW 115 in assume Statement2325
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_assumeStatement2327	TokenNameIdentifier	 FOLLOW entity Name in assume Statement2327
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CONSISTENCYLEVEL_in_consistencyLevelStatement2365	TokenNameIdentifier	 FOLLOW  CONSISTENCYLEVEL in consistency Level Statement2365
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0008000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_115_in_consistencyLevelStatement2367	TokenNameIdentifier	 FOLLOW 115 in consistency Level Statement2367
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_consistencyLevelStatement2371	TokenNameIdentifier	 FOLLOW  Identifier in consistency Level Statement2371
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_showClusterName2405	TokenNameIdentifier	 FOLLOW  SHOW in show Cluster Name2405
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0002000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_113_in_showClusterName2407	TokenNameIdentifier	 FOLLOW 113 in show Cluster Name2407
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CREATE_in_addKeyspace2438	TokenNameIdentifier	 FOLLOW  CREATE in add Keyspace2438
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACE_in_addKeyspace2440	TokenNameIdentifier	 FOLLOW  KEYSPACE in add Keyspace2440
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyValuePairExpr_in_addKeyspace2442	TokenNameIdentifier	 FOLLOW key Value Pair Expr in add Keyspace2442
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_CREATE_in_addColumnFamily2476	TokenNameIdentifier	 FOLLOW  CREATE in add Column Family2476
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COLUMN_in_addColumnFamily2478	TokenNameIdentifier	 FOLLOW  COLUMN in add Column Family2478
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_FAMILY_in_addColumnFamily2480	TokenNameIdentifier	 FOLLOW  FAMILY in add Column Family2480
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyValuePairExpr_in_addColumnFamily2482	TokenNameIdentifier	 FOLLOW key Value Pair Expr in add Column Family2482
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_UPDATE_in_updateKeyspace2516	TokenNameIdentifier	 FOLLOW  UPDATE in update Keyspace2516
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACE_in_updateKeyspace2518	TokenNameIdentifier	 FOLLOW  KEYSPACE in update Keyspace2518
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyValuePairExpr_in_updateKeyspace2520	TokenNameIdentifier	 FOLLOW key Value Pair Expr in update Keyspace2520
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_UPDATE_in_updateColumnFamily2553	TokenNameIdentifier	 FOLLOW  UPDATE in update Column Family2553
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COLUMN_in_updateColumnFamily2555	TokenNameIdentifier	 FOLLOW  COLUMN in update Column Family2555
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_FAMILY_in_updateColumnFamily2557	TokenNameIdentifier	 FOLLOW  FAMILY in update Column Family2557
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyValuePairExpr_in_updateColumnFamily2559	TokenNameIdentifier	 FOLLOW key Value Pair Expr in update Column Family2559
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DROP_in_delKeyspace2592	TokenNameIdentifier	 FOLLOW  DROP in del Keyspace2592
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACE_in_delKeyspace2594	TokenNameIdentifier	 FOLLOW  KEYSPACE in del Keyspace2594
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspace_in_delKeyspace2596	TokenNameIdentifier	 FOLLOW keyspace in del Keyspace2596
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DROP_in_delColumnFamily2630	TokenNameIdentifier	 FOLLOW  DROP in del Column Family2630
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_COLUMN_in_delColumnFamily2632	TokenNameIdentifier	 FOLLOW  COLUMN in del Column Family2632
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_FAMILY_in_delColumnFamily2634	TokenNameIdentifier	 FOLLOW  FAMILY in del Column Family2634
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_delColumnFamily2636	TokenNameIdentifier	 FOLLOW column Family in del Column Family2636
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DROP_in_dropIndex2670	TokenNameIdentifier	 FOLLOW  DROP in drop Index2670
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000100L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INDEX_in_dropIndex2672	TokenNameIdentifier	 FOLLOW  INDEX in drop Index2672
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000001000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_ON_in_dropIndex2674	TokenNameIdentifier	 FOLLOW  ON in drop Index2674
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_dropIndex2676	TokenNameIdentifier	 FOLLOW column Family in drop Index2676
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0400000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_122_in_dropIndex2678	TokenNameIdentifier	 FOLLOW 122 in drop Index2678
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnName_in_dropIndex2680	TokenNameIdentifier	 FOLLOW column Name in drop Index2680
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_showVersion2715	TokenNameIdentifier	 FOLLOW  SHOW in show Version2715
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_API_VERSION_in_showVersion2717	TokenNameIdentifier	 FOLLOW  API  VERSION in show Version2717
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_showKeyspaces2748	TokenNameIdentifier	 FOLLOW  SHOW in show Keyspaces2748
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_KEYSPACES_in_showKeyspaces2750	TokenNameIdentifier	 FOLLOW  KEYSPACES in show Keyspaces2750
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SHOW_in_showSchema2782	TokenNameIdentifier	 FOLLOW  SHOW in show Schema2782
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SCHEMA_in_showSchema2784	TokenNameIdentifier	 FOLLOW  SCHEMA in show Schema2784
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspace_in_showSchema2787	TokenNameIdentifier	 FOLLOW keyspace in show Schema2787
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DESCRIBE_in_describeTable2825	TokenNameIdentifier	 FOLLOW  DESCRIBE in describe Table2825
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspace_in_describeTable2828	TokenNameIdentifier	 FOLLOW keyspace in describe Table2828
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DESCRIBE_in_describeCluster2870	TokenNameIdentifier	 FOLLOW  DESCRIBE in describe Cluster2870
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0001000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_112_in_describeCluster2872	TokenNameIdentifier	 FOLLOW 112 in describe Cluster2872
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_USE_in_useKeyspace2903	TokenNameIdentifier	 FOLLOW  USE in use Keyspace2903
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspace_in_useKeyspace2905	TokenNameIdentifier	 FOLLOW keyspace in use Keyspace2905
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000180000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_useKeyspace2909	TokenNameIdentifier	 FOLLOW username in use Keyspace2909
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000100000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_password_in_useKeyspace2916	TokenNameIdentifier	 FOLLOW password in use Keyspace2916
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TRACE_in_traceNextQuery2971	TokenNameIdentifier	 FOLLOW  TRACE in trace Next Query2971
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0080000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_NEXT_in_traceNextQuery2973	TokenNameIdentifier	 FOLLOW  NEXT in trace Next Query2973
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0100000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QUERY_in_traceNextQuery2975	TokenNameIdentifier	 FOLLOW  QUERY in trace Next Query2975
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_SET_in_setTraceProbability3006	TokenNameIdentifier	 FOLLOW  SET in set Trace Probability3006
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0040000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_TRACE_in_setTraceProbability3008	TokenNameIdentifier	 FOLLOW  TRACE in set Trace Probability3008
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0400000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_PROBABILITY_in_setTraceProbability3010	TokenNameIdentifier	 FOLLOW  PROBABILITY in set Trace Probability3010
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000008000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_tracingProbability_in_setTraceProbability3012	TokenNameIdentifier	 FOLLOW tracing Probability in set Trace Probability3012
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_keyValuePairExpr3045	TokenNameIdentifier	 FOLLOW entity Name in key Value Pair Expr3045
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000002200000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_AND_in_keyValuePairExpr3050	TokenNameIdentifier	 FOLLOW  AND in key Value Pair Expr3050
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_WITH_in_keyValuePairExpr3054	TokenNameIdentifier	 FOLLOW  WITH in key Value Pair Expr3054
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyValuePair_in_keyValuePairExpr3057	TokenNameIdentifier	 FOLLOW key Value Pair in key Value Pair Expr3057
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000002200000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_attr_name_in_keyValuePair3114	TokenNameIdentifier	 FOLLOW attr name in key Value Pair3114
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0020000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_117_in_keyValuePair3116	TokenNameIdentifier	 FOLLOW 117 in key Value Pair3116
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x480000000C1C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_attrValue_in_keyValuePair3118	TokenNameIdentifier	 FOLLOW attr Value in key Value Pair3118
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_arrayConstruct_in_attrValue3150	TokenNameIdentifier	 FOLLOW array Construct in attr Value3150
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_hashConstruct_in_attrValue3158	TokenNameIdentifier	 FOLLOW hash Construct in attr Value3158
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_attrValueString_in_attrValue3166	TokenNameIdentifier	 FOLLOW attr Value String in attr Value3166
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_attrValueInt_in_attrValue3174	TokenNameIdentifier	 FOLLOW attr Value Int in attr Value3174
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_attrValueDouble_in_attrValue3182	TokenNameIdentifier	 FOLLOW attr Value Double in attr Value3182
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_123_in_arrayConstruct3201	TokenNameIdentifier	 FOLLOW 123 in array Construct3201
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x6000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_hashConstruct_in_arrayConstruct3204	TokenNameIdentifier	 FOLLOW hash Construct in array Construct3204
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x7000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_124_in_arrayConstruct3206	TokenNameIdentifier	 FOLLOW 124 in array Construct3206
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x6000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_arrayConstruct3211	TokenNameIdentifier	 FOLLOW 125 in array Construct3211
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_hashConstruct3249	TokenNameIdentifier	 FOLLOW 126 in hash Construct3249
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_hashElementPair_in_hashConstruct3251	TokenNameIdentifier	 FOLLOW hash Element Pair in hash Construct3251
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x9000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_124_in_hashConstruct3254	TokenNameIdentifier	 FOLLOW 124 in hash Construct3254
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_hashElementPair_in_hashConstruct3256	TokenNameIdentifier	 FOLLOW hash Element Pair in hash Construct3256
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x9000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_hashConstruct3260	TokenNameIdentifier	 FOLLOW 127 in hash Construct3260
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_rowKey_in_hashElementPair3296	TokenNameIdentifier	 FOLLOW row Key in hash Element Pair3296
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_128_in_hashElementPair3298	TokenNameIdentifier	 FOLLOW 128 in hash Element Pair3298
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x40000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_rowValue_in_hashElementPair3300	TokenNameIdentifier	 FOLLOW row Value in hash Element Pair3300
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamily_in_columnFamilyExpr3335	TokenNameIdentifier	 FOLLOW column Family in column Family Expr3335
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0800000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_123_in_columnFamilyExpr3337	TokenNameIdentifier	 FOLLOW 123 in column Family Expr3337
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_rowKey_in_columnFamilyExpr3339	TokenNameIdentifier	 FOLLOW row Key in column Family Expr3339
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_columnFamilyExpr3341	TokenNameIdentifier	 FOLLOW 125 in column Family Expr3341
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0800000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_123_in_columnFamilyExpr3354	TokenNameIdentifier	 FOLLOW 123 in column Family Expr3354
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnOrSuperColumn_in_columnFamilyExpr3358	TokenNameIdentifier	 FOLLOW column Or Super Column in column Family Expr3358
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_columnFamilyExpr3360	TokenNameIdentifier	 FOLLOW 125 in column Family Expr3360
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0800000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_123_in_columnFamilyExpr3376	TokenNameIdentifier	 FOLLOW 123 in column Family Expr3376
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnOrSuperColumn_in_columnFamilyExpr3380	TokenNameIdentifier	 FOLLOW column Or Super Column in column Family Expr3380
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_columnFamilyExpr3382	TokenNameIdentifier	 FOLLOW 125 in column Family Expr3382
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_123_in_keyRangeExpr3445	TokenNameIdentifier	 FOLLOW 123 in key Range Expr3445
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x20000000041C0000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_keyRangeExpr3451	TokenNameIdentifier	 FOLLOW entity Name in key Range Expr3451
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_128_in_keyRangeExpr3454	TokenNameIdentifier	 FOLLOW 128 in key Range Expr3454
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x20000000041C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_keyRangeExpr3458	TokenNameIdentifier	 FOLLOW entity Name in key Range Expr3458
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_keyRangeExpr3464	TokenNameIdentifier	 FOLLOW 125 in key Range Expr3464
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_LIMIT_in_rowLimitExpr3501	TokenNameIdentifier	 FOLLOW  LIMIT in row Limit Expr3501
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_rowLimitExpr3505	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in row Limit Expr3505
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_129_in_columnLimitExpr3539	TokenNameIdentifier	 FOLLOW 129 in column Limit Expr3539
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000040000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_columnLimitExpr3543	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in column Limit Expr3543
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_reversedExpr_in_columnLimitExpr3545	TokenNameIdentifier	 FOLLOW reversed Expr in column Limit Expr3545
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_130_in_reversedExpr3583	TokenNameIdentifier	 FOLLOW 130 in reversed Expr3583
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_columnName3611	TokenNameIdentifier	 FOLLOW entity Name in column Name3611
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_attr_name3625	TokenNameIdentifier	 FOLLOW  Identifier in attr name3625
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_attrValueString3642	TokenNameIdentifier	 FOLLOW set in attr Value String3642
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_attrValueInt0	TokenNameIdentifier	 FOLLOW set in attr Value Int0
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DoubleLiteral_in_attrValueDouble3694	TokenNameIdentifier	 FOLLOW  Double Literal in attr Value Double3694
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_keyspace3710	TokenNameIdentifier	 FOLLOW entity Name in keyspace3710
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_replica_placement_strategy3724	TokenNameIdentifier	 FOLLOW  String Literal in replica placement strategy3724
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_keyspaceNewName3738	TokenNameIdentifier	 FOLLOW entity Name in keyspace New Name3738
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_comparator3752	TokenNameIdentifier	 FOLLOW  String Literal in comparator3752
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_command3771	TokenNameIdentifier	 FOLLOW  Identifier in command3771
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_newColumnFamily3785	TokenNameIdentifier	 FOLLOW entity Name in new Column Family3785
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_username3794	TokenNameIdentifier	 FOLLOW  Identifier in username3794
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_password3806	TokenNameIdentifier	 FOLLOW  String Literal in password3806
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_entityName_in_columnFamily3821	TokenNameIdentifier	 FOLLOW entity Name in column Family3821
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_entityName3834	TokenNameIdentifier	 FOLLOW set in entity Name3834
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_rowKey3866	TokenNameIdentifier	 FOLLOW  Identifier in row Key3866
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_rowKey3870	TokenNameIdentifier	 FOLLOW  String Literal in row Key3870
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_rowKey3874	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in row Key3874
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerNegativeLiteral_in_rowKey3878	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in row Key3878
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_functionCall_in_rowKey3882	TokenNameIdentifier	 FOLLOW function Call in row Key3882
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_rowValue3904	TokenNameIdentifier	 FOLLOW  Identifier in row Value3904
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_rowValue3908	TokenNameIdentifier	 FOLLOW  String Literal in row Value3908
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_rowValue3912	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in row Value3912
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerNegativeLiteral_in_rowValue3916	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in row Value3916
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_functionCall_in_rowValue3920	TokenNameIdentifier	 FOLLOW function Call in row Value3920
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_hashConstruct_in_rowValue3924	TokenNameIdentifier	 FOLLOW hash Construct in row Value3924
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_value3946	TokenNameIdentifier	 FOLLOW  Identifier in value3946
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_value3950	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in value3950
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerNegativeLiteral_in_value3954	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in value3954
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_value3958	TokenNameIdentifier	 FOLLOW  String Literal in value3958
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_functionCall_in_value3962	TokenNameIdentifier	 FOLLOW function Call in value3962
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_functionCall3983	TokenNameIdentifier	 FOLLOW  Identifier in function Call3983
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_131_in_functionCall3985	TokenNameIdentifier	 FOLLOW 131 in function Call3985
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000041C0000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_functionArgument_in_functionCall3987	TokenNameIdentifier	 FOLLOW function Argument in function Call3987
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_132_in_functionCall3990	TokenNameIdentifier	 FOLLOW 132 in function Call3990
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_functionArgument0	TokenNameIdentifier	 FOLLOW set in function Argument0
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_columnOrSuperColumn4058	TokenNameIdentifier	 FOLLOW  Identifier in column Or Super Column4058
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_columnOrSuperColumn4062	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in column Or Super Column4062
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerNegativeLiteral_in_columnOrSuperColumn4066	TokenNameIdentifier	 FOLLOW  Integer Negative Literal in column Or Super Column4066
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_StringLiteral_in_columnOrSuperColumn4070	TokenNameIdentifier	 FOLLOW  String Literal in column Or Super Column4070
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_functionCall_in_columnOrSuperColumn4074	TokenNameIdentifier	 FOLLOW function Call in column Or Super Column4074
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_host_name_in_host4096	TokenNameIdentifier	 FOLLOW host name in host4096
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_host_name4129	TokenNameIdentifier	 FOLLOW  Identifier in host name4129
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0400000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_122_in_host_name4132	TokenNameIdentifier	 FOLLOW 122 in host name4132
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000080000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_host_name4134	TokenNameIdentifier	 FOLLOW  Identifier in host name4134
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0400000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IP_ADDRESS_in_ip_address4157	TokenNameIdentifier	 FOLLOW  IP  ADDRESS in ip address4157
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IntegerPositiveLiteral_in_port4195	TokenNameIdentifier	 FOLLOW  Integer Positive Literal in port4195
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_incrementValue0	TokenNameIdentifier	 FOLLOW set in increment Value0
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_Identifier_in_traceSessionId4237	TokenNameIdentifier	 FOLLOW  Identifier in trace Session Id4237
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_DoubleLiteral_in_tracingProbability4254	TokenNameIdentifier	 FOLLOW  Double Literal in tracing Probability4254
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
