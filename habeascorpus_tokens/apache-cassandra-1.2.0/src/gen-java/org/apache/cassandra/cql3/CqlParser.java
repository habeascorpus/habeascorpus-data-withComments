// $ANTLR 3.2 Sep 23, 2009 12:02:23 /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g 2013-01-24 15:45:48 	TokenNameCOMMENT_LINE	$ANTLR 3.2 Sep 23, 2009 12:02:23 /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g 2013-01-24 15:45:48 
package	TokenNamepackage	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
cql3	TokenNameIdentifier	 cql3
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
ArrayList	TokenNameIdentifier	 Array List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Arrays	TokenNameIdentifier	 Arrays
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Collections	TokenNameIdentifier	 Collections
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
EnumSet	TokenNameIdentifier	 Enum Set
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
HashMap	TokenNameIdentifier	 Hash Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
LinkedHashMap	TokenNameIdentifier	 Linked Hash Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
List	TokenNameIdentifier	 List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Map	TokenNameIdentifier	 Map
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Set	TokenNameIdentifier	 Set
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
auth	TokenNameIdentifier	 auth
.	TokenNameDOT	
Permission	TokenNameIdentifier	 Permission
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
auth	TokenNameIdentifier	 auth
.	TokenNameDOT	
DataResource	TokenNameIdentifier	 Data Resource
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
auth	TokenNameIdentifier	 auth
.	TokenNameDOT	
IResource	TokenNameIdentifier	 I Resource
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
cql3	TokenNameIdentifier	 cql3
.	TokenNameDOT	
operations	TokenNameIdentifier	 operations
.	TokenNameDOT	
*	TokenNameMULTIPLY	
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
cql3	TokenNameIdentifier	 cql3
.	TokenNameDOT	
statements	TokenNameIdentifier	 statements
.	TokenNameDOT	
*	TokenNameMULTIPLY	
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
db	TokenNameIdentifier	 db
.	TokenNameDOT	
marshal	TokenNameIdentifier	 marshal
.	TokenNameDOT	
CollectionType	TokenNameIdentifier	 Collection Type
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
exceptions	TokenNameIdentifier	 exceptions
.	TokenNameDOT	
ConfigurationException	TokenNameIdentifier	 Configuration Exception
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
exceptions	TokenNameIdentifier	 exceptions
.	TokenNameDOT	
InvalidRequestException	TokenNameIdentifier	 Invalid Request Exception
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
exceptions	TokenNameIdentifier	 exceptions
.	TokenNameDOT	
SyntaxException	TokenNameIdentifier	 Syntax Exception
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
apache	TokenNameIdentifier	 apache
.	TokenNameDOT	
cassandra	TokenNameIdentifier	 cassandra
.	TokenNameDOT	
utils	TokenNameIdentifier	 utils
.	TokenNameDOT	
Pair	TokenNameIdentifier	 Pair
;	TokenNameSEMICOLON	
import	TokenNameimport	
org	TokenNameIdentifier	 org
.	TokenNameDOT	
antlr	TokenNameIdentifier	 antlr
.	TokenNameDOT	
runtime	TokenNameIdentifier	 runtime
.	TokenNameDOT	
*	TokenNameMULTIPLY	
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
Stack	TokenNameIdentifier	 Stack
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
List	TokenNameIdentifier	 List
;	TokenNameSEMICOLON	
import	TokenNameimport	
java	TokenNameIdentifier	 java
.	TokenNameDOT	
util	TokenNameIdentifier	 util
.	TokenNameDOT	
ArrayList	TokenNameIdentifier	 Array List
;	TokenNameSEMICOLON	
public	TokenNamepublic	
class	TokenNameclass	
CqlParser	TokenNameIdentifier	 Cql Parser
extends	TokenNameextends	
Parser	TokenNameIdentifier	 Parser
{	TokenNameLBRACE	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
tokenNames	TokenNameIdentifier	 token Names
=	TokenNameEQUAL	
new	TokenNamenew	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
"<invalid>"	TokenNameStringLiteral	<invalid>
,	TokenNameCOMMA	
"<EOR>"	TokenNameStringLiteral	<EOR>
,	TokenNameCOMMA	
"<DOWN>"	TokenNameStringLiteral	<DOWN>
,	TokenNameCOMMA	
"<UP>"	TokenNameStringLiteral	<UP>
,	TokenNameCOMMA	
"K_USE"	TokenNameStringLiteral	K_USE
,	TokenNameCOMMA	
"K_SELECT"	TokenNameStringLiteral	K_SELECT
,	TokenNameCOMMA	
"K_COUNT"	TokenNameStringLiteral	K_COUNT
,	TokenNameCOMMA	
"K_FROM"	TokenNameStringLiteral	K_FROM
,	TokenNameCOMMA	
"K_WHERE"	TokenNameStringLiteral	K_WHERE
,	TokenNameCOMMA	
"K_ORDER"	TokenNameStringLiteral	K_ORDER
,	TokenNameCOMMA	
"K_BY"	TokenNameStringLiteral	K_BY
,	TokenNameCOMMA	
"K_LIMIT"	TokenNameStringLiteral	K_LIMIT
,	TokenNameCOMMA	
"INTEGER"	TokenNameStringLiteral	INTEGER
,	TokenNameCOMMA	
"K_ALLOW"	TokenNameStringLiteral	K_ALLOW
,	TokenNameCOMMA	
"K_FILTERING"	TokenNameStringLiteral	K_FILTERING
,	TokenNameCOMMA	
"K_WRITETIME"	TokenNameStringLiteral	K_WRITETIME
,	TokenNameCOMMA	
"K_TTL"	TokenNameStringLiteral	K_TTL
,	TokenNameCOMMA	
"K_AND"	TokenNameStringLiteral	K_AND
,	TokenNameCOMMA	
"K_ASC"	TokenNameStringLiteral	K_ASC
,	TokenNameCOMMA	
"K_DESC"	TokenNameStringLiteral	K_DESC
,	TokenNameCOMMA	
"K_INSERT"	TokenNameStringLiteral	K_INSERT
,	TokenNameCOMMA	
"K_INTO"	TokenNameStringLiteral	K_INTO
,	TokenNameCOMMA	
"K_VALUES"	TokenNameStringLiteral	K_VALUES
,	TokenNameCOMMA	
"K_USING"	TokenNameStringLiteral	K_USING
,	TokenNameCOMMA	
"K_TIMESTAMP"	TokenNameStringLiteral	K_TIMESTAMP
,	TokenNameCOMMA	
"K_UPDATE"	TokenNameStringLiteral	K_UPDATE
,	TokenNameCOMMA	
"K_SET"	TokenNameStringLiteral	K_SET
,	TokenNameCOMMA	
"K_DELETE"	TokenNameStringLiteral	K_DELETE
,	TokenNameCOMMA	
"K_BEGIN"	TokenNameStringLiteral	K_BEGIN
,	TokenNameCOMMA	
"K_UNLOGGED"	TokenNameStringLiteral	K_UNLOGGED
,	TokenNameCOMMA	
"K_COUNTER"	TokenNameStringLiteral	K_COUNTER
,	TokenNameCOMMA	
"K_BATCH"	TokenNameStringLiteral	K_BATCH
,	TokenNameCOMMA	
"K_APPLY"	TokenNameStringLiteral	K_APPLY
,	TokenNameCOMMA	
"K_CREATE"	TokenNameStringLiteral	K_CREATE
,	TokenNameCOMMA	
"K_KEYSPACE"	TokenNameStringLiteral	K_KEYSPACE
,	TokenNameCOMMA	
"K_WITH"	TokenNameStringLiteral	K_WITH
,	TokenNameCOMMA	
"K_COLUMNFAMILY"	TokenNameStringLiteral	K_COLUMNFAMILY
,	TokenNameCOMMA	
"K_PRIMARY"	TokenNameStringLiteral	K_PRIMARY
,	TokenNameCOMMA	
"K_KEY"	TokenNameStringLiteral	K_KEY
,	TokenNameCOMMA	
"K_COMPACT"	TokenNameStringLiteral	K_COMPACT
,	TokenNameCOMMA	
"K_STORAGE"	TokenNameStringLiteral	K_STORAGE
,	TokenNameCOMMA	
"K_CLUSTERING"	TokenNameStringLiteral	K_CLUSTERING
,	TokenNameCOMMA	
"K_INDEX"	TokenNameStringLiteral	K_INDEX
,	TokenNameCOMMA	
"IDENT"	TokenNameStringLiteral	IDENT
,	TokenNameCOMMA	
"K_ON"	TokenNameStringLiteral	K_ON
,	TokenNameCOMMA	
"K_ALTER"	TokenNameStringLiteral	K_ALTER
,	TokenNameCOMMA	
"K_TYPE"	TokenNameStringLiteral	K_TYPE
,	TokenNameCOMMA	
"K_ADD"	TokenNameStringLiteral	K_ADD
,	TokenNameCOMMA	
"K_RENAME"	TokenNameStringLiteral	K_RENAME
,	TokenNameCOMMA	
"K_TO"	TokenNameStringLiteral	K_TO
,	TokenNameCOMMA	
"K_DROP"	TokenNameStringLiteral	K_DROP
,	TokenNameCOMMA	
"K_TRUNCATE"	TokenNameStringLiteral	K_TRUNCATE
,	TokenNameCOMMA	
"K_GRANT"	TokenNameStringLiteral	K_GRANT
,	TokenNameCOMMA	
"K_REVOKE"	TokenNameStringLiteral	K_REVOKE
,	TokenNameCOMMA	
"K_LIST"	TokenNameStringLiteral	K_LIST
,	TokenNameCOMMA	
"K_OF"	TokenNameStringLiteral	K_OF
,	TokenNameCOMMA	
"K_NORECURSIVE"	TokenNameStringLiteral	K_NORECURSIVE
,	TokenNameCOMMA	
"K_MODIFY"	TokenNameStringLiteral	K_MODIFY
,	TokenNameCOMMA	
"K_AUTHORIZE"	TokenNameStringLiteral	K_AUTHORIZE
,	TokenNameCOMMA	
"K_ALL"	TokenNameStringLiteral	K_ALL
,	TokenNameCOMMA	
"K_PERMISSIONS"	TokenNameStringLiteral	K_PERMISSIONS
,	TokenNameCOMMA	
"K_PERMISSION"	TokenNameStringLiteral	K_PERMISSION
,	TokenNameCOMMA	
"K_KEYSPACES"	TokenNameStringLiteral	K_KEYSPACES
,	TokenNameCOMMA	
"K_USER"	TokenNameStringLiteral	K_USER
,	TokenNameCOMMA	
"K_SUPERUSER"	TokenNameStringLiteral	K_SUPERUSER
,	TokenNameCOMMA	
"K_NOSUPERUSER"	TokenNameStringLiteral	K_NOSUPERUSER
,	TokenNameCOMMA	
"K_USERS"	TokenNameStringLiteral	K_USERS
,	TokenNameCOMMA	
"K_PASSWORD"	TokenNameStringLiteral	K_PASSWORD
,	TokenNameCOMMA	
"STRING_LITERAL"	TokenNameStringLiteral	STRING_LITERAL
,	TokenNameCOMMA	
"QUOTED_NAME"	TokenNameStringLiteral	QUOTED_NAME
,	TokenNameCOMMA	
"QMARK"	TokenNameStringLiteral	QMARK
,	TokenNameCOMMA	
"UUID"	TokenNameStringLiteral	UUID
,	TokenNameCOMMA	
"FLOAT"	TokenNameStringLiteral	FLOAT
,	TokenNameCOMMA	
"K_TRUE"	TokenNameStringLiteral	K_TRUE
,	TokenNameCOMMA	
"K_FALSE"	TokenNameStringLiteral	K_FALSE
,	TokenNameCOMMA	
"K_TOKEN"	TokenNameStringLiteral	K_TOKEN
,	TokenNameCOMMA	
"K_IN"	TokenNameStringLiteral	K_IN
,	TokenNameCOMMA	
"K_ASCII"	TokenNameStringLiteral	K_ASCII
,	TokenNameCOMMA	
"K_BIGINT"	TokenNameStringLiteral	K_BIGINT
,	TokenNameCOMMA	
"K_BLOB"	TokenNameStringLiteral	K_BLOB
,	TokenNameCOMMA	
"K_BOOLEAN"	TokenNameStringLiteral	K_BOOLEAN
,	TokenNameCOMMA	
"K_DECIMAL"	TokenNameStringLiteral	K_DECIMAL
,	TokenNameCOMMA	
"K_DOUBLE"	TokenNameStringLiteral	K_DOUBLE
,	TokenNameCOMMA	
"K_FLOAT"	TokenNameStringLiteral	K_FLOAT
,	TokenNameCOMMA	
"K_INET"	TokenNameStringLiteral	K_INET
,	TokenNameCOMMA	
"K_INT"	TokenNameStringLiteral	K_INT
,	TokenNameCOMMA	
"K_TEXT"	TokenNameStringLiteral	K_TEXT
,	TokenNameCOMMA	
"K_UUID"	TokenNameStringLiteral	K_UUID
,	TokenNameCOMMA	
"K_VARCHAR"	TokenNameStringLiteral	K_VARCHAR
,	TokenNameCOMMA	
"K_VARINT"	TokenNameStringLiteral	K_VARINT
,	TokenNameCOMMA	
"K_TIMEUUID"	TokenNameStringLiteral	K_TIMEUUID
,	TokenNameCOMMA	
"K_MAP"	TokenNameStringLiteral	K_MAP
,	TokenNameCOMMA	
"S"	TokenNameStringLiteral	S
,	TokenNameCOMMA	
"E"	TokenNameStringLiteral	E
,	TokenNameCOMMA	
"L"	TokenNameStringLiteral	L
,	TokenNameCOMMA	
"C"	TokenNameStringLiteral	C
,	TokenNameCOMMA	
"T"	TokenNameStringLiteral	T
,	TokenNameCOMMA	
"F"	TokenNameStringLiteral	F
,	TokenNameCOMMA	
"R"	TokenNameStringLiteral	R
,	TokenNameCOMMA	
"O"	TokenNameStringLiteral	O
,	TokenNameCOMMA	
"M"	TokenNameStringLiteral	M
,	TokenNameCOMMA	
"W"	TokenNameStringLiteral	W
,	TokenNameCOMMA	
"H"	TokenNameStringLiteral	H
,	TokenNameCOMMA	
"A"	TokenNameStringLiteral	A
,	TokenNameCOMMA	
"N"	TokenNameStringLiteral	N
,	TokenNameCOMMA	
"D"	TokenNameStringLiteral	D
,	TokenNameCOMMA	
"K"	TokenNameStringLiteral	K
,	TokenNameCOMMA	
"Y"	TokenNameStringLiteral	Y
,	TokenNameCOMMA	
"I"	TokenNameStringLiteral	I
,	TokenNameCOMMA	
"U"	TokenNameStringLiteral	U
,	TokenNameCOMMA	
"P"	TokenNameStringLiteral	P
,	TokenNameCOMMA	
"G"	TokenNameStringLiteral	G
,	TokenNameCOMMA	
"B"	TokenNameStringLiteral	B
,	TokenNameCOMMA	
"X"	TokenNameStringLiteral	X
,	TokenNameCOMMA	
"V"	TokenNameStringLiteral	V
,	TokenNameCOMMA	
"Z"	TokenNameStringLiteral	Z
,	TokenNameCOMMA	
"J"	TokenNameStringLiteral	J
,	TokenNameCOMMA	
"Q"	TokenNameStringLiteral	Q
,	TokenNameCOMMA	
"DIGIT"	TokenNameStringLiteral	DIGIT
,	TokenNameCOMMA	
"LETTER"	TokenNameStringLiteral	LETTER
,	TokenNameCOMMA	
"HEX"	TokenNameStringLiteral	HEX
,	TokenNameCOMMA	
"WS"	TokenNameStringLiteral	WS
,	TokenNameCOMMA	
"COMMENT"	TokenNameStringLiteral	COMMENT
,	TokenNameCOMMA	
"MULTILINE_COMMENT"	TokenNameStringLiteral	MULTILINE_COMMENT
,	TokenNameCOMMA	
"';'"	TokenNameStringLiteral	';'
,	TokenNameCOMMA	
"'('"	TokenNameStringLiteral	'('
,	TokenNameCOMMA	
"')'"	TokenNameStringLiteral	')'
,	TokenNameCOMMA	
"','"	TokenNameStringLiteral	','
,	TokenNameCOMMA	
"'\*'"	TokenNameStringLiteral	'\*'
,	TokenNameCOMMA	
"'['"	TokenNameStringLiteral	'['
,	TokenNameCOMMA	
"']'"	TokenNameStringLiteral	']'
,	TokenNameCOMMA	
"'.'"	TokenNameStringLiteral	'.'
,	TokenNameCOMMA	
"'{'"	TokenNameStringLiteral	'{'
,	TokenNameCOMMA	
"'}'"	TokenNameStringLiteral	'}'
,	TokenNameCOMMA	
"':'"	TokenNameStringLiteral	':'
,	TokenNameCOMMA	
"'='"	TokenNameStringLiteral	'='
,	TokenNameCOMMA	
"'+'"	TokenNameStringLiteral	'+'
,	TokenNameCOMMA	
"'-'"	TokenNameStringLiteral	'-'
,	TokenNameCOMMA	
"'<'"	TokenNameStringLiteral	'<'
,	TokenNameCOMMA	
"'<='"	TokenNameStringLiteral	'<='
,	TokenNameCOMMA	
"'>='"	TokenNameStringLiteral	'>='
,	TokenNameCOMMA	
"'>'"	TokenNameStringLiteral	'>'
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_FALSE	TokenNameIdentifier	 K  FALSE
=	TokenNameEQUAL	
74	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TRUE	TokenNameIdentifier	 K  TRUE
=	TokenNameEQUAL	
73	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
=	TokenNameEQUAL	
60	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
LETTER	TokenNameIdentifier	 LETTER
=	TokenNameEQUAL	
119	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_INT	TokenNameIdentifier	 K  INT
=	TokenNameEQUAL	
85	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
=	TokenNameEQUAL	
61	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_CREATE	TokenNameIdentifier	 K  CREATE
=	TokenNameEQUAL	
33	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
=	TokenNameEQUAL	
41	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
=	TokenNameEQUAL	
15	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
EOF	TokenNameIdentifier	 EOF
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_PRIMARY	TokenNameIdentifier	 K  PRIMARY
=	TokenNameEQUAL	
37	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_AUTHORIZE	TokenNameIdentifier	 K  AUTHORIZE
=	TokenNameEQUAL	
58	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_VALUES	TokenNameIdentifier	 K  VALUES
=	TokenNameEQUAL	
22	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_USE	TokenNameIdentifier	 K  USE
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
=	TokenNameEQUAL	
68	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_GRANT	TokenNameIdentifier	 K  GRANT
=	TokenNameEQUAL	
52	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ON	TokenNameIdentifier	 K  ON
=	TokenNameEQUAL	
44	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_USING	TokenNameIdentifier	 K  USING
=	TokenNameEQUAL	
23	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ADD	TokenNameIdentifier	 K  ADD
=	TokenNameEQUAL	
47	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ASC	TokenNameIdentifier	 K  ASC
=	TokenNameEQUAL	
18	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_KEY	TokenNameIdentifier	 K  KEY
=	TokenNameEQUAL	
38	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
COMMENT	TokenNameIdentifier	 COMMENT
=	TokenNameEQUAL	
122	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TRUNCATE	TokenNameIdentifier	 K  TRUNCATE
=	TokenNameEQUAL	
51	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ORDER	TokenNameIdentifier	 K  ORDER
=	TokenNameEQUAL	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_OF	TokenNameIdentifier	 K  OF
=	TokenNameEQUAL	
55	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ALL	TokenNameIdentifier	 K  ALL
=	TokenNameEQUAL	
59	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
D	TokenNameIdentifier	 D
=	TokenNameEQUAL	
105	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__139	TokenNameIdentifier	 T  139
=	TokenNameEQUAL	
139	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
E	TokenNameIdentifier	 E
=	TokenNameEQUAL	
93	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__138	TokenNameIdentifier	 T  138
=	TokenNameEQUAL	
138	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
F	TokenNameIdentifier	 F
=	TokenNameEQUAL	
97	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__137	TokenNameIdentifier	 T  137
=	TokenNameEQUAL	
137	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
G	TokenNameIdentifier	 G
=	TokenNameEQUAL	
111	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__136	TokenNameIdentifier	 T  136
=	TokenNameEQUAL	
136	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_COUNT	TokenNameIdentifier	 K  COUNT
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_KEYSPACE	TokenNameIdentifier	 K  KEYSPACE
=	TokenNameEQUAL	
34	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TYPE	TokenNameIdentifier	 K  TYPE
=	TokenNameEQUAL	
46	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
A	TokenNameIdentifier	 A
=	TokenNameEQUAL	
103	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
B	TokenNameIdentifier	 B
=	TokenNameEQUAL	
112	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
C	TokenNameIdentifier	 C
=	TokenNameEQUAL	
95	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
L	TokenNameIdentifier	 L
=	TokenNameEQUAL	
94	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
M	TokenNameIdentifier	 M
=	TokenNameEQUAL	
100	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
N	TokenNameIdentifier	 N
=	TokenNameEQUAL	
104	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
O	TokenNameIdentifier	 O
=	TokenNameEQUAL	
99	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
H	TokenNameIdentifier	 H
=	TokenNameEQUAL	
102	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
I	TokenNameIdentifier	 I
=	TokenNameEQUAL	
108	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
J	TokenNameIdentifier	 J
=	TokenNameEQUAL	
116	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_UPDATE	TokenNameIdentifier	 K  UPDATE
=	TokenNameEQUAL	
25	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K	TokenNameIdentifier	 K
=	TokenNameEQUAL	
106	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
=	TokenNameEQUAL	
14	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
U	TokenNameIdentifier	 U
=	TokenNameEQUAL	
109	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T	TokenNameIdentifier	 T
=	TokenNameEQUAL	
96	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
W	TokenNameIdentifier	 W
=	TokenNameEQUAL	
101	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TEXT	TokenNameIdentifier	 K  TEXT
=	TokenNameEQUAL	
86	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
V	TokenNameIdentifier	 V
=	TokenNameEQUAL	
114	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Q	TokenNameIdentifier	 Q
=	TokenNameEQUAL	
117	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
P	TokenNameIdentifier	 P
=	TokenNameEQUAL	
110	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
=	TokenNameEQUAL	
39	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
S	TokenNameIdentifier	 S
=	TokenNameEQUAL	
92	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
R	TokenNameIdentifier	 R
=	TokenNameEQUAL	
98	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__141	TokenNameIdentifier	 T  141
=	TokenNameEQUAL	
141	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TTL	TokenNameIdentifier	 K  TTL
=	TokenNameEQUAL	
16	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__140	TokenNameIdentifier	 T  140
=	TokenNameEQUAL	
140	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Y	TokenNameIdentifier	 Y
=	TokenNameEQUAL	
107	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
X	TokenNameIdentifier	 X
=	TokenNameEQUAL	
113	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
Z	TokenNameIdentifier	 Z
=	TokenNameEQUAL	
115	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__126	TokenNameIdentifier	 T  126
=	TokenNameEQUAL	
126	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__125	TokenNameIdentifier	 T  125
=	TokenNameEQUAL	
125	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_INDEX	TokenNameIdentifier	 K  INDEX
=	TokenNameEQUAL	
42	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__128	TokenNameIdentifier	 T  128
=	TokenNameEQUAL	
128	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_INSERT	TokenNameIdentifier	 K  INSERT
=	TokenNameEQUAL	
20	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__127	TokenNameIdentifier	 T  127
=	TokenNameEQUAL	
127	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
WS	TokenNameIdentifier	 WS
=	TokenNameEQUAL	
121	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__129	TokenNameIdentifier	 T  129
=	TokenNameEQUAL	
129	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_RENAME	TokenNameIdentifier	 K  RENAME
=	TokenNameEQUAL	
48	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_APPLY	TokenNameIdentifier	 K  APPLY
=	TokenNameEQUAL	
32	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_INET	TokenNameIdentifier	 K  INET
=	TokenNameEQUAL	
84	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
=	TokenNameEQUAL	
40	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
=	TokenNameEQUAL	
24	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_AND	TokenNameIdentifier	 K  AND
=	TokenNameEQUAL	
17	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_DESC	TokenNameIdentifier	 K  DESC
=	TokenNameEQUAL	
19	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__130	TokenNameIdentifier	 T  130
=	TokenNameEQUAL	
130	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TOKEN	TokenNameIdentifier	 K  TOKEN
=	TokenNameEQUAL	
75	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__131	TokenNameIdentifier	 T  131
=	TokenNameEQUAL	
131	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
QMARK	TokenNameIdentifier	 QMARK
=	TokenNameEQUAL	
70	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__132	TokenNameIdentifier	 T  132
=	TokenNameEQUAL	
132	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__133	TokenNameIdentifier	 T  133
=	TokenNameEQUAL	
133	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__134	TokenNameIdentifier	 T  134
=	TokenNameEQUAL	
134	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_UUID	TokenNameIdentifier	 K  UUID
=	TokenNameEQUAL	
87	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__135	TokenNameIdentifier	 T  135
=	TokenNameEQUAL	
135	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_BATCH	TokenNameIdentifier	 K  BATCH
=	TokenNameEQUAL	
31	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ASCII	TokenNameIdentifier	 K  ASCII
=	TokenNameEQUAL	
77	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
UUID	TokenNameIdentifier	 UUID
=	TokenNameEQUAL	
71	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_LIST	TokenNameIdentifier	 K  LIST
=	TokenNameEQUAL	
54	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_DELETE	TokenNameIdentifier	 K  DELETE
=	TokenNameEQUAL	
27	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
T__124	TokenNameIdentifier	 T  124
=	TokenNameEQUAL	
124	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TO	TokenNameIdentifier	 K  TO
=	TokenNameEQUAL	
49	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_BY	TokenNameIdentifier	 K  BY
=	TokenNameEQUAL	
10	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
FLOAT	TokenNameIdentifier	 FLOAT
=	TokenNameEQUAL	
72	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_VARINT	TokenNameIdentifier	 K  VARINT
=	TokenNameEQUAL	
89	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
=	TokenNameEQUAL	
83	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
=	TokenNameEQUAL	
64	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
=	TokenNameEQUAL	
82	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_SELECT	TokenNameIdentifier	 K  SELECT
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_LIMIT	TokenNameIdentifier	 K  LIMIT
=	TokenNameEQUAL	
11	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
=	TokenNameEQUAL	
80	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ALTER	TokenNameIdentifier	 K  ALTER
=	TokenNameEQUAL	
45	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_SET	TokenNameIdentifier	 K  SET
=	TokenNameEQUAL	
26	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_WHERE	TokenNameIdentifier	 K  WHERE
=	TokenNameEQUAL	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
=	TokenNameEQUAL	
69	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
MULTILINE_COMMENT	TokenNameIdentifier	 MULTILINE  COMMENT
=	TokenNameEQUAL	
123	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_BLOB	TokenNameIdentifier	 K  BLOB
=	TokenNameEQUAL	
79	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_UNLOGGED	TokenNameIdentifier	 K  UNLOGGED
=	TokenNameEQUAL	
29	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
HEX	TokenNameIdentifier	 HEX
=	TokenNameEQUAL	
120	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_INTO	TokenNameIdentifier	 K  INTO
=	TokenNameEQUAL	
21	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
=	TokenNameEQUAL	
67	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_REVOKE	TokenNameIdentifier	 K  REVOKE
=	TokenNameEQUAL	
53	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_ALLOW	TokenNameIdentifier	 K  ALLOW
=	TokenNameEQUAL	
13	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
=	TokenNameEQUAL	
88	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
IDENT	TokenNameIdentifier	 IDENT
=	TokenNameEQUAL	
43	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
DIGIT	TokenNameIdentifier	 DIGIT
=	TokenNameEQUAL	
118	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_USERS	TokenNameIdentifier	 K  USERS
=	TokenNameEQUAL	
66	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_BEGIN	TokenNameIdentifier	 K  BEGIN
=	TokenNameEQUAL	
28	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
INTEGER	TokenNameIdentifier	 INTEGER
=	TokenNameEQUAL	
12	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
=	TokenNameEQUAL	
62	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
=	TokenNameEQUAL	
30	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
=	TokenNameEQUAL	
81	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_WITH	TokenNameIdentifier	 K  WITH
=	TokenNameEQUAL	
35	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_IN	TokenNameIdentifier	 K  IN
=	TokenNameEQUAL	
76	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_NORECURSIVE	TokenNameIdentifier	 K  NORECURSIVE
=	TokenNameEQUAL	
56	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_MAP	TokenNameIdentifier	 K  MAP
=	TokenNameEQUAL	
91	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_FROM	TokenNameIdentifier	 K  FROM
=	TokenNameEQUAL	
7	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
=	TokenNameEQUAL	
36	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_MODIFY	TokenNameIdentifier	 K  MODIFY
=	TokenNameEQUAL	
57	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_DROP	TokenNameIdentifier	 K  DROP
=	TokenNameEQUAL	
50	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
=	TokenNameEQUAL	
65	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
=	TokenNameEQUAL	
78	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
=	TokenNameEQUAL	
90	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
int	TokenNameint	
K_USER	TokenNameIdentifier	 K  USER
=	TokenNameEQUAL	
63	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
// delegates 	TokenNameCOMMENT_LINE	delegates 
// delegators 	TokenNameCOMMENT_LINE	delegators 
public	TokenNamepublic	
CqlParser	TokenNameIdentifier	 Cql Parser
(	TokenNameLPAREN	
TokenStream	TokenNameIdentifier	 Token Stream
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
new	TokenNamenew	
RecognizerSharedState	TokenNameIdentifier	 Recognizer Shared State
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
CqlParser	TokenNameIdentifier	 Cql Parser
(	TokenNameLPAREN	
TokenStream	TokenNameIdentifier	 Token Stream
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
RecognizerSharedState	TokenNameIdentifier	 Recognizer Shared State
state	TokenNameIdentifier	 state
)	TokenNameRPAREN	
{	TokenNameLBRACE	
super	TokenNamesuper	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
state	TokenNameIdentifier	 state
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
getTokenNames	TokenNameIdentifier	 get Token Names
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
tokenNames	TokenNameIdentifier	 token Names
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getGrammarFileName	TokenNameIdentifier	 get Grammar File Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g"	TokenNameStringLiteral	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
private	TokenNameprivate	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
recognitionErrors	TokenNameIdentifier	 recognition Errors
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
private	TokenNameprivate	
int	TokenNameint	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
=	TokenNameEQUAL	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
void	TokenNamevoid	
displayRecognitionError	TokenNameIdentifier	 display Recognition Error
(	TokenNameLPAREN	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
tokenNames	TokenNameIdentifier	 token Names
,	TokenNameCOMMA	
RecognitionException	TokenNameIdentifier	 Recognition Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
String	TokenNameIdentifier	 String
hdr	TokenNameIdentifier	 hdr
=	TokenNameEQUAL	
getErrorHeader	TokenNameIdentifier	 get Error Header
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
msg	TokenNameIdentifier	 msg
=	TokenNameEQUAL	
getErrorMessage	TokenNameIdentifier	 get Error Message
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
,	TokenNameCOMMA	
tokenNames	TokenNameIdentifier	 token Names
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recognitionErrors	TokenNameIdentifier	 recognition Errors
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
hdr	TokenNameIdentifier	 hdr
+	TokenNamePLUS	
" "	TokenNameStringLiteral	 
+	TokenNamePLUS	
msg	TokenNameIdentifier	 msg
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
String	TokenNameIdentifier	 String
msg	TokenNameIdentifier	 msg
)	TokenNameRPAREN	
{	TokenNameLBRACE	
recognitionErrors	TokenNameIdentifier	 recognition Errors
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
msg	TokenNameIdentifier	 msg
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
getRecognitionErrors	TokenNameIdentifier	 get Recognition Errors
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
recognitionErrors	TokenNameIdentifier	 recognition Errors
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
void	TokenNamevoid	
throwLastRecognitionError	TokenNameIdentifier	 throw Last Recognition Error
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
SyntaxException	TokenNameIdentifier	 Syntax Exception
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
recognitionErrors	TokenNameIdentifier	 recognition Errors
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
throw	TokenNamethrow	
new	TokenNamenew	
SyntaxException	TokenNameIdentifier	 Syntax Exception
(	TokenNameLPAREN	
recognitionErrors	TokenNameIdentifier	 recognition Errors
.	TokenNameDOT	
get	TokenNameIdentifier	 get
(	TokenNameLPAREN	
(	TokenNameLPAREN	
recognitionErrors	TokenNameIdentifier	 recognition Errors
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// used by UPDATE of the counter columns to validate if '-' was supplied by user 	TokenNameCOMMENT_LINE	used by UPDATE of the counter columns to validate if '-' was supplied by user 
public	TokenNamepublic	
void	TokenNamevoid	
validateMinusSupplied	TokenNameIdentifier	 validate Minus Supplied
(	TokenNameLPAREN	
Object	TokenNameIdentifier	 Object
op	TokenNameIdentifier	 op
,	TokenNameCOMMA	
final	TokenNamefinal	
Term	TokenNameIdentifier	 Term
value	TokenNameIdentifier	 value
,	TokenNameCOMMA	
IntStream	TokenNameIdentifier	 Int Stream
stream	TokenNameIdentifier	 stream
)	TokenNameRPAREN	
throws	TokenNamethrows	
MissingTokenException	TokenNameIdentifier	 Missing Token Exception
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
op	TokenNameIdentifier	 op
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
&&	TokenNameAND_AND	
Long	TokenNameIdentifier	 Long
.	TokenNameDOT	
parseLong	TokenNameIdentifier	 parse Long
(	TokenNameLPAREN	
value	TokenNameIdentifier	 value
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
>	TokenNameGREATER	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
throw	TokenNamethrow	
new	TokenNamenew	
MissingTokenException	TokenNameIdentifier	 Missing Token Exception
(	TokenNameLPAREN	
102	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
stream	TokenNameIdentifier	 stream
,	TokenNameCOMMA	
value	TokenNameIdentifier	 value
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
convertMap	TokenNameIdentifier	 convert Map
(	TokenNameLPAREN	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
terms	TokenNameIdentifier	 terms
)	TokenNameRPAREN	
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
terms	TokenNameIdentifier	 terms
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
||	TokenNameOR_OR	
terms	TokenNameIdentifier	 terms
.	TokenNameDOT	
isEmpty	TokenNameIdentifier	 is Empty
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
return	TokenNamereturn	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
emptyMap	TokenNameIdentifier	 empty Map
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
new	TokenNamenew	
HashMap	TokenNameIdentifier	 Hash Map
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
String	TokenNameIdentifier	 String
>	TokenNameGREATER	
(	TokenNameLPAREN	
terms	TokenNameIdentifier	 terms
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
Map	TokenNameIdentifier	 Map
.	TokenNameDOT	
Entry	TokenNameIdentifier	 Entry
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
entry	TokenNameIdentifier	 entry
:	TokenNameCOLON	
terms	TokenNameIdentifier	 terms
.	TokenNameDOT	
entrySet	TokenNameIdentifier	 entry Set
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
// Because the parser tries to be smart and recover on error (to 	TokenNameCOMMENT_LINE	Because the parser tries to be smart and recover on error (to 
// allow displaying more than one error I suppose), we have null 	TokenNameCOMMENT_LINE	allow displaying more than one error I suppose), we have null 
// entries in there. Just skip those, a proper error will be thrown in the end. 	TokenNameCOMMENT_LINE	entries in there. Just skip those, a proper error will be thrown in the end. 
if	TokenNameif	
(	TokenNameLPAREN	
entry	TokenNameIdentifier	 entry
.	TokenNameDOT	
getKey	TokenNameIdentifier	 get Key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
||	TokenNameOR_OR	
entry	TokenNameIdentifier	 entry
.	TokenNameDOT	
getValue	TokenNameIdentifier	 get Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
res	TokenNameIdentifier	 res
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
entry	TokenNameIdentifier	 entry
.	TokenNameDOT	
getKey	TokenNameIdentifier	 get Key
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
entry	TokenNameIdentifier	 entry
.	TokenNameDOT	
getValue	TokenNameIdentifier	 get Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
return	TokenNamereturn	
res	TokenNameIdentifier	 res
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR start "query" 	TokenNameCOMMENT_LINE	$ANTLR start "query" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:150:1: query returns [ParsedStatement stmnt] : st= cqlStatement ( ';' )* EOF ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:150:1: query returns [ParsedStatement stmnt] : st= cqlStatement ( ';' )* EOF ; 
public	TokenNamepublic	
final	TokenNamefinal	
ParsedStatement	TokenNameIdentifier	 Parsed Statement
query	TokenNameIdentifier	 query
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ParsedStatement	TokenNameIdentifier	 Parsed Statement
stmnt	TokenNameIdentifier	 stmnt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedStatement	TokenNameIdentifier	 Parsed Statement
st	TokenNameIdentifier	 st
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:5: (st= cqlStatement ( ';' )* EOF ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:5: (st= cqlStatement ( ';' )* EOF ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:7: st= cqlStatement ( ';' )* EOF 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:7: st= cqlStatement ( ';' )* EOF 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cqlStatement_in_query72	TokenNameIdentifier	 FOLLOW cql Statement in query72
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st	TokenNameIdentifier	 st
=	TokenNameEQUAL	
cqlStatement	TokenNameIdentifier	 cql Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:23: ( ';' )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:23: ( ';' )* 
loop1	TokenNameIdentifier	 loop1
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt1	TokenNameIdentifier	 alt1
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA1_0	TokenNameIdentifier	 L A1 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA1_0	TokenNameIdentifier	 L A1 0
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt1	TokenNameIdentifier	 alt1
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt1	TokenNameIdentifier	 alt1
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:24: ';' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:153:24: ';' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
124	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_124_in_query75	TokenNameIdentifier	 FOLLOW 124 in query75
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop1	TokenNameIdentifier	 loop1
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
EOF	TokenNameIdentifier	 EOF
,	TokenNameCOMMA	
FOLLOW_EOF_in_query79	TokenNameIdentifier	 FOLLOW  EOF in query79
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
stmnt	TokenNameIdentifier	 stmnt
=	TokenNameEQUAL	
st	TokenNameIdentifier	 st
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmnt	TokenNameIdentifier	 stmnt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "query" 	TokenNameCOMMENT_LINE	$ANTLR end "query" 
// $ANTLR start "cqlStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "cqlStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:156:1: cqlStatement returns [ParsedStatement stmt] : (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:156:1: cqlStatement returns [ParsedStatement stmt] : (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement ); 
public	TokenNamepublic	
final	TokenNamefinal	
ParsedStatement	TokenNameIdentifier	 Parsed Statement
cqlStatement	TokenNameIdentifier	 cql Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ParsedStatement	TokenNameIdentifier	 Parsed Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
SelectStatement	TokenNameIdentifier	 Select Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
st1	TokenNameIdentifier	 st1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UpdateStatement	TokenNameIdentifier	 Update Statement
st2	TokenNameIdentifier	 st2
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UpdateStatement	TokenNameIdentifier	 Update Statement
st3	TokenNameIdentifier	 st3
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
BatchStatement	TokenNameIdentifier	 Batch Statement
st4	TokenNameIdentifier	 st4
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DeleteStatement	TokenNameIdentifier	 Delete Statement
st5	TokenNameIdentifier	 st5
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UseStatement	TokenNameIdentifier	 Use Statement
st6	TokenNameIdentifier	 st6
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
TruncateStatement	TokenNameIdentifier	 Truncate Statement
st7	TokenNameIdentifier	 st7
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CreateKeyspaceStatement	TokenNameIdentifier	 Create Keyspace Statement
st8	TokenNameIdentifier	 st8
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
st9	TokenNameIdentifier	 st9
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CreateIndexStatement	TokenNameIdentifier	 Create Index Statement
st10	TokenNameIdentifier	 st10
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DropKeyspaceStatement	TokenNameIdentifier	 Drop Keyspace Statement
st11	TokenNameIdentifier	 st11
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DropColumnFamilyStatement	TokenNameIdentifier	 Drop Column Family Statement
st12	TokenNameIdentifier	 st12
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DropIndexStatement	TokenNameIdentifier	 Drop Index Statement
st13	TokenNameIdentifier	 st13
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
st14	TokenNameIdentifier	 st14
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
AlterKeyspaceStatement	TokenNameIdentifier	 Alter Keyspace Statement
st15	TokenNameIdentifier	 st15
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
GrantStatement	TokenNameIdentifier	 Grant Statement
st16	TokenNameIdentifier	 st16
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
RevokeStatement	TokenNameIdentifier	 Revoke Statement
st17	TokenNameIdentifier	 st17
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ListPermissionsStatement	TokenNameIdentifier	 List Permissions Statement
st18	TokenNameIdentifier	 st18
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CreateUserStatement	TokenNameIdentifier	 Create User Statement
st19	TokenNameIdentifier	 st19
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
AlterUserStatement	TokenNameIdentifier	 Alter User Statement
st20	TokenNameIdentifier	 st20
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DropUserStatement	TokenNameIdentifier	 Drop User Statement
st21	TokenNameIdentifier	 st21
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ListUsersStatement	TokenNameIdentifier	 List Users Statement
st22	TokenNameIdentifier	 st22
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:158:5: (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:158:5: (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement ) 
int	TokenNameint	
alt2	TokenNameIdentifier	 alt2
=	TokenNameEQUAL	
22	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt2	TokenNameIdentifier	 alt2
=	TokenNameEQUAL	
dfa2	TokenNameIdentifier	 dfa2
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt2	TokenNameIdentifier	 alt2
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:158:7: st1= selectStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:158:7: st1= selectStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_selectStatement_in_cqlStatement113	TokenNameIdentifier	 FOLLOW select Statement in cql Statement113
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st1	TokenNameIdentifier	 st1
=	TokenNameEQUAL	
selectStatement	TokenNameIdentifier	 select Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st1	TokenNameIdentifier	 st1
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:159:7: st2= insertStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:159:7: st2= insertStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_insertStatement_in_cqlStatement138	TokenNameIdentifier	 FOLLOW insert Statement in cql Statement138
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st2	TokenNameIdentifier	 st2
=	TokenNameEQUAL	
insertStatement	TokenNameIdentifier	 insert Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st2	TokenNameIdentifier	 st2
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:160:7: st3= updateStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:160:7: st3= updateStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_updateStatement_in_cqlStatement163	TokenNameIdentifier	 FOLLOW update Statement in cql Statement163
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st3	TokenNameIdentifier	 st3
=	TokenNameEQUAL	
updateStatement	TokenNameIdentifier	 update Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st3	TokenNameIdentifier	 st3
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:161:7: st4= batchStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:161:7: st4= batchStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_batchStatement_in_cqlStatement188	TokenNameIdentifier	 FOLLOW batch Statement in cql Statement188
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st4	TokenNameIdentifier	 st4
=	TokenNameEQUAL	
batchStatement	TokenNameIdentifier	 batch Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st4	TokenNameIdentifier	 st4
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:162:7: st5= deleteStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:162:7: st5= deleteStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_deleteStatement_in_cqlStatement214	TokenNameIdentifier	 FOLLOW delete Statement in cql Statement214
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st5	TokenNameIdentifier	 st5
=	TokenNameEQUAL	
deleteStatement	TokenNameIdentifier	 delete Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st5	TokenNameIdentifier	 st5
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
6	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:163:7: st6= useStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:163:7: st6= useStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_useStatement_in_cqlStatement239	TokenNameIdentifier	 FOLLOW use Statement in cql Statement239
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st6	TokenNameIdentifier	 st6
=	TokenNameEQUAL	
useStatement	TokenNameIdentifier	 use Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st6	TokenNameIdentifier	 st6
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
7	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:164:7: st7= truncateStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:164:7: st7= truncateStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_truncateStatement_in_cqlStatement267	TokenNameIdentifier	 FOLLOW truncate Statement in cql Statement267
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st7	TokenNameIdentifier	 st7
=	TokenNameEQUAL	
truncateStatement	TokenNameIdentifier	 truncate Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st7	TokenNameIdentifier	 st7
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
8	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:165:7: st8= createKeyspaceStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:165:7: st8= createKeyspaceStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_createKeyspaceStatement_in_cqlStatement290	TokenNameIdentifier	 FOLLOW create Keyspace Statement in cql Statement290
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st8	TokenNameIdentifier	 st8
=	TokenNameEQUAL	
createKeyspaceStatement	TokenNameIdentifier	 create Keyspace Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st8	TokenNameIdentifier	 st8
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
9	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:166:7: st9= createColumnFamilyStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:166:7: st9= createColumnFamilyStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_createColumnFamilyStatement_in_cqlStatement307	TokenNameIdentifier	 FOLLOW create Column Family Statement in cql Statement307
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st9	TokenNameIdentifier	 st9
=	TokenNameEQUAL	
createColumnFamilyStatement	TokenNameIdentifier	 create Column Family Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st9	TokenNameIdentifier	 st9
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
10	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:167:7: st10= createIndexStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:167:7: st10= createIndexStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_createIndexStatement_in_cqlStatement319	TokenNameIdentifier	 FOLLOW create Index Statement in cql Statement319
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st10	TokenNameIdentifier	 st10
=	TokenNameEQUAL	
createIndexStatement	TokenNameIdentifier	 create Index Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st10	TokenNameIdentifier	 st10
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
11	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:168:7: st11= dropKeyspaceStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:168:7: st11= dropKeyspaceStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_dropKeyspaceStatement_in_cqlStatement338	TokenNameIdentifier	 FOLLOW drop Keyspace Statement in cql Statement338
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st11	TokenNameIdentifier	 st11
=	TokenNameEQUAL	
dropKeyspaceStatement	TokenNameIdentifier	 drop Keyspace Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st11	TokenNameIdentifier	 st11
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
12	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:169:7: st12= dropColumnFamilyStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:169:7: st12= dropColumnFamilyStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_dropColumnFamilyStatement_in_cqlStatement356	TokenNameIdentifier	 FOLLOW drop Column Family Statement in cql Statement356
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st12	TokenNameIdentifier	 st12
=	TokenNameEQUAL	
dropColumnFamilyStatement	TokenNameIdentifier	 drop Column Family Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st12	TokenNameIdentifier	 st12
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
13	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:170:7: st13= dropIndexStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:170:7: st13= dropIndexStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_dropIndexStatement_in_cqlStatement370	TokenNameIdentifier	 FOLLOW drop Index Statement in cql Statement370
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st13	TokenNameIdentifier	 st13
=	TokenNameEQUAL	
dropIndexStatement	TokenNameIdentifier	 drop Index Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st13	TokenNameIdentifier	 st13
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
14	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:171:7: st14= alterTableStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:171:7: st14= alterTableStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_alterTableStatement_in_cqlStatement391	TokenNameIdentifier	 FOLLOW alter Table Statement in cql Statement391
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st14	TokenNameIdentifier	 st14
=	TokenNameEQUAL	
alterTableStatement	TokenNameIdentifier	 alter Table Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st14	TokenNameIdentifier	 st14
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
15	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:172:7: st15= alterKeyspaceStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:172:7: st15= alterKeyspaceStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_alterKeyspaceStatement_in_cqlStatement411	TokenNameIdentifier	 FOLLOW alter Keyspace Statement in cql Statement411
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st15	TokenNameIdentifier	 st15
=	TokenNameEQUAL	
alterKeyspaceStatement	TokenNameIdentifier	 alter Keyspace Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st15	TokenNameIdentifier	 st15
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
16	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:173:7: st16= grantStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:173:7: st16= grantStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_grantStatement_in_cqlStatement428	TokenNameIdentifier	 FOLLOW grant Statement in cql Statement428
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st16	TokenNameIdentifier	 st16
=	TokenNameEQUAL	
grantStatement	TokenNameIdentifier	 grant Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st16	TokenNameIdentifier	 st16
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
17	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:174:7: st17= revokeStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:174:7: st17= revokeStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_revokeStatement_in_cqlStatement453	TokenNameIdentifier	 FOLLOW revoke Statement in cql Statement453
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st17	TokenNameIdentifier	 st17
=	TokenNameEQUAL	
revokeStatement	TokenNameIdentifier	 revoke Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st17	TokenNameIdentifier	 st17
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
18	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:175:7: st18= listPermissionsStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:175:7: st18= listPermissionsStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_listPermissionsStatement_in_cqlStatement477	TokenNameIdentifier	 FOLLOW list Permissions Statement in cql Statement477
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st18	TokenNameIdentifier	 st18
=	TokenNameEQUAL	
listPermissionsStatement	TokenNameIdentifier	 list Permissions Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st18	TokenNameIdentifier	 st18
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
19	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:176:7: st19= createUserStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:176:7: st19= createUserStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_createUserStatement_in_cqlStatement492	TokenNameIdentifier	 FOLLOW create User Statement in cql Statement492
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st19	TokenNameIdentifier	 st19
=	TokenNameEQUAL	
createUserStatement	TokenNameIdentifier	 create User Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st19	TokenNameIdentifier	 st19
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
20	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:177:7: st20= alterUserStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:177:7: st20= alterUserStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_alterUserStatement_in_cqlStatement512	TokenNameIdentifier	 FOLLOW alter User Statement in cql Statement512
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st20	TokenNameIdentifier	 st20
=	TokenNameEQUAL	
alterUserStatement	TokenNameIdentifier	 alter User Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st20	TokenNameIdentifier	 st20
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
21	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:178:7: st21= dropUserStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:178:7: st21= dropUserStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_dropUserStatement_in_cqlStatement533	TokenNameIdentifier	 FOLLOW drop User Statement in cql Statement533
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st21	TokenNameIdentifier	 st21
=	TokenNameEQUAL	
dropUserStatement	TokenNameIdentifier	 drop User Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st21	TokenNameIdentifier	 st21
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
22	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:179:7: st22= listUsersStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:179:7: st22= listUsersStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_listUsersStatement_in_cqlStatement555	TokenNameIdentifier	 FOLLOW list Users Statement in cql Statement555
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
st22	TokenNameIdentifier	 st22
=	TokenNameEQUAL	
listUsersStatement	TokenNameIdentifier	 list Users Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
st22	TokenNameIdentifier	 st22
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
stmt	TokenNameIdentifier	 stmt
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
stmt	TokenNameIdentifier	 stmt
.	TokenNameDOT	
setBoundTerms	TokenNameIdentifier	 set Bound Terms
(	TokenNameLPAREN	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
+	TokenNamePLUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cqlStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "cqlStatement" 
// $ANTLR start "useStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "useStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:185:1: useStatement returns [UseStatement stmt] : K_USE ks= keyspaceName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:185:1: useStatement returns [UseStatement stmt] : K_USE ks= keyspaceName ; 
public	TokenNamepublic	
final	TokenNamefinal	
UseStatement	TokenNameIdentifier	 Use Statement
useStatement	TokenNameIdentifier	 use Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
UseStatement	TokenNameIdentifier	 Use Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:186:5: ( K_USE ks= keyspaceName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:186:5: ( K_USE ks= keyspaceName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:186:7: K_USE ks= keyspaceName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:186:7: K_USE ks= keyspaceName 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USE	TokenNameIdentifier	 K  USE
,	TokenNameCOMMA	
FOLLOW_K_USE_in_useStatement589	TokenNameIdentifier	 FOLLOW  K  USE in use Statement589
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspaceName_in_useStatement593	TokenNameIdentifier	 FOLLOW keyspace Name in use Statement593
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
keyspaceName	TokenNameIdentifier	 keyspace Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
UseStatement	TokenNameIdentifier	 Use Statement
(	TokenNameLPAREN	
ks	TokenNameIdentifier	 ks
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "useStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "useStatement" 
// $ANTLR start "selectStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "selectStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:189:1: selectStatement returns [SelectStatement.RawStatement expr] : K_SELECT (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) K_FROM cf= columnFamilyName ( K_WHERE wclause= whereClause )? ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? ( K_LIMIT rows= INTEGER )? ( K_ALLOW K_FILTERING )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:189:1: selectStatement returns [SelectStatement.RawStatement expr] : K_SELECT (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) K_FROM cf= columnFamilyName ( K_WHERE wclause= whereClause )? ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? ( K_LIMIT rows= INTEGER )? ( K_ALLOW K_FILTERING )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
SelectStatement	TokenNameIdentifier	 Select Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
selectStatement	TokenNameIdentifier	 select Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
SelectStatement	TokenNameIdentifier	 Select Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
rows	TokenNameIdentifier	 rows
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
sclause	TokenNameIdentifier	 sclause
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
wclause	TokenNameIdentifier	 wclause
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
isCount	TokenNameIdentifier	 is Count
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
int	TokenNameint	
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
Integer	TokenNameIdentifier	 Integer
.	TokenNameDOT	
MAX_VALUE	TokenNameIdentifier	 MAX  VALUE
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Boolean	TokenNameIdentifier	 Boolean
>	TokenNameGREATER	
orderings	TokenNameIdentifier	 orderings
=	TokenNameEQUAL	
new	TokenNamenew	
LinkedHashMap	TokenNameIdentifier	 Linked Hash Map
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Boolean	TokenNameIdentifier	 Boolean
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
allowFiltering	TokenNameIdentifier	 allow Filtering
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:5: ( K_SELECT (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) K_FROM cf= columnFamilyName ( K_WHERE wclause= whereClause )? ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? ( K_LIMIT rows= INTEGER )? ( K_ALLOW K_FILTERING )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:5: ( K_SELECT (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) K_FROM cf= columnFamilyName ( K_WHERE wclause= whereClause )? ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? ( K_LIMIT rows= INTEGER )? ( K_ALLOW K_FILTERING )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:7: K_SELECT (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) K_FROM cf= columnFamilyName ( K_WHERE wclause= whereClause )? ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? ( K_LIMIT rows= INTEGER )? ( K_ALLOW K_FILTERING )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:7: K_SELECT (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) K_FROM cf= columnFamilyName ( K_WHERE wclause= whereClause )? ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? ( K_LIMIT rows= INTEGER )? ( K_ALLOW K_FILTERING )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_SELECT	TokenNameIdentifier	 K  SELECT
,	TokenNameCOMMA	
FOLLOW_K_SELECT_in_selectStatement627	TokenNameIdentifier	 FOLLOW  K  SELECT in select Statement627
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:16: (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:16: (sclause= selectClause | ( K_COUNT '(' sclause= selectCountClause ')' ) ) 
int	TokenNameint	
alt3	TokenNameIdentifier	 alt3
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA3_0	TokenNameIdentifier	 L A3 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA3_0	TokenNameIdentifier	 L A3 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA3_0	TokenNameIdentifier	 L A3 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA3_0	TokenNameIdentifier	 L A3 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA3_0	TokenNameIdentifier	 L A3 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA3_0	TokenNameIdentifier	 L A3 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA3_0	TokenNameIdentifier	 L A3 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA3_0	TokenNameIdentifier	 L A3 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA3_0	TokenNameIdentifier	 L A3 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
128	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt3	TokenNameIdentifier	 alt3
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA3_0	TokenNameIdentifier	 L A3 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
int	TokenNameint	
LA3_2	TokenNameIdentifier	 L A3 2
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA3_2	TokenNameIdentifier	 L A3 2
==	TokenNameEQUAL_EQUAL	
125	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt3	TokenNameIdentifier	 alt3
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA3_2	TokenNameIdentifier	 L A3 2
==	TokenNameEQUAL_EQUAL	
K_FROM	TokenNameIdentifier	 K  FROM
||	TokenNameOR_OR	
LA3_2	TokenNameIdentifier	 L A3 2
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt3	TokenNameIdentifier	 alt3
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
3	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
2	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
3	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt3	TokenNameIdentifier	 alt3
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:18: sclause= selectClause 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:18: sclause= selectClause 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_selectClause_in_selectStatement633	TokenNameIdentifier	 FOLLOW select Clause in select Statement633
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sclause	TokenNameIdentifier	 sclause
=	TokenNameEQUAL	
selectClause	TokenNameIdentifier	 select Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:41: ( K_COUNT '(' sclause= selectCountClause ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:41: ( K_COUNT '(' sclause= selectCountClause ')' ) 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:41: ( K_COUNT '(' sclause= selectCountClause ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:41: ( K_COUNT '(' sclause= selectCountClause ')' ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:42: K_COUNT '(' sclause= selectCountClause ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:202:42: K_COUNT '(' sclause= selectCountClause ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COUNT	TokenNameIdentifier	 K  COUNT
,	TokenNameCOMMA	
FOLLOW_K_COUNT_in_selectStatement638	TokenNameIdentifier	 FOLLOW  K  COUNT in select Statement638
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_selectStatement640	TokenNameIdentifier	 FOLLOW 125 in select Statement640
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_selectCountClause_in_selectStatement644	TokenNameIdentifier	 FOLLOW select Count Clause in select Statement644
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sclause	TokenNameIdentifier	 sclause
=	TokenNameEQUAL	
selectCountClause	TokenNameIdentifier	 select Count Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_selectStatement646	TokenNameIdentifier	 FOLLOW 126 in select Statement646
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
isCount	TokenNameIdentifier	 is Count
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_FROM	TokenNameIdentifier	 K  FROM
,	TokenNameCOMMA	
FOLLOW_K_FROM_in_selectStatement659	TokenNameIdentifier	 FOLLOW  K  FROM in select Statement659
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_selectStatement663	TokenNameIdentifier	 FOLLOW column Family Name in select Statement663
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:204:7: ( K_WHERE wclause= whereClause )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:204:7: ( K_WHERE wclause= whereClause )? 
int	TokenNameint	
alt4	TokenNameIdentifier	 alt4
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA4_0	TokenNameIdentifier	 L A4 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA4_0	TokenNameIdentifier	 L A4 0
==	TokenNameEQUAL_EQUAL	
K_WHERE	TokenNameIdentifier	 K  WHERE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt4	TokenNameIdentifier	 alt4
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt4	TokenNameIdentifier	 alt4
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:204:9: K_WHERE wclause= whereClause 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:204:9: K_WHERE wclause= whereClause 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WHERE	TokenNameIdentifier	 K  WHERE
,	TokenNameCOMMA	
FOLLOW_K_WHERE_in_selectStatement673	TokenNameIdentifier	 FOLLOW  K  WHERE in select Statement673
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_whereClause_in_selectStatement677	TokenNameIdentifier	 FOLLOW where Clause in select Statement677
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
wclause	TokenNameIdentifier	 wclause
=	TokenNameEQUAL	
whereClause	TokenNameIdentifier	 where Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:7: ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:7: ( K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* )? 
int	TokenNameint	
alt6	TokenNameIdentifier	 alt6
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA6_0	TokenNameIdentifier	 L A6 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA6_0	TokenNameIdentifier	 L A6 0
==	TokenNameEQUAL_EQUAL	
K_ORDER	TokenNameIdentifier	 K  ORDER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt6	TokenNameIdentifier	 alt6
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt6	TokenNameIdentifier	 alt6
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:9: K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:9: K_ORDER K_BY orderByClause[orderings] ( ',' orderByClause[orderings] )* 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ORDER	TokenNameIdentifier	 K  ORDER
,	TokenNameCOMMA	
FOLLOW_K_ORDER_in_selectStatement690	TokenNameIdentifier	 FOLLOW  K  ORDER in select Statement690
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BY	TokenNameIdentifier	 K  BY
,	TokenNameCOMMA	
FOLLOW_K_BY_in_selectStatement692	TokenNameIdentifier	 FOLLOW  K  BY in select Statement692
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_orderByClause_in_selectStatement694	TokenNameIdentifier	 FOLLOW order By Clause in select Statement694
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
orderByClause	TokenNameIdentifier	 order By Clause
(	TokenNameLPAREN	
orderings	TokenNameIdentifier	 orderings
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:47: ( ',' orderByClause[orderings] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:47: ( ',' orderByClause[orderings] )* 
loop5	TokenNameIdentifier	 loop5
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt5	TokenNameIdentifier	 alt5
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA5_0	TokenNameIdentifier	 L A5 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA5_0	TokenNameIdentifier	 L A5 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt5	TokenNameIdentifier	 alt5
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt5	TokenNameIdentifier	 alt5
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:49: ',' orderByClause[orderings] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:205:49: ',' orderByClause[orderings] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_selectStatement699	TokenNameIdentifier	 FOLLOW 127 in select Statement699
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_orderByClause_in_selectStatement701	TokenNameIdentifier	 FOLLOW order By Clause in select Statement701
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
orderByClause	TokenNameIdentifier	 order By Clause
(	TokenNameLPAREN	
orderings	TokenNameIdentifier	 orderings
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop5	TokenNameIdentifier	 loop5
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:206:7: ( K_LIMIT rows= INTEGER )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:206:7: ( K_LIMIT rows= INTEGER )? 
int	TokenNameint	
alt7	TokenNameIdentifier	 alt7
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA7_0	TokenNameIdentifier	 L A7 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA7_0	TokenNameIdentifier	 L A7 0
==	TokenNameEQUAL_EQUAL	
K_LIMIT	TokenNameIdentifier	 K  LIMIT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt7	TokenNameIdentifier	 alt7
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt7	TokenNameIdentifier	 alt7
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:206:9: K_LIMIT rows= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:206:9: K_LIMIT rows= INTEGER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_LIMIT	TokenNameIdentifier	 K  LIMIT
,	TokenNameCOMMA	
FOLLOW_K_LIMIT_in_selectStatement718	TokenNameIdentifier	 FOLLOW  K  LIMIT in select Statement718
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
rows	TokenNameIdentifier	 rows
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_selectStatement722	TokenNameIdentifier	 FOLLOW  INTEGER in select Statement722
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
limit	TokenNameIdentifier	 limit
=	TokenNameEQUAL	
Integer	TokenNameIdentifier	 Integer
.	TokenNameDOT	
parseInt	TokenNameIdentifier	 parse Int
(	TokenNameLPAREN	
(	TokenNameLPAREN	
rows	TokenNameIdentifier	 rows
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
rows	TokenNameIdentifier	 rows
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:207:7: ( K_ALLOW K_FILTERING )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:207:7: ( K_ALLOW K_FILTERING )? 
int	TokenNameint	
alt8	TokenNameIdentifier	 alt8
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA8_0	TokenNameIdentifier	 L A8 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA8_0	TokenNameIdentifier	 L A8 0
==	TokenNameEQUAL_EQUAL	
K_ALLOW	TokenNameIdentifier	 K  ALLOW
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt8	TokenNameIdentifier	 alt8
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt8	TokenNameIdentifier	 alt8
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:207:9: K_ALLOW K_FILTERING 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:207:9: K_ALLOW K_FILTERING 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALLOW	TokenNameIdentifier	 K  ALLOW
,	TokenNameCOMMA	
FOLLOW_K_ALLOW_in_selectStatement737	TokenNameIdentifier	 FOLLOW  K  ALLOW in select Statement737
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
,	TokenNameCOMMA	
FOLLOW_K_FILTERING_in_selectStatement739	TokenNameIdentifier	 FOLLOW  K  FILTERING in select Statement739
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
allowFiltering	TokenNameIdentifier	 allow Filtering
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
SelectStatement	TokenNameIdentifier	 Select Statement
.	TokenNameDOT	
Parameters	TokenNameIdentifier	 Parameters
params	TokenNameIdentifier	 params
=	TokenNameEQUAL	
new	TokenNamenew	
SelectStatement	TokenNameIdentifier	 Select Statement
.	TokenNameDOT	
Parameters	TokenNameIdentifier	 Parameters
(	TokenNameLPAREN	
limit	TokenNameIdentifier	 limit
,	TokenNameCOMMA	
orderings	TokenNameIdentifier	 orderings
,	TokenNameCOMMA	
isCount	TokenNameIdentifier	 is Count
,	TokenNameCOMMA	
allowFiltering	TokenNameIdentifier	 allow Filtering
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
SelectStatement	TokenNameIdentifier	 Select Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
,	TokenNameCOMMA	
params	TokenNameIdentifier	 params
,	TokenNameCOMMA	
sclause	TokenNameIdentifier	 sclause
,	TokenNameCOMMA	
wclause	TokenNameIdentifier	 wclause
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "selectStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "selectStatement" 
// $ANTLR start "selectClause" 	TokenNameCOMMENT_LINE	$ANTLR start "selectClause" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:217:1: selectClause returns [List<Selector> expr] : (t1= selector ( ',' tN= selector )* | '\\*' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:217:1: selectClause returns [List<Selector> expr] : (t1= selector ( ',' tN= selector )* | '\\*' ); 
public	TokenNamepublic	
final	TokenNamefinal	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
selectClause	TokenNameIdentifier	 select Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Selector	TokenNameIdentifier	 Selector
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Selector	TokenNameIdentifier	 Selector
tN	TokenNameIdentifier	 t N
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:5: (t1= selector ( ',' tN= selector )* | '\\*' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:5: (t1= selector ( ',' tN= selector )* | '\\*' ) 
int	TokenNameint	
alt10	TokenNameIdentifier	 alt10
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA10_0	TokenNameIdentifier	 L A10 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA10_0	TokenNameIdentifier	 L A10 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA10_0	TokenNameIdentifier	 L A10 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA10_0	TokenNameIdentifier	 L A10 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA10_0	TokenNameIdentifier	 L A10 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt10	TokenNameIdentifier	 alt10
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA10_0	TokenNameIdentifier	 L A10 0
==	TokenNameEQUAL_EQUAL	
128	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt10	TokenNameIdentifier	 alt10
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
10	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt10	TokenNameIdentifier	 alt10
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:7: t1= selector ( ',' tN= selector )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:7: t1= selector ( ',' tN= selector )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_selector_in_selectClause776	TokenNameIdentifier	 FOLLOW selector in select Clause776
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
selector	TokenNameIdentifier	 selector
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
t1	TokenNameIdentifier	 t1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:73: ( ',' tN= selector )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:73: ( ',' tN= selector )* 
loop9	TokenNameIdentifier	 loop9
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt9	TokenNameIdentifier	 alt9
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA9_0	TokenNameIdentifier	 L A9 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA9_0	TokenNameIdentifier	 L A9 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt9	TokenNameIdentifier	 alt9
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt9	TokenNameIdentifier	 alt9
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:74: ',' tN= selector 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:218:74: ',' tN= selector 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_selectClause781	TokenNameIdentifier	 FOLLOW 127 in select Clause781
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_selector_in_selectClause785	TokenNameIdentifier	 FOLLOW selector in select Clause785
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tN	TokenNameIdentifier	 t N
=	TokenNameEQUAL	
selector	TokenNameIdentifier	 selector
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
tN	TokenNameIdentifier	 t N
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop9	TokenNameIdentifier	 loop9
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:219:7: '\\*' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:219:7: '\\*' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
128	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_128_in_selectClause797	TokenNameIdentifier	 FOLLOW 128 in select Clause797
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
emptyList	TokenNameIdentifier	 empty List
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "selectClause" 	TokenNameCOMMENT_LINE	$ANTLR end "selectClause" 
// $ANTLR start "selector" 	TokenNameCOMMENT_LINE	$ANTLR start "selector" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:222:1: selector returns [Selector s] : (c= cident | K_WRITETIME '(' c= cident ')' | K_TTL '(' c= cident ')' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:222:1: selector returns [Selector s] : (c= cident | K_WRITETIME '(' c= cident ')' | K_TTL '(' c= cident ')' ); 
public	TokenNamepublic	
final	TokenNamefinal	
Selector	TokenNameIdentifier	 Selector
selector	TokenNameIdentifier	 selector
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Selector	TokenNameIdentifier	 Selector
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:223:5: (c= cident | K_WRITETIME '(' c= cident ')' | K_TTL '(' c= cident ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:223:5: (c= cident | K_WRITETIME '(' c= cident ')' | K_TTL '(' c= cident ')' ) 
int	TokenNameint	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_COUNT	TokenNameIdentifier	 K  COUNT
:	TokenNameCOLON	
case	TokenNamecase	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_VALUES	TokenNameIdentifier	 K  VALUES
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
case	TokenNamecase	
K_KEY	TokenNameIdentifier	 K  KEY
:	TokenNameCOLON	
case	TokenNamecase	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
:	TokenNameCOLON	
case	TokenNamecase	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
:	TokenNameCOLON	
case	TokenNamecase	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
:	TokenNameCOLON	
case	TokenNamecase	
IDENT	TokenNameIdentifier	 IDENT
:	TokenNameCOLON	
case	TokenNamecase	
K_TYPE	TokenNameIdentifier	 K  TYPE
:	TokenNameCOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
case	TokenNamecase	
K_ALL	TokenNameIdentifier	 K  ALL
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
:	TokenNameCOLON	
case	TokenNamecase	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
:	TokenNameCOLON	
case	TokenNamecase	
K_USER	TokenNameIdentifier	 K  USER
:	TokenNameCOLON	
case	TokenNamecase	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_USERS	TokenNameIdentifier	 K  USERS
:	TokenNameCOLON	
case	TokenNamecase	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
:	TokenNameCOLON	
case	TokenNamecase	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
:	TokenNameCOLON	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA11_2	TokenNameIdentifier	 L A11 2
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA11_2	TokenNameIdentifier	 L A11 2
==	TokenNameEQUAL_EQUAL	
125	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA11_2	TokenNameIdentifier	 L A11 2
==	TokenNameEQUAL_EQUAL	
K_FROM	TokenNameIdentifier	 K  FROM
||	TokenNameOR_OR	
LA11_2	TokenNameIdentifier	 L A11 2
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
11	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
2	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_TTL	TokenNameIdentifier	 K  TTL
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA11_3	TokenNameIdentifier	 L A11 3
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA11_3	TokenNameIdentifier	 L A11 3
==	TokenNameEQUAL_EQUAL	
125	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA11_3	TokenNameIdentifier	 L A11 3
==	TokenNameEQUAL_EQUAL	
K_FROM	TokenNameIdentifier	 K  FROM
||	TokenNameOR_OR	
LA11_3	TokenNameIdentifier	 L A11 3
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt11	TokenNameIdentifier	 alt11
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
11	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
3	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
11	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt11	TokenNameIdentifier	 alt11
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:223:7: c= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:223:7: c= cident 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_selector822	TokenNameIdentifier	 FOLLOW cident in selector822
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:224:7: K_WRITETIME '(' c= cident ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:224:7: K_WRITETIME '(' c= cident ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
,	TokenNameCOMMA	
FOLLOW_K_WRITETIME_in_selector844	TokenNameIdentifier	 FOLLOW  K  WRITETIME in selector844
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_selector846	TokenNameIdentifier	 FOLLOW 125 in selector846
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_selector850	TokenNameIdentifier	 FOLLOW cident in selector850
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_selector852	TokenNameIdentifier	 FOLLOW 126 in selector852
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
new	TokenNamenew	
Selector	TokenNameIdentifier	 Selector
.	TokenNameDOT	
WithFunction	TokenNameIdentifier	 With Function
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
,	TokenNameCOMMA	
Selector	TokenNameIdentifier	 Selector
.	TokenNameDOT	
Function	TokenNameIdentifier	 Function
.	TokenNameDOT	
WRITE_TIME	TokenNameIdentifier	 WRITE  TIME
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:225:7: K_TTL '(' c= cident ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:225:7: K_TTL '(' c= cident ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TTL	TokenNameIdentifier	 K  TTL
,	TokenNameCOMMA	
FOLLOW_K_TTL_in_selector862	TokenNameIdentifier	 FOLLOW  K  TTL in selector862
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_selector864	TokenNameIdentifier	 FOLLOW 125 in selector864
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_selector868	TokenNameIdentifier	 FOLLOW cident in selector868
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_selector870	TokenNameIdentifier	 FOLLOW 126 in selector870
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
new	TokenNamenew	
Selector	TokenNameIdentifier	 Selector
.	TokenNameDOT	
WithFunction	TokenNameIdentifier	 With Function
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
,	TokenNameCOMMA	
Selector	TokenNameIdentifier	 Selector
.	TokenNameDOT	
Function	TokenNameIdentifier	 Function
.	TokenNameDOT	
TTL	TokenNameIdentifier	 TTL
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
s	TokenNameIdentifier	 s
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "selector" 	TokenNameCOMMENT_LINE	$ANTLR end "selector" 
// $ANTLR start "selectCountClause" 	TokenNameCOMMENT_LINE	$ANTLR start "selectCountClause" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:228:1: selectCountClause returns [List<Selector> expr] : ( '\\*' | i= INTEGER ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:228:1: selectCountClause returns [List<Selector> expr] : ( '\\*' | i= INTEGER ); 
public	TokenNamepublic	
final	TokenNamefinal	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
selectCountClause	TokenNameIdentifier	 select Count Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:229:5: ( '\\*' | i= INTEGER ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:229:5: ( '\\*' | i= INTEGER ) 
int	TokenNameint	
alt12	TokenNameIdentifier	 alt12
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA12_0	TokenNameIdentifier	 L A12 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA12_0	TokenNameIdentifier	 L A12 0
==	TokenNameEQUAL_EQUAL	
128	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt12	TokenNameIdentifier	 alt12
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA12_0	TokenNameIdentifier	 L A12 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt12	TokenNameIdentifier	 alt12
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
12	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt12	TokenNameIdentifier	 alt12
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:229:7: '\\*' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:229:7: '\\*' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
128	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_128_in_selectCountClause899	TokenNameIdentifier	 FOLLOW 128 in select Count Clause899
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
emptyList	TokenNameIdentifier	 empty List
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:230:7: i= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:230:7: i= INTEGER 
{	TokenNameLBRACE	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_selectCountClause921	TokenNameIdentifier	 FOLLOW  INTEGER in select Count Clause921
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
i	TokenNameIdentifier	 i
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
"1"	TokenNameStringLiteral	1
)	TokenNameRPAREN	
)	TokenNameRPAREN	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"Only COUNT(1) is supported, got COUNT("	TokenNameStringLiteral	Only COUNT(1) is supported, got COUNT(
+	TokenNamePLUS	
i	TokenNameIdentifier	 i
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
+	TokenNamePLUS	
")"	TokenNameStringLiteral	)
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
emptyList	TokenNameIdentifier	 empty List
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "selectCountClause" 	TokenNameCOMMENT_LINE	$ANTLR end "selectCountClause" 
// $ANTLR start "whereClause" 	TokenNameCOMMENT_LINE	$ANTLR start "whereClause" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:233:1: whereClause returns [List<Relation> clause] : relation[$clause] ( K_AND relation[$clause] )* ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:233:1: whereClause returns [List<Relation> clause] : relation[$clause] ( K_AND relation[$clause] )* ; 
public	TokenNamepublic	
final	TokenNamefinal	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
whereClause	TokenNameIdentifier	 where Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
clause	TokenNameIdentifier	 clause
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
clause	TokenNameIdentifier	 clause
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:5: ( relation[$clause] ( K_AND relation[$clause] )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:5: ( relation[$clause] ( K_AND relation[$clause] )* ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:7: relation[$clause] ( K_AND relation[$clause] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:7: relation[$clause] ( K_AND relation[$clause] )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_relation_in_whereClause957	TokenNameIdentifier	 FOLLOW relation in where Clause957
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
relation	TokenNameIdentifier	 relation
(	TokenNameLPAREN	
clause	TokenNameIdentifier	 clause
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:25: ( K_AND relation[$clause] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:25: ( K_AND relation[$clause] )* 
loop13	TokenNameIdentifier	 loop13
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt13	TokenNameIdentifier	 alt13
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA13_0	TokenNameIdentifier	 L A13 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA13_0	TokenNameIdentifier	 L A13 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt13	TokenNameIdentifier	 alt13
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt13	TokenNameIdentifier	 alt13
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:26: K_AND relation[$clause] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:235:26: K_AND relation[$clause] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_AND	TokenNameIdentifier	 K  AND
,	TokenNameCOMMA	
FOLLOW_K_AND_in_whereClause961	TokenNameIdentifier	 FOLLOW  K  AND in where Clause961
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_relation_in_whereClause963	TokenNameIdentifier	 FOLLOW relation in where Clause963
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
relation	TokenNameIdentifier	 relation
(	TokenNameLPAREN	
clause	TokenNameIdentifier	 clause
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop13	TokenNameIdentifier	 loop13
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
clause	TokenNameIdentifier	 clause
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "whereClause" 	TokenNameCOMMENT_LINE	$ANTLR end "whereClause" 
// $ANTLR start "orderByClause" 	TokenNameCOMMENT_LINE	$ANTLR start "orderByClause" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:238:1: orderByClause[Map<ColumnIdentifier, Boolean> orderings] : c= cident ( K_ASC | K_DESC )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:238:1: orderByClause[Map<ColumnIdentifier, Boolean> orderings] : c= cident ( K_ASC | K_DESC )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
orderByClause	TokenNameIdentifier	 order By Clause
(	TokenNameLPAREN	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Boolean	TokenNameIdentifier	 Boolean
>	TokenNameGREATER	
orderings	TokenNameIdentifier	 orderings
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
orderBy	TokenNameIdentifier	 order By
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
reversed	TokenNameIdentifier	 reversed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:5: (c= cident ( K_ASC | K_DESC )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:5: (c= cident ( K_ASC | K_DESC )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:7: c= cident ( K_ASC | K_DESC )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:7: c= cident ( K_ASC | K_DESC )? 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_orderByClause994	TokenNameIdentifier	 FOLLOW cident in order By Clause994
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
orderBy	TokenNameIdentifier	 order By
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:33: ( K_ASC | K_DESC )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:33: ( K_ASC | K_DESC )? 
int	TokenNameint	
alt14	TokenNameIdentifier	 alt14
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA14_0	TokenNameIdentifier	 L A14 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA14_0	TokenNameIdentifier	 L A14 0
==	TokenNameEQUAL_EQUAL	
K_ASC	TokenNameIdentifier	 K  ASC
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt14	TokenNameIdentifier	 alt14
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA14_0	TokenNameIdentifier	 L A14 0
==	TokenNameEQUAL_EQUAL	
K_DESC	TokenNameIdentifier	 K  DESC
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt14	TokenNameIdentifier	 alt14
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt14	TokenNameIdentifier	 alt14
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:34: K_ASC 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:34: K_ASC 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ASC	TokenNameIdentifier	 K  ASC
,	TokenNameCOMMA	
FOLLOW_K_ASC_in_orderByClause999	TokenNameIdentifier	 FOLLOW  K  ASC in order By Clause999
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:42: K_DESC 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:243:42: K_DESC 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DESC	TokenNameIdentifier	 K  DESC
,	TokenNameCOMMA	
FOLLOW_K_DESC_in_orderByClause1003	TokenNameIdentifier	 FOLLOW  K  DESC in order By Clause1003
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
reversed	TokenNameIdentifier	 reversed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
orderings	TokenNameIdentifier	 orderings
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
,	TokenNameCOMMA	
reversed	TokenNameIdentifier	 reversed
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "orderByClause" 	TokenNameCOMMENT_LINE	$ANTLR end "orderByClause" 
// $ANTLR start "insertStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "insertStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:246:1: insertStatement returns [UpdateStatement expr] : K_INSERT K_INTO cf= columnFamilyName '(' c1= cident ( ',' cn= cident )* ')' K_VALUES '(' v1= set_operation ( ',' vn= set_operation )* ')' ( usingClause[attrs] )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:246:1: insertStatement returns [UpdateStatement expr] : K_INSERT K_INTO cf= columnFamilyName '(' c1= cident ( ',' cn= cident )* ')' K_VALUES '(' v1= set_operation ( ',' vn= set_operation )* ')' ( usingClause[attrs] )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
UpdateStatement	TokenNameIdentifier	 Update Statement
insertStatement	TokenNameIdentifier	 insert Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
UpdateStatement	TokenNameIdentifier	 Update Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
c1	TokenNameIdentifier	 c1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
cn	TokenNameIdentifier	 cn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Operation	TokenNameIdentifier	 Operation
v1	TokenNameIdentifier	 v1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Operation	TokenNameIdentifier	 Operation
vn	TokenNameIdentifier	 vn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
=	TokenNameEQUAL	
new	TokenNamenew	
Attributes	TokenNameIdentifier	 Attributes
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
columnNames	TokenNameIdentifier	 column Names
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
columnOperations	TokenNameIdentifier	 column Operations
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:258:5: ( K_INSERT K_INTO cf= columnFamilyName '(' c1= cident ( ',' cn= cident )* ')' K_VALUES '(' v1= set_operation ( ',' vn= set_operation )* ')' ( usingClause[attrs] )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:258:5: ( K_INSERT K_INTO cf= columnFamilyName '(' c1= cident ( ',' cn= cident )* ')' K_VALUES '(' v1= set_operation ( ',' vn= set_operation )* ')' ( usingClause[attrs] )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:258:7: K_INSERT K_INTO cf= columnFamilyName '(' c1= cident ( ',' cn= cident )* ')' K_VALUES '(' v1= set_operation ( ',' vn= set_operation )* ')' ( usingClause[attrs] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:258:7: K_INSERT K_INTO cf= columnFamilyName '(' c1= cident ( ',' cn= cident )* ')' K_VALUES '(' v1= set_operation ( ',' vn= set_operation )* ')' ( usingClause[attrs] )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_INSERT	TokenNameIdentifier	 K  INSERT
,	TokenNameCOMMA	
FOLLOW_K_INSERT_in_insertStatement1041	TokenNameIdentifier	 FOLLOW  K  INSERT in insert Statement1041
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_INTO	TokenNameIdentifier	 K  INTO
,	TokenNameCOMMA	
FOLLOW_K_INTO_in_insertStatement1043	TokenNameIdentifier	 FOLLOW  K  INTO in insert Statement1043
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_insertStatement1047	TokenNameIdentifier	 FOLLOW column Family Name in insert Statement1047
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_insertStatement1059	TokenNameIdentifier	 FOLLOW 125 in insert Statement1059
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_insertStatement1063	TokenNameIdentifier	 FOLLOW cident in insert Statement1063
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c1	TokenNameIdentifier	 c1
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
columnNames	TokenNameIdentifier	 column Names
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
c1	TokenNameIdentifier	 c1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:259:51: ( ',' cn= cident )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:259:51: ( ',' cn= cident )* 
loop15	TokenNameIdentifier	 loop15
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt15	TokenNameIdentifier	 alt15
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA15_0	TokenNameIdentifier	 L A15 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA15_0	TokenNameIdentifier	 L A15 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt15	TokenNameIdentifier	 alt15
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt15	TokenNameIdentifier	 alt15
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:259:53: ',' cn= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:259:53: ',' cn= cident 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_insertStatement1070	TokenNameIdentifier	 FOLLOW 127 in insert Statement1070
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_insertStatement1074	TokenNameIdentifier	 FOLLOW cident in insert Statement1074
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cn	TokenNameIdentifier	 cn
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
columnNames	TokenNameIdentifier	 column Names
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
cn	TokenNameIdentifier	 cn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop15	TokenNameIdentifier	 loop15
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_insertStatement1081	TokenNameIdentifier	 FOLLOW 126 in insert Statement1081
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_VALUES	TokenNameIdentifier	 K  VALUES
,	TokenNameCOMMA	
FOLLOW_K_VALUES_in_insertStatement1091	TokenNameIdentifier	 FOLLOW  K  VALUES in insert Statement1091
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_insertStatement1103	TokenNameIdentifier	 FOLLOW 125 in insert Statement1103
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_set_operation_in_insertStatement1107	TokenNameIdentifier	 FOLLOW set operation in insert Statement1107
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
v1	TokenNameIdentifier	 v1
=	TokenNameEQUAL	
set_operation	TokenNameIdentifier	 set operation
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
columnOperations	TokenNameIdentifier	 column Operations
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
v1	TokenNameIdentifier	 v1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:261:62: ( ',' vn= set_operation )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:261:62: ( ',' vn= set_operation )* 
loop16	TokenNameIdentifier	 loop16
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt16	TokenNameIdentifier	 alt16
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA16_0	TokenNameIdentifier	 L A16 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA16_0	TokenNameIdentifier	 L A16 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt16	TokenNameIdentifier	 alt16
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt16	TokenNameIdentifier	 alt16
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:261:64: ',' vn= set_operation 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:261:64: ',' vn= set_operation 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_insertStatement1113	TokenNameIdentifier	 FOLLOW 127 in insert Statement1113
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_set_operation_in_insertStatement1117	TokenNameIdentifier	 FOLLOW set operation in insert Statement1117
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
vn	TokenNameIdentifier	 vn
=	TokenNameEQUAL	
set_operation	TokenNameIdentifier	 set operation
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
columnOperations	TokenNameIdentifier	 column Operations
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
vn	TokenNameIdentifier	 vn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop16	TokenNameIdentifier	 loop16
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_insertStatement1124	TokenNameIdentifier	 FOLLOW 126 in insert Statement1124
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:262:9: ( usingClause[attrs] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:262:9: ( usingClause[attrs] )? 
int	TokenNameint	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA17_0	TokenNameIdentifier	 L A17 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA17_0	TokenNameIdentifier	 L A17 0
==	TokenNameEQUAL_EQUAL	
K_USING	TokenNameIdentifier	 K  USING
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt17	TokenNameIdentifier	 alt17
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt17	TokenNameIdentifier	 alt17
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:262:11: usingClause[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:262:11: usingClause[attrs] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClause_in_insertStatement1136	TokenNameIdentifier	 FOLLOW using Clause in insert Statement1136
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClause	TokenNameIdentifier	 using Clause
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
UpdateStatement	TokenNameIdentifier	 Update Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
,	TokenNameCOMMA	
attrs	TokenNameIdentifier	 attrs
,	TokenNameCOMMA	
columnNames	TokenNameIdentifier	 column Names
,	TokenNameCOMMA	
columnOperations	TokenNameIdentifier	 column Operations
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "insertStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "insertStatement" 
// $ANTLR start "usingClause" 	TokenNameCOMMENT_LINE	$ANTLR start "usingClause" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:268:1: usingClause[Attributes attrs] : K_USING usingClauseObjective[attrs] ( ( K_AND )? usingClauseObjective[attrs] )* ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:268:1: usingClause[Attributes attrs] : K_USING usingClauseObjective[attrs] ( ( K_AND )? usingClauseObjective[attrs] )* ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
usingClause	TokenNameIdentifier	 using Clause
(	TokenNameLPAREN	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:5: ( K_USING usingClauseObjective[attrs] ( ( K_AND )? usingClauseObjective[attrs] )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:5: ( K_USING usingClauseObjective[attrs] ( ( K_AND )? usingClauseObjective[attrs] )* ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:7: K_USING usingClauseObjective[attrs] ( ( K_AND )? usingClauseObjective[attrs] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:7: K_USING usingClauseObjective[attrs] ( ( K_AND )? usingClauseObjective[attrs] )* 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USING	TokenNameIdentifier	 K  USING
,	TokenNameCOMMA	
FOLLOW_K_USING_in_usingClause1166	TokenNameIdentifier	 FOLLOW  K  USING in using Clause1166
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClauseObjective_in_usingClause1168	TokenNameIdentifier	 FOLLOW using Clause Objective in using Clause1168
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClauseObjective	TokenNameIdentifier	 using Clause Objective
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:43: ( ( K_AND )? usingClauseObjective[attrs] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:43: ( ( K_AND )? usingClauseObjective[attrs] )* 
loop19	TokenNameIdentifier	 loop19
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt19	TokenNameIdentifier	 alt19
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA19_0	TokenNameIdentifier	 L A19 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA19_0	TokenNameIdentifier	 L A19 0
>=	TokenNameGREATER_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
&&	TokenNameAND_AND	
LA19_0	TokenNameIdentifier	 L A19 0
<=	TokenNameLESS_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA19_0	TokenNameIdentifier	 L A19 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt19	TokenNameIdentifier	 alt19
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt19	TokenNameIdentifier	 alt19
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:45: ( K_AND )? usingClauseObjective[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:45: ( K_AND )? usingClauseObjective[attrs] 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:45: ( K_AND )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:45: ( K_AND )? 
int	TokenNameint	
alt18	TokenNameIdentifier	 alt18
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA18_0	TokenNameIdentifier	 L A18 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA18_0	TokenNameIdentifier	 L A18 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt18	TokenNameIdentifier	 alt18
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt18	TokenNameIdentifier	 alt18
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:45: K_AND 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:269:45: K_AND 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_AND	TokenNameIdentifier	 K  AND
,	TokenNameCOMMA	
FOLLOW_K_AND_in_usingClause1173	TokenNameIdentifier	 FOLLOW  K  AND in using Clause1173
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClauseObjective_in_usingClause1176	TokenNameIdentifier	 FOLLOW using Clause Objective in using Clause1176
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClauseObjective	TokenNameIdentifier	 using Clause Objective
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop19	TokenNameIdentifier	 loop19
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "usingClause" 	TokenNameCOMMENT_LINE	$ANTLR end "usingClause" 
// $ANTLR start "usingClauseDelete" 	TokenNameCOMMENT_LINE	$ANTLR start "usingClauseDelete" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:272:1: usingClauseDelete[Attributes attrs] : K_USING usingClauseDeleteObjective[attrs] ( ( K_AND )? usingClauseDeleteObjective[attrs] )* ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:272:1: usingClauseDelete[Attributes attrs] : K_USING usingClauseDeleteObjective[attrs] ( ( K_AND )? usingClauseDeleteObjective[attrs] )* ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
usingClauseDelete	TokenNameIdentifier	 using Clause Delete
(	TokenNameLPAREN	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:5: ( K_USING usingClauseDeleteObjective[attrs] ( ( K_AND )? usingClauseDeleteObjective[attrs] )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:5: ( K_USING usingClauseDeleteObjective[attrs] ( ( K_AND )? usingClauseDeleteObjective[attrs] )* ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:7: K_USING usingClauseDeleteObjective[attrs] ( ( K_AND )? usingClauseDeleteObjective[attrs] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:7: K_USING usingClauseDeleteObjective[attrs] ( ( K_AND )? usingClauseDeleteObjective[attrs] )* 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USING	TokenNameIdentifier	 K  USING
,	TokenNameCOMMA	
FOLLOW_K_USING_in_usingClauseDelete1198	TokenNameIdentifier	 FOLLOW  K  USING in using Clause Delete1198
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1200	TokenNameIdentifier	 FOLLOW using Clause Delete Objective in using Clause Delete1200
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClauseDeleteObjective	TokenNameIdentifier	 using Clause Delete Objective
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:49: ( ( K_AND )? usingClauseDeleteObjective[attrs] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:49: ( ( K_AND )? usingClauseDeleteObjective[attrs] )* 
loop21	TokenNameIdentifier	 loop21
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt21	TokenNameIdentifier	 alt21
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA21_0	TokenNameIdentifier	 L A21 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA21_0	TokenNameIdentifier	 L A21 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
||	TokenNameOR_OR	
LA21_0	TokenNameIdentifier	 L A21 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt21	TokenNameIdentifier	 alt21
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt21	TokenNameIdentifier	 alt21
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:51: ( K_AND )? usingClauseDeleteObjective[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:51: ( K_AND )? usingClauseDeleteObjective[attrs] 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:51: ( K_AND )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:51: ( K_AND )? 
int	TokenNameint	
alt20	TokenNameIdentifier	 alt20
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA20_0	TokenNameIdentifier	 L A20 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA20_0	TokenNameIdentifier	 L A20 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt20	TokenNameIdentifier	 alt20
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt20	TokenNameIdentifier	 alt20
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:51: K_AND 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:273:51: K_AND 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_AND	TokenNameIdentifier	 K  AND
,	TokenNameCOMMA	
FOLLOW_K_AND_in_usingClauseDelete1205	TokenNameIdentifier	 FOLLOW  K  AND in using Clause Delete1205
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1208	TokenNameIdentifier	 FOLLOW using Clause Delete Objective in using Clause Delete1208
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClauseDeleteObjective	TokenNameIdentifier	 using Clause Delete Objective
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop21	TokenNameIdentifier	 loop21
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "usingClauseDelete" 	TokenNameCOMMENT_LINE	$ANTLR end "usingClauseDelete" 
// $ANTLR start "usingClauseDeleteObjective" 	TokenNameCOMMENT_LINE	$ANTLR start "usingClauseDeleteObjective" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:276:1: usingClauseDeleteObjective[Attributes attrs] : K_TIMESTAMP ts= INTEGER ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:276:1: usingClauseDeleteObjective[Attributes attrs] : K_TIMESTAMP ts= INTEGER ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
usingClauseDeleteObjective	TokenNameIdentifier	 using Clause Delete Objective
(	TokenNameLPAREN	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Token	TokenNameIdentifier	 Token
ts	TokenNameIdentifier	 ts
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:277:5: ( K_TIMESTAMP ts= INTEGER ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:277:5: ( K_TIMESTAMP ts= INTEGER ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:277:7: K_TIMESTAMP ts= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:277:7: K_TIMESTAMP ts= INTEGER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
,	TokenNameCOMMA	
FOLLOW_K_TIMESTAMP_in_usingClauseDeleteObjective1230	TokenNameIdentifier	 FOLLOW  K  TIMESTAMP in using Clause Delete Objective1230
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ts	TokenNameIdentifier	 ts
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_usingClauseDeleteObjective1234	TokenNameIdentifier	 FOLLOW  INTEGER in using Clause Delete Objective1234
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attrs	TokenNameIdentifier	 attrs
.	TokenNameDOT	
timestamp	TokenNameIdentifier	 timestamp
=	TokenNameEQUAL	
Long	TokenNameIdentifier	 Long
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
(	TokenNameLPAREN	
ts	TokenNameIdentifier	 ts
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
ts	TokenNameIdentifier	 ts
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "usingClauseDeleteObjective" 	TokenNameCOMMENT_LINE	$ANTLR end "usingClauseDeleteObjective" 
// $ANTLR start "usingClauseObjective" 	TokenNameCOMMENT_LINE	$ANTLR start "usingClauseObjective" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:280:1: usingClauseObjective[Attributes attrs] : ( usingClauseDeleteObjective[attrs] | K_TTL t= INTEGER ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:280:1: usingClauseObjective[Attributes attrs] : ( usingClauseDeleteObjective[attrs] | K_TTL t= INTEGER ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
usingClauseObjective	TokenNameIdentifier	 using Clause Objective
(	TokenNameLPAREN	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:281:5: ( usingClauseDeleteObjective[attrs] | K_TTL t= INTEGER ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:281:5: ( usingClauseDeleteObjective[attrs] | K_TTL t= INTEGER ) 
int	TokenNameint	
alt22	TokenNameIdentifier	 alt22
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA22_0	TokenNameIdentifier	 L A22 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA22_0	TokenNameIdentifier	 L A22 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt22	TokenNameIdentifier	 alt22
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA22_0	TokenNameIdentifier	 L A22 0
==	TokenNameEQUAL_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt22	TokenNameIdentifier	 alt22
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
22	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt22	TokenNameIdentifier	 alt22
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:281:7: usingClauseDeleteObjective[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:281:7: usingClauseDeleteObjective[attrs] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClauseDeleteObjective_in_usingClauseObjective1254	TokenNameIdentifier	 FOLLOW using Clause Delete Objective in using Clause Objective1254
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClauseDeleteObjective	TokenNameIdentifier	 using Clause Delete Objective
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:282:7: K_TTL t= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:282:7: K_TTL t= INTEGER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TTL	TokenNameIdentifier	 K  TTL
,	TokenNameCOMMA	
FOLLOW_K_TTL_in_usingClauseObjective1263	TokenNameIdentifier	 FOLLOW  K  TTL in using Clause Objective1263
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_usingClauseObjective1267	TokenNameIdentifier	 FOLLOW  INTEGER in using Clause Objective1267
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
attrs	TokenNameIdentifier	 attrs
.	TokenNameDOT	
timeToLive	TokenNameIdentifier	 time To Live
=	TokenNameEQUAL	
Integer	TokenNameIdentifier	 Integer
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "usingClauseObjective" 	TokenNameCOMMENT_LINE	$ANTLR end "usingClauseObjective" 
// $ANTLR start "updateStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "updateStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:285:1: updateStatement returns [UpdateStatement expr] : K_UPDATE cf= columnFamilyName ( usingClause[attrs] )? K_SET termPairWithOperation[columns] ( ',' termPairWithOperation[columns] )* K_WHERE wclause= whereClause ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:285:1: updateStatement returns [UpdateStatement expr] : K_UPDATE cf= columnFamilyName ( usingClause[attrs] )? K_SET termPairWithOperation[columns] ( ',' termPairWithOperation[columns] )* K_WHERE wclause= whereClause ; 
public	TokenNamepublic	
final	TokenNamefinal	
UpdateStatement	TokenNameIdentifier	 Update Statement
updateStatement	TokenNameIdentifier	 update Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
UpdateStatement	TokenNameIdentifier	 Update Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
wclause	TokenNameIdentifier	 wclause
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
=	TokenNameEQUAL	
new	TokenNamenew	
Attributes	TokenNameIdentifier	 Attributes
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Pair	TokenNameIdentifier	 Pair
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>>	TokenNameRIGHT_SHIFT	
columns	TokenNameIdentifier	 columns
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Pair	TokenNameIdentifier	 Pair
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>>	TokenNameRIGHT_SHIFT	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:296:5: ( K_UPDATE cf= columnFamilyName ( usingClause[attrs] )? K_SET termPairWithOperation[columns] ( ',' termPairWithOperation[columns] )* K_WHERE wclause= whereClause ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:296:5: ( K_UPDATE cf= columnFamilyName ( usingClause[attrs] )? K_SET termPairWithOperation[columns] ( ',' termPairWithOperation[columns] )* K_WHERE wclause= whereClause ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:296:7: K_UPDATE cf= columnFamilyName ( usingClause[attrs] )? K_SET termPairWithOperation[columns] ( ',' termPairWithOperation[columns] )* K_WHERE wclause= whereClause 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:296:7: K_UPDATE cf= columnFamilyName ( usingClause[attrs] )? K_SET termPairWithOperation[columns] ( ',' termPairWithOperation[columns] )* K_WHERE wclause= whereClause 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_UPDATE	TokenNameIdentifier	 K  UPDATE
,	TokenNameCOMMA	
FOLLOW_K_UPDATE_in_updateStatement1301	TokenNameIdentifier	 FOLLOW  K  UPDATE in update Statement1301
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_updateStatement1305	TokenNameIdentifier	 FOLLOW column Family Name in update Statement1305
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:297:7: ( usingClause[attrs] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:297:7: ( usingClause[attrs] )? 
int	TokenNameint	
alt23	TokenNameIdentifier	 alt23
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA23_0	TokenNameIdentifier	 L A23 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA23_0	TokenNameIdentifier	 L A23 0
==	TokenNameEQUAL_EQUAL	
K_USING	TokenNameIdentifier	 K  USING
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt23	TokenNameIdentifier	 alt23
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt23	TokenNameIdentifier	 alt23
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:297:9: usingClause[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:297:9: usingClause[attrs] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClause_in_updateStatement1315	TokenNameIdentifier	 FOLLOW using Clause in update Statement1315
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClause	TokenNameIdentifier	 using Clause
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_SET	TokenNameIdentifier	 K  SET
,	TokenNameCOMMA	
FOLLOW_K_SET_in_updateStatement1327	TokenNameIdentifier	 FOLLOW  K  SET in update Statement1327
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_termPairWithOperation_in_updateStatement1329	TokenNameIdentifier	 FOLLOW term Pair With Operation in update Statement1329
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
termPairWithOperation	TokenNameIdentifier	 term Pair With Operation
(	TokenNameLPAREN	
columns	TokenNameIdentifier	 columns
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:298:44: ( ',' termPairWithOperation[columns] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:298:44: ( ',' termPairWithOperation[columns] )* 
loop24	TokenNameIdentifier	 loop24
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt24	TokenNameIdentifier	 alt24
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA24_0	TokenNameIdentifier	 L A24 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA24_0	TokenNameIdentifier	 L A24 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt24	TokenNameIdentifier	 alt24
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt24	TokenNameIdentifier	 alt24
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:298:45: ',' termPairWithOperation[columns] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:298:45: ',' termPairWithOperation[columns] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_updateStatement1333	TokenNameIdentifier	 FOLLOW 127 in update Statement1333
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_termPairWithOperation_in_updateStatement1335	TokenNameIdentifier	 FOLLOW term Pair With Operation in update Statement1335
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
termPairWithOperation	TokenNameIdentifier	 term Pair With Operation
(	TokenNameLPAREN	
columns	TokenNameIdentifier	 columns
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop24	TokenNameIdentifier	 loop24
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WHERE	TokenNameIdentifier	 K  WHERE
,	TokenNameCOMMA	
FOLLOW_K_WHERE_in_updateStatement1346	TokenNameIdentifier	 FOLLOW  K  WHERE in update Statement1346
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_whereClause_in_updateStatement1350	TokenNameIdentifier	 FOLLOW where Clause in update Statement1350
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
wclause	TokenNameIdentifier	 wclause
=	TokenNameEQUAL	
whereClause	TokenNameIdentifier	 where Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
new	TokenNamenew	
UpdateStatement	TokenNameIdentifier	 Update Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
,	TokenNameCOMMA	
columns	TokenNameIdentifier	 columns
,	TokenNameCOMMA	
wclause	TokenNameIdentifier	 wclause
,	TokenNameCOMMA	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "updateStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "updateStatement" 
// $ANTLR start "deleteStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "deleteStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:305:1: deleteStatement returns [DeleteStatement expr] : K_DELETE (ids= deleteSelection )? K_FROM cf= columnFamilyName ( usingClauseDelete[attrs] )? K_WHERE wclause= whereClause ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:305:1: deleteStatement returns [DeleteStatement expr] : K_DELETE (ids= deleteSelection )? K_FROM cf= columnFamilyName ( usingClauseDelete[attrs] )? K_WHERE wclause= whereClause ; 
public	TokenNamepublic	
final	TokenNamefinal	
DeleteStatement	TokenNameIdentifier	 Delete Statement
deleteStatement	TokenNameIdentifier	 delete Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
DeleteStatement	TokenNameIdentifier	 Delete Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
ids	TokenNameIdentifier	 ids
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
wclause	TokenNameIdentifier	 wclause
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
=	TokenNameEQUAL	
new	TokenNamenew	
Attributes	TokenNameIdentifier	 Attributes
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
columnsList	TokenNameIdentifier	 columns List
=	TokenNameEQUAL	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
emptyList	TokenNameIdentifier	 empty List
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:5: ( K_DELETE (ids= deleteSelection )? K_FROM cf= columnFamilyName ( usingClauseDelete[attrs] )? K_WHERE wclause= whereClause ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:5: ( K_DELETE (ids= deleteSelection )? K_FROM cf= columnFamilyName ( usingClauseDelete[attrs] )? K_WHERE wclause= whereClause ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:7: K_DELETE (ids= deleteSelection )? K_FROM cf= columnFamilyName ( usingClauseDelete[attrs] )? K_WHERE wclause= whereClause 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:7: K_DELETE (ids= deleteSelection )? K_FROM cf= columnFamilyName ( usingClauseDelete[attrs] )? K_WHERE wclause= whereClause 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DELETE	TokenNameIdentifier	 K  DELETE
,	TokenNameCOMMA	
FOLLOW_K_DELETE_in_deleteStatement1390	TokenNameIdentifier	 FOLLOW  K  DELETE in delete Statement1390
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:16: (ids= deleteSelection )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:16: (ids= deleteSelection )? 
int	TokenNameint	
alt25	TokenNameIdentifier	 alt25
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA25_0	TokenNameIdentifier	 L A25 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA25_0	TokenNameIdentifier	 L A25 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA25_0	TokenNameIdentifier	 L A25 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA25_0	TokenNameIdentifier	 L A25 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA25_0	TokenNameIdentifier	 L A25 0
==	TokenNameEQUAL_EQUAL	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA25_0	TokenNameIdentifier	 L A25 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA25_0	TokenNameIdentifier	 L A25 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt25	TokenNameIdentifier	 alt25
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt25	TokenNameIdentifier	 alt25
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:18: ids= deleteSelection 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:316:18: ids= deleteSelection 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_deleteSelection_in_deleteStatement1396	TokenNameIdentifier	 FOLLOW delete Selection in delete Statement1396
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ids	TokenNameIdentifier	 ids
=	TokenNameEQUAL	
deleteSelection	TokenNameIdentifier	 delete Selection
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
columnsList	TokenNameIdentifier	 columns List
=	TokenNameEQUAL	
ids	TokenNameIdentifier	 ids
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_FROM	TokenNameIdentifier	 K  FROM
,	TokenNameCOMMA	
FOLLOW_K_FROM_in_deleteStatement1409	TokenNameIdentifier	 FOLLOW  K  FROM in delete Statement1409
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_deleteStatement1413	TokenNameIdentifier	 FOLLOW column Family Name in delete Statement1413
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:318:7: ( usingClauseDelete[attrs] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:318:7: ( usingClauseDelete[attrs] )? 
int	TokenNameint	
alt26	TokenNameIdentifier	 alt26
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA26_0	TokenNameIdentifier	 L A26 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA26_0	TokenNameIdentifier	 L A26 0
==	TokenNameEQUAL_EQUAL	
K_USING	TokenNameIdentifier	 K  USING
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt26	TokenNameIdentifier	 alt26
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt26	TokenNameIdentifier	 alt26
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:318:9: usingClauseDelete[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:318:9: usingClauseDelete[attrs] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClauseDelete_in_deleteStatement1423	TokenNameIdentifier	 FOLLOW using Clause Delete in delete Statement1423
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClauseDelete	TokenNameIdentifier	 using Clause Delete
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WHERE	TokenNameIdentifier	 K  WHERE
,	TokenNameCOMMA	
FOLLOW_K_WHERE_in_deleteStatement1435	TokenNameIdentifier	 FOLLOW  K  WHERE in delete Statement1435
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_whereClause_in_deleteStatement1439	TokenNameIdentifier	 FOLLOW where Clause in delete Statement1439
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
wclause	TokenNameIdentifier	 wclause
=	TokenNameEQUAL	
whereClause	TokenNameIdentifier	 where Clause
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
new	TokenNamenew	
DeleteStatement	TokenNameIdentifier	 Delete Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
,	TokenNameCOMMA	
columnsList	TokenNameIdentifier	 columns List
,	TokenNameCOMMA	
wclause	TokenNameIdentifier	 wclause
,	TokenNameCOMMA	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "deleteStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "deleteStatement" 
// $ANTLR start "deleteSelection" 	TokenNameCOMMENT_LINE	$ANTLR start "deleteSelection" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:325:1: deleteSelection returns [List<Selector> expr] : t1= deleteSelector ( ',' tN= deleteSelector )* ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:325:1: deleteSelection returns [List<Selector> expr] : t1= deleteSelector ( ',' tN= deleteSelector )* ; 
public	TokenNamepublic	
final	TokenNamefinal	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
deleteSelection	TokenNameIdentifier	 delete Selection
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Selector	TokenNameIdentifier	 Selector
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Selector	TokenNameIdentifier	 Selector
tN	TokenNameIdentifier	 t N
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:5: (t1= deleteSelector ( ',' tN= deleteSelector )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:5: (t1= deleteSelector ( ',' tN= deleteSelector )* ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:7: t1= deleteSelector ( ',' tN= deleteSelector )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:7: t1= deleteSelector ( ',' tN= deleteSelector )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_deleteSelector_in_deleteSelection1470	TokenNameIdentifier	 FOLLOW delete Selector in delete Selection1470
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
deleteSelector	TokenNameIdentifier	 delete Selector
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Selector	TokenNameIdentifier	 Selector
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
t1	TokenNameIdentifier	 t1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:79: ( ',' tN= deleteSelector )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:79: ( ',' tN= deleteSelector )* 
loop27	TokenNameIdentifier	 loop27
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA27_0	TokenNameIdentifier	 L A27 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA27_0	TokenNameIdentifier	 L A27 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt27	TokenNameIdentifier	 alt27
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt27	TokenNameIdentifier	 alt27
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:80: ',' tN= deleteSelector 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:326:80: ',' tN= deleteSelector 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_deleteSelection1475	TokenNameIdentifier	 FOLLOW 127 in delete Selection1475
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_deleteSelector_in_deleteSelection1479	TokenNameIdentifier	 FOLLOW delete Selector in delete Selection1479
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tN	TokenNameIdentifier	 t N
=	TokenNameEQUAL	
deleteSelector	TokenNameIdentifier	 delete Selector
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
tN	TokenNameIdentifier	 t N
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop27	TokenNameIdentifier	 loop27
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "deleteSelection" 	TokenNameCOMMENT_LINE	$ANTLR end "deleteSelection" 
// $ANTLR start "deleteSelector" 	TokenNameCOMMENT_LINE	$ANTLR start "deleteSelector" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:329:1: deleteSelector returns [Selector s] : (c= cident | c= cident '[' t= term ']' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:329:1: deleteSelector returns [Selector s] : (c= cident | c= cident '[' t= term ']' ); 
public	TokenNamepublic	
final	TokenNamefinal	
Selector	TokenNameIdentifier	 Selector
deleteSelector	TokenNameIdentifier	 delete Selector
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Selector	TokenNameIdentifier	 Selector
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:330:5: (c= cident | c= cident '[' t= term ']' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:330:5: (c= cident | c= cident '[' t= term ']' ) 
int	TokenNameint	
alt28	TokenNameIdentifier	 alt28
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt28	TokenNameIdentifier	 alt28
=	TokenNameEQUAL	
dfa28	TokenNameIdentifier	 dfa28
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt28	TokenNameIdentifier	 alt28
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:330:7: c= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:330:7: c= cident 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_deleteSelector1506	TokenNameIdentifier	 FOLLOW cident in delete Selector1506
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:331:7: c= cident '[' t= term ']' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:331:7: c= cident '[' t= term ']' 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_deleteSelector1533	TokenNameIdentifier	 FOLLOW cident in delete Selector1533
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
129	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_129_in_deleteSelector1535	TokenNameIdentifier	 FOLLOW 129 in delete Selector1535
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_deleteSelector1539	TokenNameIdentifier	 FOLLOW term in delete Selector1539
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
130	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_130_in_deleteSelector1541	TokenNameIdentifier	 FOLLOW 130 in delete Selector1541
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
new	TokenNamenew	
Selector	TokenNameIdentifier	 Selector
.	TokenNameDOT	
WithKey	TokenNameIdentifier	 With Key
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
,	TokenNameCOMMA	
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
s	TokenNameIdentifier	 s
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "deleteSelector" 	TokenNameCOMMENT_LINE	$ANTLR end "deleteSelector" 
// $ANTLR start "batchStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "batchStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:334:1: batchStatement returns [BatchStatement expr] : K_BEGIN ( K_UNLOGGED | K_COUNTER )? K_BATCH ( usingClause[attrs] )? s1= batchStatementObjective ( ';' )? (sN= batchStatementObjective ( ';' )? )* K_APPLY K_BATCH ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:334:1: batchStatement returns [BatchStatement expr] : K_BEGIN ( K_UNLOGGED | K_COUNTER )? K_BATCH ( usingClause[attrs] )? s1= batchStatementObjective ( ';' )? (sN= batchStatementObjective ( ';' )? )* K_APPLY K_BATCH ; 
public	TokenNamepublic	
final	TokenNamefinal	
BatchStatement	TokenNameIdentifier	 Batch Statement
batchStatement	TokenNameIdentifier	 batch Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
BatchStatement	TokenNameIdentifier	 Batch Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ModificationStatement	TokenNameIdentifier	 Modification Statement
s1	TokenNameIdentifier	 s1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ModificationStatement	TokenNameIdentifier	 Modification Statement
sN	TokenNameIdentifier	 s N
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
BatchStatement	TokenNameIdentifier	 Batch Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
BatchStatement	TokenNameIdentifier	 Batch Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
LOGGED	TokenNameIdentifier	 LOGGED
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
ModificationStatement	TokenNameIdentifier	 Modification Statement
>	TokenNameGREATER	
statements	TokenNameIdentifier	 statements
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
ModificationStatement	TokenNameIdentifier	 Modification Statement
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Attributes	TokenNameIdentifier	 Attributes
attrs	TokenNameIdentifier	 attrs
=	TokenNameEQUAL	
new	TokenNamenew	
Attributes	TokenNameIdentifier	 Attributes
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:364:5: ( K_BEGIN ( K_UNLOGGED | K_COUNTER )? K_BATCH ( usingClause[attrs] )? s1= batchStatementObjective ( ';' )? (sN= batchStatementObjective ( ';' )? )* K_APPLY K_BATCH ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:364:5: ( K_BEGIN ( K_UNLOGGED | K_COUNTER )? K_BATCH ( usingClause[attrs] )? s1= batchStatementObjective ( ';' )? (sN= batchStatementObjective ( ';' )? )* K_APPLY K_BATCH ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:364:7: K_BEGIN ( K_UNLOGGED | K_COUNTER )? K_BATCH ( usingClause[attrs] )? s1= batchStatementObjective ( ';' )? (sN= batchStatementObjective ( ';' )? )* K_APPLY K_BATCH 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:364:7: K_BEGIN ( K_UNLOGGED | K_COUNTER )? K_BATCH ( usingClause[attrs] )? s1= batchStatementObjective ( ';' )? (sN= batchStatementObjective ( ';' )? )* K_APPLY K_BATCH 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BEGIN	TokenNameIdentifier	 K  BEGIN
,	TokenNameCOMMA	
FOLLOW_K_BEGIN_in_batchStatement1575	TokenNameIdentifier	 FOLLOW  K  BEGIN in batch Statement1575
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:365:7: ( K_UNLOGGED | K_COUNTER )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:365:7: ( K_UNLOGGED | K_COUNTER )? 
int	TokenNameint	
alt29	TokenNameIdentifier	 alt29
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA29_0	TokenNameIdentifier	 L A29 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA29_0	TokenNameIdentifier	 L A29 0
==	TokenNameEQUAL_EQUAL	
K_UNLOGGED	TokenNameIdentifier	 K  UNLOGGED
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt29	TokenNameIdentifier	 alt29
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA29_0	TokenNameIdentifier	 L A29 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt29	TokenNameIdentifier	 alt29
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt29	TokenNameIdentifier	 alt29
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:365:9: K_UNLOGGED 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:365:9: K_UNLOGGED 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_UNLOGGED	TokenNameIdentifier	 K  UNLOGGED
,	TokenNameCOMMA	
FOLLOW_K_UNLOGGED_in_batchStatement1585	TokenNameIdentifier	 FOLLOW  K  UNLOGGED in batch Statement1585
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
BatchStatement	TokenNameIdentifier	 Batch Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
UNLOGGED	TokenNameIdentifier	 UNLOGGED
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:365:63: K_COUNTER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:365:63: K_COUNTER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
,	TokenNameCOMMA	
FOLLOW_K_COUNTER_in_batchStatement1591	TokenNameIdentifier	 FOLLOW  K  COUNTER in batch Statement1591
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
BatchStatement	TokenNameIdentifier	 Batch Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
COUNTER	TokenNameIdentifier	 COUNTER
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BATCH	TokenNameIdentifier	 K  BATCH
,	TokenNameCOMMA	
FOLLOW_K_BATCH_in_batchStatement1604	TokenNameIdentifier	 FOLLOW  K  BATCH in batch Statement1604
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:366:15: ( usingClause[attrs] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:366:15: ( usingClause[attrs] )? 
int	TokenNameint	
alt30	TokenNameIdentifier	 alt30
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA30_0	TokenNameIdentifier	 L A30 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA30_0	TokenNameIdentifier	 L A30 0
==	TokenNameEQUAL_EQUAL	
K_USING	TokenNameIdentifier	 K  USING
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt30	TokenNameIdentifier	 alt30
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt30	TokenNameIdentifier	 alt30
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:366:17: usingClause[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:366:17: usingClause[attrs] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_usingClause_in_batchStatement1608	TokenNameIdentifier	 FOLLOW using Clause in batch Statement1608
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
usingClause	TokenNameIdentifier	 using Clause
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_batchStatementObjective_in_batchStatement1626	TokenNameIdentifier	 FOLLOW batch Statement Objective in batch Statement1626
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
s1	TokenNameIdentifier	 s1
=	TokenNameEQUAL	
batchStatementObjective	TokenNameIdentifier	 batch Statement Objective
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:38: ( ';' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:38: ( ';' )? 
int	TokenNameint	
alt31	TokenNameIdentifier	 alt31
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA31_0	TokenNameIdentifier	 L A31 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA31_0	TokenNameIdentifier	 L A31 0
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt31	TokenNameIdentifier	 alt31
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt31	TokenNameIdentifier	 alt31
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:38: ';' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:38: ';' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
124	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_124_in_batchStatement1628	TokenNameIdentifier	 FOLLOW 124 in batch Statement1628
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
statements	TokenNameIdentifier	 statements
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
s1	TokenNameIdentifier	 s1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:67: (sN= batchStatementObjective ( ';' )? )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:67: (sN= batchStatementObjective ( ';' )? )* 
loop33	TokenNameIdentifier	 loop33
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt33	TokenNameIdentifier	 alt33
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA33_0	TokenNameIdentifier	 L A33 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA33_0	TokenNameIdentifier	 L A33 0
==	TokenNameEQUAL_EQUAL	
K_INSERT	TokenNameIdentifier	 K  INSERT
||	TokenNameOR_OR	
LA33_0	TokenNameIdentifier	 L A33 0
==	TokenNameEQUAL_EQUAL	
K_UPDATE	TokenNameIdentifier	 K  UPDATE
||	TokenNameOR_OR	
LA33_0	TokenNameIdentifier	 L A33 0
==	TokenNameEQUAL_EQUAL	
K_DELETE	TokenNameIdentifier	 K  DELETE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt33	TokenNameIdentifier	 alt33
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt33	TokenNameIdentifier	 alt33
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:69: sN= batchStatementObjective ( ';' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:69: sN= batchStatementObjective ( ';' )? 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_batchStatementObjective_in_batchStatement1637	TokenNameIdentifier	 FOLLOW batch Statement Objective in batch Statement1637
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sN	TokenNameIdentifier	 s N
=	TokenNameEQUAL	
batchStatementObjective	TokenNameIdentifier	 batch Statement Objective
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:96: ( ';' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:96: ( ';' )? 
int	TokenNameint	
alt32	TokenNameIdentifier	 alt32
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA32_0	TokenNameIdentifier	 L A32 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA32_0	TokenNameIdentifier	 L A32 0
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt32	TokenNameIdentifier	 alt32
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt32	TokenNameIdentifier	 alt32
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:96: ';' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:367:96: ';' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
124	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_124_in_batchStatement1639	TokenNameIdentifier	 FOLLOW 124 in batch Statement1639
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
statements	TokenNameIdentifier	 statements
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
sN	TokenNameIdentifier	 s N
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop33	TokenNameIdentifier	 loop33
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_APPLY	TokenNameIdentifier	 K  APPLY
,	TokenNameCOMMA	
FOLLOW_K_APPLY_in_batchStatement1653	TokenNameIdentifier	 FOLLOW  K  APPLY in batch Statement1653
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BATCH	TokenNameIdentifier	 K  BATCH
,	TokenNameCOMMA	
FOLLOW_K_BATCH_in_batchStatement1655	TokenNameIdentifier	 FOLLOW  K  BATCH in batch Statement1655
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
return	TokenNamereturn	
new	TokenNamenew	
BatchStatement	TokenNameIdentifier	 Batch Statement
(	TokenNameLPAREN	
type	TokenNameIdentifier	 type
,	TokenNameCOMMA	
statements	TokenNameIdentifier	 statements
,	TokenNameCOMMA	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "batchStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "batchStatement" 
// $ANTLR start "batchStatementObjective" 	TokenNameCOMMENT_LINE	$ANTLR start "batchStatementObjective" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:374:1: batchStatementObjective returns [ModificationStatement statement] : (i= insertStatement | u= updateStatement | d= deleteStatement ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:374:1: batchStatementObjective returns [ModificationStatement statement] : (i= insertStatement | u= updateStatement | d= deleteStatement ); 
public	TokenNamepublic	
final	TokenNamefinal	
ModificationStatement	TokenNameIdentifier	 Modification Statement
batchStatementObjective	TokenNameIdentifier	 batch Statement Objective
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ModificationStatement	TokenNameIdentifier	 Modification Statement
statement	TokenNameIdentifier	 statement
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UpdateStatement	TokenNameIdentifier	 Update Statement
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UpdateStatement	TokenNameIdentifier	 Update Statement
u	TokenNameIdentifier	 u
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DeleteStatement	TokenNameIdentifier	 Delete Statement
d	TokenNameIdentifier	 d
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:375:5: (i= insertStatement | u= updateStatement | d= deleteStatement ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:375:5: (i= insertStatement | u= updateStatement | d= deleteStatement ) 
int	TokenNameint	
alt34	TokenNameIdentifier	 alt34
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_INSERT	TokenNameIdentifier	 K  INSERT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt34	TokenNameIdentifier	 alt34
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_UPDATE	TokenNameIdentifier	 K  UPDATE
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt34	TokenNameIdentifier	 alt34
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_DELETE	TokenNameIdentifier	 K  DELETE
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt34	TokenNameIdentifier	 alt34
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
34	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt34	TokenNameIdentifier	 alt34
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:375:7: i= insertStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:375:7: i= insertStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_insertStatement_in_batchStatementObjective1686	TokenNameIdentifier	 FOLLOW insert Statement in batch Statement Objective1686
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
insertStatement	TokenNameIdentifier	 insert Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
statement	TokenNameIdentifier	 statement
=	TokenNameEQUAL	
i	TokenNameIdentifier	 i
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:376:7: u= updateStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:376:7: u= updateStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_updateStatement_in_batchStatementObjective1699	TokenNameIdentifier	 FOLLOW update Statement in batch Statement Objective1699
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
u	TokenNameIdentifier	 u
=	TokenNameEQUAL	
updateStatement	TokenNameIdentifier	 update Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
statement	TokenNameIdentifier	 statement
=	TokenNameEQUAL	
u	TokenNameIdentifier	 u
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:377:7: d= deleteStatement 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:377:7: d= deleteStatement 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_deleteStatement_in_batchStatementObjective1712	TokenNameIdentifier	 FOLLOW delete Statement in batch Statement Objective1712
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
d	TokenNameIdentifier	 d
=	TokenNameEQUAL	
deleteStatement	TokenNameIdentifier	 delete Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
statement	TokenNameIdentifier	 statement
=	TokenNameEQUAL	
d	TokenNameIdentifier	 d
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
statement	TokenNameIdentifier	 statement
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "batchStatementObjective" 	TokenNameCOMMENT_LINE	$ANTLR end "batchStatementObjective" 
// $ANTLR start "createKeyspaceStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "createKeyspaceStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:380:1: createKeyspaceStatement returns [CreateKeyspaceStatement expr] : K_CREATE K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:380:1: createKeyspaceStatement returns [CreateKeyspaceStatement expr] : K_CREATE K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ; 
public	TokenNamepublic	
final	TokenNamefinal	
CreateKeyspaceStatement	TokenNameIdentifier	 Create Keyspace Statement
createKeyspaceStatement	TokenNameIdentifier	 create Keyspace Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CreateKeyspaceStatement	TokenNameIdentifier	 Create Keyspace Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
KSPropDefs	TokenNameIdentifier	 KS Prop Defs
attrs	TokenNameIdentifier	 attrs
=	TokenNameEQUAL	
new	TokenNamenew	
KSPropDefs	TokenNameIdentifier	 KS Prop Defs
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:385:5: ( K_CREATE K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:385:5: ( K_CREATE K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:385:7: K_CREATE K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:385:7: K_CREATE K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_CREATE	TokenNameIdentifier	 K  CREATE
,	TokenNameCOMMA	
FOLLOW_K_CREATE_in_createKeyspaceStatement1747	TokenNameIdentifier	 FOLLOW  K  CREATE in create Keyspace Statement1747
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEYSPACE	TokenNameIdentifier	 K  KEYSPACE
,	TokenNameCOMMA	
FOLLOW_K_KEYSPACE_in_createKeyspaceStatement1749	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in create Keyspace Statement1749
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspaceName_in_createKeyspaceStatement1753	TokenNameIdentifier	 FOLLOW keyspace Name in create Keyspace Statement1753
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
keyspaceName	TokenNameIdentifier	 keyspace Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WITH	TokenNameIdentifier	 K  WITH
,	TokenNameCOMMA	
FOLLOW_K_WITH_in_createKeyspaceStatement1761	TokenNameIdentifier	 FOLLOW  K  WITH in create Keyspace Statement1761
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_properties_in_createKeyspaceStatement1763	TokenNameIdentifier	 FOLLOW properties in create Keyspace Statement1763
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
properties	TokenNameIdentifier	 properties
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
CreateKeyspaceStatement	TokenNameIdentifier	 Create Keyspace Statement
(	TokenNameLPAREN	
ks	TokenNameIdentifier	 ks
,	TokenNameCOMMA	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "createKeyspaceStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "createKeyspaceStatement" 
// $ANTLR start "createColumnFamilyStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "createColumnFamilyStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:389:1: createColumnFamilyStatement returns [CreateColumnFamilyStatement.RawStatement expr] : K_CREATE K_COLUMNFAMILY cf= columnFamilyName cfamDefinition[expr] ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:389:1: createColumnFamilyStatement returns [CreateColumnFamilyStatement.RawStatement expr] : K_CREATE K_COLUMNFAMILY cf= columnFamilyName cfamDefinition[expr] ; 
public	TokenNamepublic	
final	TokenNamefinal	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
createColumnFamilyStatement	TokenNameIdentifier	 create Column Family Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:397:5: ( K_CREATE K_COLUMNFAMILY cf= columnFamilyName cfamDefinition[expr] ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:397:5: ( K_CREATE K_COLUMNFAMILY cf= columnFamilyName cfamDefinition[expr] ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:397:7: K_CREATE K_COLUMNFAMILY cf= columnFamilyName cfamDefinition[expr] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:397:7: K_CREATE K_COLUMNFAMILY cf= columnFamilyName cfamDefinition[expr] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_CREATE	TokenNameIdentifier	 K  CREATE
,	TokenNameCOMMA	
FOLLOW_K_CREATE_in_createColumnFamilyStatement1789	TokenNameIdentifier	 FOLLOW  K  CREATE in create Column Family Statement1789
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
,	TokenNameCOMMA	
FOLLOW_K_COLUMNFAMILY_in_createColumnFamilyStatement1791	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in create Column Family Statement1791
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_createColumnFamilyStatement1795	TokenNameIdentifier	 FOLLOW column Family Name in create Column Family Statement1795
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamDefinition_in_createColumnFamilyStatement1805	TokenNameIdentifier	 FOLLOW cfam Definition in create Column Family Statement1805
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamDefinition	TokenNameIdentifier	 cfam Definition
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "createColumnFamilyStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "createColumnFamilyStatement" 
// $ANTLR start "cfamDefinition" 	TokenNameCOMMENT_LINE	$ANTLR start "cfamDefinition" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:401:1: cfamDefinition[CreateColumnFamilyStatement.RawStatement expr] : '(' cfamColumns[expr] ( ',' ( cfamColumns[expr] )? )* ')' ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:401:1: cfamDefinition[CreateColumnFamilyStatement.RawStatement expr] : '(' cfamColumns[expr] ( ',' ( cfamColumns[expr] )? )* ')' ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
cfamDefinition	TokenNameIdentifier	 cfam Definition
(	TokenNameLPAREN	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:5: ( '(' cfamColumns[expr] ( ',' ( cfamColumns[expr] )? )* ')' ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:5: ( '(' cfamColumns[expr] ( ',' ( cfamColumns[expr] )? )* ')' ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:7: '(' cfamColumns[expr] ( ',' ( cfamColumns[expr] )? )* ')' ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:7: '(' cfamColumns[expr] ( ',' ( cfamColumns[expr] )? )* ')' ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_cfamDefinition1824	TokenNameIdentifier	 FOLLOW 125 in cfam Definition1824
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamColumns_in_cfamDefinition1826	TokenNameIdentifier	 FOLLOW cfam Columns in cfam Definition1826
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamColumns	TokenNameIdentifier	 cfam Columns
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:29: ( ',' ( cfamColumns[expr] )? )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:29: ( ',' ( cfamColumns[expr] )? )* 
loop36	TokenNameIdentifier	 loop36
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt36	TokenNameIdentifier	 alt36
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA36_0	TokenNameIdentifier	 L A36 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA36_0	TokenNameIdentifier	 L A36 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt36	TokenNameIdentifier	 alt36
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt36	TokenNameIdentifier	 alt36
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:31: ',' ( cfamColumns[expr] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:31: ',' ( cfamColumns[expr] )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_cfamDefinition1831	TokenNameIdentifier	 FOLLOW 127 in cfam Definition1831
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:35: ( cfamColumns[expr] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:35: ( cfamColumns[expr] )? 
int	TokenNameint	
alt35	TokenNameIdentifier	 alt35
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA35_0	TokenNameIdentifier	 L A35 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA35_0	TokenNameIdentifier	 L A35 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA35_0	TokenNameIdentifier	 L A35 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA35_0	TokenNameIdentifier	 L A35 0
>=	TokenNameGREATER_EQUAL	
K_PRIMARY	TokenNameIdentifier	 K  PRIMARY
&&	TokenNameAND_AND	
LA35_0	TokenNameIdentifier	 L A35 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA35_0	TokenNameIdentifier	 L A35 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA35_0	TokenNameIdentifier	 L A35 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA35_0	TokenNameIdentifier	 L A35 0
==	TokenNameEQUAL_EQUAL	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA35_0	TokenNameIdentifier	 L A35 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA35_0	TokenNameIdentifier	 L A35 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt35	TokenNameIdentifier	 alt35
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt35	TokenNameIdentifier	 alt35
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:35: cfamColumns[expr] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:402:35: cfamColumns[expr] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamColumns_in_cfamDefinition1833	TokenNameIdentifier	 FOLLOW cfam Columns in cfam Definition1833
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamColumns	TokenNameIdentifier	 cfam Columns
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop36	TokenNameIdentifier	 loop36
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_cfamDefinition1840	TokenNameIdentifier	 FOLLOW 126 in cfam Definition1840
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:7: ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:7: ( K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* )? 
int	TokenNameint	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA38_0	TokenNameIdentifier	 L A38 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA38_0	TokenNameIdentifier	 L A38 0
==	TokenNameEQUAL_EQUAL	
K_WITH	TokenNameIdentifier	 K  WITH
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt38	TokenNameIdentifier	 alt38
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt38	TokenNameIdentifier	 alt38
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:9: K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:9: K_WITH cfamProperty[expr] ( K_AND cfamProperty[expr] )* 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WITH	TokenNameIdentifier	 K  WITH
,	TokenNameCOMMA	
FOLLOW_K_WITH_in_cfamDefinition1850	TokenNameIdentifier	 FOLLOW  K  WITH in cfam Definition1850
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamProperty_in_cfamDefinition1852	TokenNameIdentifier	 FOLLOW cfam Property in cfam Definition1852
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamProperty	TokenNameIdentifier	 cfam Property
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:35: ( K_AND cfamProperty[expr] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:35: ( K_AND cfamProperty[expr] )* 
loop37	TokenNameIdentifier	 loop37
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA37_0	TokenNameIdentifier	 L A37 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA37_0	TokenNameIdentifier	 L A37 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt37	TokenNameIdentifier	 alt37
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt37	TokenNameIdentifier	 alt37
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:37: K_AND cfamProperty[expr] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:403:37: K_AND cfamProperty[expr] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_AND	TokenNameIdentifier	 K  AND
,	TokenNameCOMMA	
FOLLOW_K_AND_in_cfamDefinition1857	TokenNameIdentifier	 FOLLOW  K  AND in cfam Definition1857
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamProperty_in_cfamDefinition1859	TokenNameIdentifier	 FOLLOW cfam Property in cfam Definition1859
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamProperty	TokenNameIdentifier	 cfam Property
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop37	TokenNameIdentifier	 loop37
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cfamDefinition" 	TokenNameCOMMENT_LINE	$ANTLR end "cfamDefinition" 
// $ANTLR start "cfamColumns" 	TokenNameCOMMENT_LINE	$ANTLR start "cfamColumns" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:406:1: cfamColumns[CreateColumnFamilyStatement.RawStatement expr] : (k= cident v= comparatorType ( K_PRIMARY K_KEY )? | K_PRIMARY K_KEY '(' pkDef[expr] ( ',' c= cident )* ')' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:406:1: cfamColumns[CreateColumnFamilyStatement.RawStatement expr] : (k= cident v= comparatorType ( K_PRIMARY K_KEY )? | K_PRIMARY K_KEY '(' pkDef[expr] ( ',' c= cident )* ')' ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
cfamColumns	TokenNameIdentifier	 cfam Columns
(	TokenNameLPAREN	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:5: (k= cident v= comparatorType ( K_PRIMARY K_KEY )? | K_PRIMARY K_KEY '(' pkDef[expr] ( ',' c= cident )* ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:5: (k= cident v= comparatorType ( K_PRIMARY K_KEY )? | K_PRIMARY K_KEY '(' pkDef[expr] ( ',' c= cident )* ')' ) 
int	TokenNameint	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA41_0	TokenNameIdentifier	 L A41 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA41_0	TokenNameIdentifier	 L A41 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA41_0	TokenNameIdentifier	 L A41 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA41_0	TokenNameIdentifier	 L A41 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA41_0	TokenNameIdentifier	 L A41 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA41_0	TokenNameIdentifier	 L A41 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA41_0	TokenNameIdentifier	 L A41 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA41_0	TokenNameIdentifier	 L A41 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA41_0	TokenNameIdentifier	 L A41 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA41_0	TokenNameIdentifier	 L A41 0
==	TokenNameEQUAL_EQUAL	
K_PRIMARY	TokenNameIdentifier	 K  PRIMARY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt41	TokenNameIdentifier	 alt41
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
41	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt41	TokenNameIdentifier	 alt41
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:7: k= cident v= comparatorType ( K_PRIMARY K_KEY )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:7: k= cident v= comparatorType ( K_PRIMARY K_KEY )? 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_cfamColumns1885	TokenNameIdentifier	 FOLLOW cident in cfam Columns1885
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_cfamColumns1889	TokenNameIdentifier	 FOLLOW comparator Type in cfam Columns1889
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
addDefinition	TokenNameIdentifier	 add Definition
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
,	TokenNameCOMMA	
v	TokenNameIdentifier	 v
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:64: ( K_PRIMARY K_KEY )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:64: ( K_PRIMARY K_KEY )? 
int	TokenNameint	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA39_0	TokenNameIdentifier	 L A39 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA39_0	TokenNameIdentifier	 L A39 0
==	TokenNameEQUAL_EQUAL	
K_PRIMARY	TokenNameIdentifier	 K  PRIMARY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt39	TokenNameIdentifier	 alt39
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt39	TokenNameIdentifier	 alt39
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:65: K_PRIMARY K_KEY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:407:65: K_PRIMARY K_KEY 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_PRIMARY	TokenNameIdentifier	 K  PRIMARY
,	TokenNameCOMMA	
FOLLOW_K_PRIMARY_in_cfamColumns1894	TokenNameIdentifier	 FOLLOW  K  PRIMARY in cfam Columns1894
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEY	TokenNameIdentifier	 K  KEY
,	TokenNameCOMMA	
FOLLOW_K_KEY_in_cfamColumns1896	TokenNameIdentifier	 FOLLOW  K  KEY in cfam Columns1896
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
addKeyAliases	TokenNameIdentifier	 add Key Aliases
(	TokenNameLPAREN	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
singletonList	TokenNameIdentifier	 singleton List
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:408:7: K_PRIMARY K_KEY '(' pkDef[expr] ( ',' c= cident )* ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:408:7: K_PRIMARY K_KEY '(' pkDef[expr] ( ',' c= cident )* ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_PRIMARY	TokenNameIdentifier	 K  PRIMARY
,	TokenNameCOMMA	
FOLLOW_K_PRIMARY_in_cfamColumns1908	TokenNameIdentifier	 FOLLOW  K  PRIMARY in cfam Columns1908
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEY	TokenNameIdentifier	 K  KEY
,	TokenNameCOMMA	
FOLLOW_K_KEY_in_cfamColumns1910	TokenNameIdentifier	 FOLLOW  K  KEY in cfam Columns1910
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_cfamColumns1912	TokenNameIdentifier	 FOLLOW 125 in cfam Columns1912
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_pkDef_in_cfamColumns1914	TokenNameIdentifier	 FOLLOW pk Def in cfam Columns1914
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pkDef	TokenNameIdentifier	 pk Def
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:408:39: ( ',' c= cident )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:408:39: ( ',' c= cident )* 
loop40	TokenNameIdentifier	 loop40
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt40	TokenNameIdentifier	 alt40
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA40_0	TokenNameIdentifier	 L A40 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA40_0	TokenNameIdentifier	 L A40 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt40	TokenNameIdentifier	 alt40
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt40	TokenNameIdentifier	 alt40
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:408:40: ',' c= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:408:40: ',' c= cident 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_cfamColumns1918	TokenNameIdentifier	 FOLLOW 127 in cfam Columns1918
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_cfamColumns1922	TokenNameIdentifier	 FOLLOW cident in cfam Columns1922
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
addColumnAlias	TokenNameIdentifier	 add Column Alias
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop40	TokenNameIdentifier	 loop40
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_cfamColumns1929	TokenNameIdentifier	 FOLLOW 126 in cfam Columns1929
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cfamColumns" 	TokenNameCOMMENT_LINE	$ANTLR end "cfamColumns" 
// $ANTLR start "pkDef" 	TokenNameCOMMENT_LINE	$ANTLR start "pkDef" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:411:1: pkDef[CreateColumnFamilyStatement.RawStatement expr] : (k= cident | '(' k1= cident ( ',' kn= cident )* ')' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:411:1: pkDef[CreateColumnFamilyStatement.RawStatement expr] : (k= cident | '(' k1= cident ( ',' kn= cident )* ')' ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
pkDef	TokenNameIdentifier	 pk Def
(	TokenNameLPAREN	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
k1	TokenNameIdentifier	 k1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
kn	TokenNameIdentifier	 kn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:412:5: (k= cident | '(' k1= cident ( ',' kn= cident )* ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:412:5: (k= cident | '(' k1= cident ( ',' kn= cident )* ')' ) 
int	TokenNameint	
alt43	TokenNameIdentifier	 alt43
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA43_0	TokenNameIdentifier	 L A43 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA43_0	TokenNameIdentifier	 L A43 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA43_0	TokenNameIdentifier	 L A43 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA43_0	TokenNameIdentifier	 L A43 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA43_0	TokenNameIdentifier	 L A43 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA43_0	TokenNameIdentifier	 L A43 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA43_0	TokenNameIdentifier	 L A43 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA43_0	TokenNameIdentifier	 L A43 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA43_0	TokenNameIdentifier	 L A43 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt43	TokenNameIdentifier	 alt43
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA43_0	TokenNameIdentifier	 L A43 0
==	TokenNameEQUAL_EQUAL	
125	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt43	TokenNameIdentifier	 alt43
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
43	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt43	TokenNameIdentifier	 alt43
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:412:7: k= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:412:7: k= cident 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_pkDef1949	TokenNameIdentifier	 FOLLOW cident in pk Def1949
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
addKeyAliases	TokenNameIdentifier	 add Key Aliases
(	TokenNameLPAREN	
Collections	TokenNameIdentifier	 Collections
.	TokenNameDOT	
singletonList	TokenNameIdentifier	 singleton List
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:413:7: '(' k1= cident ( ',' kn= cident )* ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:413:7: '(' k1= cident ( ',' kn= cident )* ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_pkDef1959	TokenNameIdentifier	 FOLLOW 125 in pk Def1959
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
l	TokenNameIdentifier	 l
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_pkDef1965	TokenNameIdentifier	 FOLLOW cident in pk Def1965
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k1	TokenNameIdentifier	 k1
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
k1	TokenNameIdentifier	 k1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:413:102: ( ',' kn= cident )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:413:102: ( ',' kn= cident )* 
loop42	TokenNameIdentifier	 loop42
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt42	TokenNameIdentifier	 alt42
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA42_0	TokenNameIdentifier	 L A42 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA42_0	TokenNameIdentifier	 L A42 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt42	TokenNameIdentifier	 alt42
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt42	TokenNameIdentifier	 alt42
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:413:104: ',' kn= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:413:104: ',' kn= cident 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_pkDef1971	TokenNameIdentifier	 FOLLOW 127 in pk Def1971
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_pkDef1975	TokenNameIdentifier	 FOLLOW cident in pk Def1975
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
kn	TokenNameIdentifier	 kn
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
kn	TokenNameIdentifier	 kn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop42	TokenNameIdentifier	 loop42
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_pkDef1982	TokenNameIdentifier	 FOLLOW 126 in pk Def1982
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
addKeyAliases	TokenNameIdentifier	 add Key Aliases
(	TokenNameLPAREN	
l	TokenNameIdentifier	 l
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "pkDef" 	TokenNameCOMMENT_LINE	$ANTLR end "pkDef" 
// $ANTLR start "cfamProperty" 	TokenNameCOMMENT_LINE	$ANTLR start "cfamProperty" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:416:1: cfamProperty[CreateColumnFamilyStatement.RawStatement expr] : ( property[expr.properties] | K_COMPACT K_STORAGE | K_CLUSTERING K_ORDER K_BY '(' cfamOrdering[expr] ( ',' cfamOrdering[expr] )* ')' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:416:1: cfamProperty[CreateColumnFamilyStatement.RawStatement expr] : ( property[expr.properties] | K_COMPACT K_STORAGE | K_CLUSTERING K_ORDER K_BY '(' cfamOrdering[expr] ( ',' cfamOrdering[expr] )* ')' ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
cfamProperty	TokenNameIdentifier	 cfam Property
(	TokenNameLPAREN	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:417:5: ( property[expr.properties] | K_COMPACT K_STORAGE | K_CLUSTERING K_ORDER K_BY '(' cfamOrdering[expr] ( ',' cfamOrdering[expr] )* ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:417:5: ( property[expr.properties] | K_COMPACT K_STORAGE | K_CLUSTERING K_ORDER K_BY '(' cfamOrdering[expr] ( ',' cfamOrdering[expr] )* ')' ) 
int	TokenNameint	
alt45	TokenNameIdentifier	 alt45
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_COUNT	TokenNameIdentifier	 K  COUNT
:	TokenNameCOLON	
case	TokenNamecase	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
:	TokenNameCOLON	
case	TokenNamecase	
K_TTL	TokenNameIdentifier	 K  TTL
:	TokenNameCOLON	
case	TokenNamecase	
K_VALUES	TokenNameIdentifier	 K  VALUES
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
case	TokenNamecase	
K_KEY	TokenNameIdentifier	 K  KEY
:	TokenNameCOLON	
case	TokenNamecase	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
:	TokenNameCOLON	
case	TokenNamecase	
IDENT	TokenNameIdentifier	 IDENT
:	TokenNameCOLON	
case	TokenNamecase	
K_TYPE	TokenNameIdentifier	 K  TYPE
:	TokenNameCOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
case	TokenNamecase	
K_ALL	TokenNameIdentifier	 K  ALL
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
:	TokenNameCOLON	
case	TokenNamecase	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
:	TokenNameCOLON	
case	TokenNamecase	
K_USER	TokenNameIdentifier	 K  USER
:	TokenNameCOLON	
case	TokenNamecase	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_USERS	TokenNameIdentifier	 K  USERS
:	TokenNameCOLON	
case	TokenNamecase	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
:	TokenNameCOLON	
case	TokenNamecase	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
:	TokenNameCOLON	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt45	TokenNameIdentifier	 alt45
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA45_2	TokenNameIdentifier	 L A45 2
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA45_2	TokenNameIdentifier	 L A45 2
==	TokenNameEQUAL_EQUAL	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt45	TokenNameIdentifier	 alt45
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA45_2	TokenNameIdentifier	 L A45 2
==	TokenNameEQUAL_EQUAL	
135	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt45	TokenNameIdentifier	 alt45
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
45	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
2	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA45_3	TokenNameIdentifier	 L A45 3
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA45_3	TokenNameIdentifier	 L A45 3
==	TokenNameEQUAL_EQUAL	
K_ORDER	TokenNameIdentifier	 K  ORDER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt45	TokenNameIdentifier	 alt45
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA45_3	TokenNameIdentifier	 L A45 3
==	TokenNameEQUAL_EQUAL	
135	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt45	TokenNameIdentifier	 alt45
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
45	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
3	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
45	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt45	TokenNameIdentifier	 alt45
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:417:7: property[expr.properties] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:417:7: property[expr.properties] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_property_in_cfamProperty2002	TokenNameIdentifier	 FOLLOW property in cfam Property2002
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
property	TokenNameIdentifier	 property
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
properties	TokenNameIdentifier	 properties
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:418:7: K_COMPACT K_STORAGE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:418:7: K_COMPACT K_STORAGE 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
,	TokenNameCOMMA	
FOLLOW_K_COMPACT_in_cfamProperty2011	TokenNameIdentifier	 FOLLOW  K  COMPACT in cfam Property2011
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
,	TokenNameCOMMA	
FOLLOW_K_STORAGE_in_cfamProperty2013	TokenNameIdentifier	 FOLLOW  K  STORAGE in cfam Property2013
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
setCompactStorage	TokenNameIdentifier	 set Compact Storage
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:419:7: K_CLUSTERING K_ORDER K_BY '(' cfamOrdering[expr] ( ',' cfamOrdering[expr] )* ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:419:7: K_CLUSTERING K_ORDER K_BY '(' cfamOrdering[expr] ( ',' cfamOrdering[expr] )* ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
,	TokenNameCOMMA	
FOLLOW_K_CLUSTERING_in_cfamProperty2023	TokenNameIdentifier	 FOLLOW  K  CLUSTERING in cfam Property2023
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ORDER	TokenNameIdentifier	 K  ORDER
,	TokenNameCOMMA	
FOLLOW_K_ORDER_in_cfamProperty2025	TokenNameIdentifier	 FOLLOW  K  ORDER in cfam Property2025
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BY	TokenNameIdentifier	 K  BY
,	TokenNameCOMMA	
FOLLOW_K_BY_in_cfamProperty2027	TokenNameIdentifier	 FOLLOW  K  BY in cfam Property2027
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_cfamProperty2029	TokenNameIdentifier	 FOLLOW 125 in cfam Property2029
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamOrdering_in_cfamProperty2031	TokenNameIdentifier	 FOLLOW cfam Ordering in cfam Property2031
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamOrdering	TokenNameIdentifier	 cfam Ordering
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:419:56: ( ',' cfamOrdering[expr] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:419:56: ( ',' cfamOrdering[expr] )* 
loop44	TokenNameIdentifier	 loop44
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt44	TokenNameIdentifier	 alt44
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA44_0	TokenNameIdentifier	 L A44 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA44_0	TokenNameIdentifier	 L A44 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt44	TokenNameIdentifier	 alt44
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt44	TokenNameIdentifier	 alt44
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:419:57: ',' cfamOrdering[expr] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:419:57: ',' cfamOrdering[expr] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_cfamProperty2035	TokenNameIdentifier	 FOLLOW 127 in cfam Property2035
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfamOrdering_in_cfamProperty2037	TokenNameIdentifier	 FOLLOW cfam Ordering in cfam Property2037
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfamOrdering	TokenNameIdentifier	 cfam Ordering
(	TokenNameLPAREN	
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop44	TokenNameIdentifier	 loop44
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_cfamProperty2042	TokenNameIdentifier	 FOLLOW 126 in cfam Property2042
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cfamProperty" 	TokenNameCOMMENT_LINE	$ANTLR end "cfamProperty" 
// $ANTLR start "cfamOrdering" 	TokenNameCOMMENT_LINE	$ANTLR start "cfamOrdering" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:422:1: cfamOrdering[CreateColumnFamilyStatement.RawStatement expr] : k= cident ( K_ASC | K_DESC ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:422:1: cfamOrdering[CreateColumnFamilyStatement.RawStatement expr] : k= cident ( K_ASC | K_DESC ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
cfamOrdering	TokenNameIdentifier	 cfam Ordering
(	TokenNameLPAREN	
CreateColumnFamilyStatement	TokenNameIdentifier	 Create Column Family Statement
.	TokenNameDOT	
RawStatement	TokenNameIdentifier	 Raw Statement
expr	TokenNameIdentifier	 expr
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
reversed	TokenNameIdentifier	 reversed
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:5: (k= cident ( K_ASC | K_DESC ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:5: (k= cident ( K_ASC | K_DESC ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:7: k= cident ( K_ASC | K_DESC ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:7: k= cident ( K_ASC | K_DESC ) 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_cfamOrdering2070	TokenNameIdentifier	 FOLLOW cident in cfam Ordering2070
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:16: ( K_ASC | K_DESC ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:16: ( K_ASC | K_DESC ) 
int	TokenNameint	
alt46	TokenNameIdentifier	 alt46
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA46_0	TokenNameIdentifier	 L A46 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA46_0	TokenNameIdentifier	 L A46 0
==	TokenNameEQUAL_EQUAL	
K_ASC	TokenNameIdentifier	 K  ASC
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt46	TokenNameIdentifier	 alt46
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA46_0	TokenNameIdentifier	 L A46 0
==	TokenNameEQUAL_EQUAL	
K_DESC	TokenNameIdentifier	 K  DESC
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt46	TokenNameIdentifier	 alt46
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
46	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt46	TokenNameIdentifier	 alt46
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:17: K_ASC 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:17: K_ASC 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ASC	TokenNameIdentifier	 K  ASC
,	TokenNameCOMMA	
FOLLOW_K_ASC_in_cfamOrdering2073	TokenNameIdentifier	 FOLLOW  K  ASC in cfam Ordering2073
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:25: K_DESC 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:424:25: K_DESC 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DESC	TokenNameIdentifier	 K  DESC
,	TokenNameCOMMA	
FOLLOW_K_DESC_in_cfamOrdering2077	TokenNameIdentifier	 FOLLOW  K  DESC in cfam Ordering2077
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
reversed	TokenNameIdentifier	 reversed
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
expr	TokenNameIdentifier	 expr
.	TokenNameDOT	
setOrdering	TokenNameIdentifier	 set Ordering
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
,	TokenNameCOMMA	
reversed	TokenNameIdentifier	 reversed
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cfamOrdering" 	TokenNameCOMMENT_LINE	$ANTLR end "cfamOrdering" 
// $ANTLR start "createIndexStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "createIndexStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:427:1: createIndexStatement returns [CreateIndexStatement expr] : K_CREATE K_INDEX (idxName= IDENT )? K_ON cf= columnFamilyName '(' id= cident ')' ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:427:1: createIndexStatement returns [CreateIndexStatement expr] : K_CREATE K_INDEX (idxName= IDENT )? K_ON cf= columnFamilyName '(' id= cident ')' ; 
public	TokenNamepublic	
final	TokenNamefinal	
CreateIndexStatement	TokenNameIdentifier	 Create Index Statement
createIndexStatement	TokenNameIdentifier	 create Index Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CreateIndexStatement	TokenNameIdentifier	 Create Index Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
idxName	TokenNameIdentifier	 idx Name
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:5: ( K_CREATE K_INDEX (idxName= IDENT )? K_ON cf= columnFamilyName '(' id= cident ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:5: ( K_CREATE K_INDEX (idxName= IDENT )? K_ON cf= columnFamilyName '(' id= cident ')' ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:7: K_CREATE K_INDEX (idxName= IDENT )? K_ON cf= columnFamilyName '(' id= cident ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:7: K_CREATE K_INDEX (idxName= IDENT )? K_ON cf= columnFamilyName '(' id= cident ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_CREATE	TokenNameIdentifier	 K  CREATE
,	TokenNameCOMMA	
FOLLOW_K_CREATE_in_createIndexStatement2106	TokenNameIdentifier	 FOLLOW  K  CREATE in create Index Statement2106
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_INDEX	TokenNameIdentifier	 K  INDEX
,	TokenNameCOMMA	
FOLLOW_K_INDEX_in_createIndexStatement2108	TokenNameIdentifier	 FOLLOW  K  INDEX in create Index Statement2108
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:24: (idxName= IDENT )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:24: (idxName= IDENT )? 
int	TokenNameint	
alt47	TokenNameIdentifier	 alt47
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA47_0	TokenNameIdentifier	 L A47 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA47_0	TokenNameIdentifier	 L A47 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt47	TokenNameIdentifier	 alt47
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt47	TokenNameIdentifier	 alt47
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:25: idxName= IDENT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:431:25: idxName= IDENT 
{	TokenNameLBRACE	
idxName	TokenNameIdentifier	 idx Name
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IDENT	TokenNameIdentifier	 IDENT
,	TokenNameCOMMA	
FOLLOW_IDENT_in_createIndexStatement2113	TokenNameIdentifier	 FOLLOW  IDENT in create Index Statement2113
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ON	TokenNameIdentifier	 K  ON
,	TokenNameCOMMA	
FOLLOW_K_ON_in_createIndexStatement2117	TokenNameIdentifier	 FOLLOW  K  ON in create Index Statement2117
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_createIndexStatement2121	TokenNameIdentifier	 FOLLOW column Family Name in create Index Statement2121
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_createIndexStatement2123	TokenNameIdentifier	 FOLLOW 125 in create Index Statement2123
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_createIndexStatement2127	TokenNameIdentifier	 FOLLOW cident in create Index Statement2127
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_createIndexStatement2129	TokenNameIdentifier	 FOLLOW 126 in create Index Statement2129
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
CreateIndexStatement	TokenNameIdentifier	 Create Index Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
,	TokenNameCOMMA	
(	TokenNameLPAREN	
idxName	TokenNameIdentifier	 idx Name
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
idxName	TokenNameIdentifier	 idx Name
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
id	TokenNameIdentifier	 id
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "createIndexStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "createIndexStatement" 
// $ANTLR start "alterKeyspaceStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "alterKeyspaceStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:435:1: alterKeyspaceStatement returns [AlterKeyspaceStatement expr] : K_ALTER K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:435:1: alterKeyspaceStatement returns [AlterKeyspaceStatement expr] : K_ALTER K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ; 
public	TokenNamepublic	
final	TokenNamefinal	
AlterKeyspaceStatement	TokenNameIdentifier	 Alter Keyspace Statement
alterKeyspaceStatement	TokenNameIdentifier	 alter Keyspace Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
AlterKeyspaceStatement	TokenNameIdentifier	 Alter Keyspace Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
KSPropDefs	TokenNameIdentifier	 KS Prop Defs
attrs	TokenNameIdentifier	 attrs
=	TokenNameEQUAL	
new	TokenNamenew	
KSPropDefs	TokenNameIdentifier	 KS Prop Defs
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:440:5: ( K_ALTER K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:440:5: ( K_ALTER K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:440:7: K_ALTER K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:440:7: K_ALTER K_KEYSPACE ks= keyspaceName K_WITH properties[attrs] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALTER	TokenNameIdentifier	 K  ALTER
,	TokenNameCOMMA	
FOLLOW_K_ALTER_in_alterKeyspaceStatement2169	TokenNameIdentifier	 FOLLOW  K  ALTER in alter Keyspace Statement2169
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEYSPACE	TokenNameIdentifier	 K  KEYSPACE
,	TokenNameCOMMA	
FOLLOW_K_KEYSPACE_in_alterKeyspaceStatement2171	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in alter Keyspace Statement2171
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspaceName_in_alterKeyspaceStatement2175	TokenNameIdentifier	 FOLLOW keyspace Name in alter Keyspace Statement2175
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
keyspaceName	TokenNameIdentifier	 keyspace Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WITH	TokenNameIdentifier	 K  WITH
,	TokenNameCOMMA	
FOLLOW_K_WITH_in_alterKeyspaceStatement2185	TokenNameIdentifier	 FOLLOW  K  WITH in alter Keyspace Statement2185
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_properties_in_alterKeyspaceStatement2187	TokenNameIdentifier	 FOLLOW properties in alter Keyspace Statement2187
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
properties	TokenNameIdentifier	 properties
(	TokenNameLPAREN	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
AlterKeyspaceStatement	TokenNameIdentifier	 Alter Keyspace Statement
(	TokenNameLPAREN	
ks	TokenNameIdentifier	 ks
,	TokenNameCOMMA	
attrs	TokenNameIdentifier	 attrs
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "alterKeyspaceStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "alterKeyspaceStatement" 
// $ANTLR start "alterTableStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "alterTableStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:445:1: alterTableStatement returns [AlterTableStatement expr] : K_ALTER K_COLUMNFAMILY cf= columnFamilyName ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:445:1: alterTableStatement returns [AlterTableStatement expr] : K_ALTER K_COLUMNFAMILY cf= columnFamilyName ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
alterTableStatement	TokenNameIdentifier	 alter Table Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
id1	TokenNameIdentifier	 id1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
toId1	TokenNameIdentifier	 to Id1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
idn	TokenNameIdentifier	 idn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
toIdn	TokenNameIdentifier	 to Idn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFPropDefs	TokenNameIdentifier	 CF Prop Defs
props	TokenNameIdentifier	 props
=	TokenNameEQUAL	
new	TokenNamenew	
CFPropDefs	TokenNameIdentifier	 CF Prop Defs
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
renames	TokenNameIdentifier	 renames
=	TokenNameEQUAL	
new	TokenNamenew	
HashMap	TokenNameIdentifier	 Hash Map
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:458:5: ( K_ALTER K_COLUMNFAMILY cf= columnFamilyName ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:458:5: ( K_ALTER K_COLUMNFAMILY cf= columnFamilyName ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:458:7: K_ALTER K_COLUMNFAMILY cf= columnFamilyName ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:458:7: K_ALTER K_COLUMNFAMILY cf= columnFamilyName ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALTER	TokenNameIdentifier	 K  ALTER
,	TokenNameCOMMA	
FOLLOW_K_ALTER_in_alterTableStatement2223	TokenNameIdentifier	 FOLLOW  K  ALTER in alter Table Statement2223
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
,	TokenNameCOMMA	
FOLLOW_K_COLUMNFAMILY_in_alterTableStatement2225	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in alter Table Statement2225
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_alterTableStatement2229	TokenNameIdentifier	 FOLLOW column Family Name in alter Table Statement2229
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:459:11: ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:459:11: ( K_ALTER id= cident K_TYPE v= comparatorType | K_ADD id= cident v= comparatorType | K_WITH properties[props] | K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* ) 
int	TokenNameint	
alt49	TokenNameIdentifier	 alt49
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_ALTER	TokenNameIdentifier	 K  ALTER
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt49	TokenNameIdentifier	 alt49
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_ADD	TokenNameIdentifier	 K  ADD
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt49	TokenNameIdentifier	 alt49
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_WITH	TokenNameIdentifier	 K  WITH
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt49	TokenNameIdentifier	 alt49
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_RENAME	TokenNameIdentifier	 K  RENAME
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt49	TokenNameIdentifier	 alt49
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
49	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt49	TokenNameIdentifier	 alt49
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:459:13: K_ALTER id= cident K_TYPE v= comparatorType 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:459:13: K_ALTER id= cident K_TYPE v= comparatorType 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALTER	TokenNameIdentifier	 K  ALTER
,	TokenNameCOMMA	
FOLLOW_K_ALTER_in_alterTableStatement2243	TokenNameIdentifier	 FOLLOW  K  ALTER in alter Table Statement2243
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_alterTableStatement2247	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2247
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TYPE	TokenNameIdentifier	 K  TYPE
,	TokenNameCOMMA	
FOLLOW_K_TYPE_in_alterTableStatement2249	TokenNameIdentifier	 FOLLOW  K  TYPE in alter Table Statement2249
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_alterTableStatement2253	TokenNameIdentifier	 FOLLOW comparator Type in alter Table Statement2253
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
ALTER	TokenNameIdentifier	 ALTER
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:460:13: K_ADD id= cident v= comparatorType 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:460:13: K_ADD id= cident v= comparatorType 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ADD	TokenNameIdentifier	 K  ADD
,	TokenNameCOMMA	
FOLLOW_K_ADD_in_alterTableStatement2269	TokenNameIdentifier	 FOLLOW  K  ADD in alter Table Statement2269
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_alterTableStatement2275	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2275
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_alterTableStatement2279	TokenNameIdentifier	 FOLLOW comparator Type in alter Table Statement2279
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
ADD	TokenNameIdentifier	 ADD
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:462:13: K_WITH properties[props] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:462:13: K_WITH properties[props] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WITH	TokenNameIdentifier	 K  WITH
,	TokenNameCOMMA	
FOLLOW_K_WITH_in_alterTableStatement2313	TokenNameIdentifier	 FOLLOW  K  WITH in alter Table Statement2313
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_properties_in_alterTableStatement2316	TokenNameIdentifier	 FOLLOW properties in alter Table Statement2316
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
properties	TokenNameIdentifier	 properties
(	TokenNameLPAREN	
props	TokenNameIdentifier	 props
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
OPTS	TokenNameIdentifier	 OPTS
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:463:13: K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:463:13: K_RENAME id1= cident K_TO toId1= cident ( K_AND idn= cident K_TO toIdn= cident )* 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_RENAME	TokenNameIdentifier	 K  RENAME
,	TokenNameCOMMA	
FOLLOW_K_RENAME_in_alterTableStatement2349	TokenNameIdentifier	 FOLLOW  K  RENAME in alter Table Statement2349
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
RENAME	TokenNameIdentifier	 RENAME
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_alterTableStatement2403	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2403
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
id1	TokenNameIdentifier	 id1
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TO	TokenNameIdentifier	 K  TO
,	TokenNameCOMMA	
FOLLOW_K_TO_in_alterTableStatement2405	TokenNameIdentifier	 FOLLOW  K  TO in alter Table Statement2405
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_alterTableStatement2409	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2409
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
toId1	TokenNameIdentifier	 to Id1
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
renames	TokenNameIdentifier	 renames
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
id1	TokenNameIdentifier	 id1
,	TokenNameCOMMA	
toId1	TokenNameIdentifier	 to Id1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:465:16: ( K_AND idn= cident K_TO toIdn= cident )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:465:16: ( K_AND idn= cident K_TO toIdn= cident )* 
loop48	TokenNameIdentifier	 loop48
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt48	TokenNameIdentifier	 alt48
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA48_0	TokenNameIdentifier	 L A48 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA48_0	TokenNameIdentifier	 L A48 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt48	TokenNameIdentifier	 alt48
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt48	TokenNameIdentifier	 alt48
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:465:18: K_AND idn= cident K_TO toIdn= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:465:18: K_AND idn= cident K_TO toIdn= cident 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_AND	TokenNameIdentifier	 K  AND
,	TokenNameCOMMA	
FOLLOW_K_AND_in_alterTableStatement2430	TokenNameIdentifier	 FOLLOW  K  AND in alter Table Statement2430
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_alterTableStatement2434	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2434
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
idn	TokenNameIdentifier	 idn
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TO	TokenNameIdentifier	 K  TO
,	TokenNameCOMMA	
FOLLOW_K_TO_in_alterTableStatement2436	TokenNameIdentifier	 FOLLOW  K  TO in alter Table Statement2436
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_alterTableStatement2440	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2440
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
toIdn	TokenNameIdentifier	 to Idn
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
renames	TokenNameIdentifier	 renames
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
idn	TokenNameIdentifier	 idn
,	TokenNameCOMMA	
toIdn	TokenNameIdentifier	 to Idn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop48	TokenNameIdentifier	 loop48
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
AlterTableStatement	TokenNameIdentifier	 Alter Table Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
,	TokenNameCOMMA	
type	TokenNameIdentifier	 type
,	TokenNameCOMMA	
id	TokenNameIdentifier	 id
,	TokenNameCOMMA	
v	TokenNameIdentifier	 v
,	TokenNameCOMMA	
props	TokenNameIdentifier	 props
,	TokenNameCOMMA	
renames	TokenNameIdentifier	 renames
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "alterTableStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "alterTableStatement" 
// $ANTLR start "dropKeyspaceStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "dropKeyspaceStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:472:1: dropKeyspaceStatement returns [DropKeyspaceStatement ksp] : K_DROP K_KEYSPACE ks= keyspaceName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:472:1: dropKeyspaceStatement returns [DropKeyspaceStatement ksp] : K_DROP K_KEYSPACE ks= keyspaceName ; 
public	TokenNamepublic	
final	TokenNamefinal	
DropKeyspaceStatement	TokenNameIdentifier	 Drop Keyspace Statement
dropKeyspaceStatement	TokenNameIdentifier	 drop Keyspace Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
DropKeyspaceStatement	TokenNameIdentifier	 Drop Keyspace Statement
ksp	TokenNameIdentifier	 ksp
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:476:5: ( K_DROP K_KEYSPACE ks= keyspaceName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:476:5: ( K_DROP K_KEYSPACE ks= keyspaceName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:476:7: K_DROP K_KEYSPACE ks= keyspaceName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:476:7: K_DROP K_KEYSPACE ks= keyspaceName 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DROP	TokenNameIdentifier	 K  DROP
,	TokenNameCOMMA	
FOLLOW_K_DROP_in_dropKeyspaceStatement2486	TokenNameIdentifier	 FOLLOW  K  DROP in drop Keyspace Statement2486
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEYSPACE	TokenNameIdentifier	 K  KEYSPACE
,	TokenNameCOMMA	
FOLLOW_K_KEYSPACE_in_dropKeyspaceStatement2488	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in drop Keyspace Statement2488
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspaceName_in_dropKeyspaceStatement2492	TokenNameIdentifier	 FOLLOW keyspace Name in drop Keyspace Statement2492
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
keyspaceName	TokenNameIdentifier	 keyspace Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
ksp	TokenNameIdentifier	 ksp
=	TokenNameEQUAL	
new	TokenNamenew	
DropKeyspaceStatement	TokenNameIdentifier	 Drop Keyspace Statement
(	TokenNameLPAREN	
ks	TokenNameIdentifier	 ks
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
ksp	TokenNameIdentifier	 ksp
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "dropKeyspaceStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "dropKeyspaceStatement" 
// $ANTLR start "dropColumnFamilyStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "dropColumnFamilyStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:479:1: dropColumnFamilyStatement returns [DropColumnFamilyStatement stmt] : K_DROP K_COLUMNFAMILY cf= columnFamilyName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:479:1: dropColumnFamilyStatement returns [DropColumnFamilyStatement stmt] : K_DROP K_COLUMNFAMILY cf= columnFamilyName ; 
public	TokenNamepublic	
final	TokenNamefinal	
DropColumnFamilyStatement	TokenNameIdentifier	 Drop Column Family Statement
dropColumnFamilyStatement	TokenNameIdentifier	 drop Column Family Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
DropColumnFamilyStatement	TokenNameIdentifier	 Drop Column Family Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:483:5: ( K_DROP K_COLUMNFAMILY cf= columnFamilyName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:483:5: ( K_DROP K_COLUMNFAMILY cf= columnFamilyName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:483:7: K_DROP K_COLUMNFAMILY cf= columnFamilyName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:483:7: K_DROP K_COLUMNFAMILY cf= columnFamilyName 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DROP	TokenNameIdentifier	 K  DROP
,	TokenNameCOMMA	
FOLLOW_K_DROP_in_dropColumnFamilyStatement2517	TokenNameIdentifier	 FOLLOW  K  DROP in drop Column Family Statement2517
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
,	TokenNameCOMMA	
FOLLOW_K_COLUMNFAMILY_in_dropColumnFamilyStatement2519	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in drop Column Family Statement2519
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_dropColumnFamilyStatement2523	TokenNameIdentifier	 FOLLOW column Family Name in drop Column Family Statement2523
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
DropColumnFamilyStatement	TokenNameIdentifier	 Drop Column Family Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "dropColumnFamilyStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "dropColumnFamilyStatement" 
// $ANTLR start "dropIndexStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "dropIndexStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:486:1: dropIndexStatement returns [DropIndexStatement expr] : K_DROP K_INDEX index= IDENT ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:486:1: dropIndexStatement returns [DropIndexStatement expr] : K_DROP K_INDEX index= IDENT ; 
public	TokenNamepublic	
final	TokenNamefinal	
DropIndexStatement	TokenNameIdentifier	 Drop Index Statement
dropIndexStatement	TokenNameIdentifier	 drop Index Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
DropIndexStatement	TokenNameIdentifier	 Drop Index Statement
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
index	TokenNameIdentifier	 index
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:490:5: ( K_DROP K_INDEX index= IDENT ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:490:5: ( K_DROP K_INDEX index= IDENT ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:491:7: K_DROP K_INDEX index= IDENT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:491:7: K_DROP K_INDEX index= IDENT 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DROP	TokenNameIdentifier	 K  DROP
,	TokenNameCOMMA	
FOLLOW_K_DROP_in_dropIndexStatement2554	TokenNameIdentifier	 FOLLOW  K  DROP in drop Index Statement2554
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_INDEX	TokenNameIdentifier	 K  INDEX
,	TokenNameCOMMA	
FOLLOW_K_INDEX_in_dropIndexStatement2556	TokenNameIdentifier	 FOLLOW  K  INDEX in drop Index Statement2556
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
index	TokenNameIdentifier	 index
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IDENT	TokenNameIdentifier	 IDENT
,	TokenNameCOMMA	
FOLLOW_IDENT_in_dropIndexStatement2560	TokenNameIdentifier	 FOLLOW  IDENT in drop Index Statement2560
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
expr	TokenNameIdentifier	 expr
=	TokenNameEQUAL	
new	TokenNamenew	
DropIndexStatement	TokenNameIdentifier	 Drop Index Statement
(	TokenNameLPAREN	
(	TokenNameLPAREN	
index	TokenNameIdentifier	 index
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
index	TokenNameIdentifier	 index
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
expr	TokenNameIdentifier	 expr
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "dropIndexStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "dropIndexStatement" 
// $ANTLR start "truncateStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "truncateStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:495:1: truncateStatement returns [TruncateStatement stmt] : K_TRUNCATE cf= columnFamilyName ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:495:1: truncateStatement returns [TruncateStatement stmt] : K_TRUNCATE cf= columnFamilyName ; 
public	TokenNamepublic	
final	TokenNamefinal	
TruncateStatement	TokenNameIdentifier	 Truncate Statement
truncateStatement	TokenNameIdentifier	 truncate Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
TruncateStatement	TokenNameIdentifier	 Truncate Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:499:5: ( K_TRUNCATE cf= columnFamilyName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:499:5: ( K_TRUNCATE cf= columnFamilyName ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:499:7: K_TRUNCATE cf= columnFamilyName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:499:7: K_TRUNCATE cf= columnFamilyName 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TRUNCATE	TokenNameIdentifier	 K  TRUNCATE
,	TokenNameCOMMA	
FOLLOW_K_TRUNCATE_in_truncateStatement2591	TokenNameIdentifier	 FOLLOW  K  TRUNCATE in truncate Statement2591
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_truncateStatement2595	TokenNameIdentifier	 FOLLOW column Family Name in truncate Statement2595
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
TruncateStatement	TokenNameIdentifier	 Truncate Statement
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "truncateStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "truncateStatement" 
// $ANTLR start "grantStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "grantStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:502:1: grantStatement returns [GrantStatement stmt] : K_GRANT permissionOrAll K_ON resource K_TO username ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:502:1: grantStatement returns [GrantStatement stmt] : K_GRANT permissionOrAll K_ON resource K_TO username ; 
public	TokenNamepublic	
final	TokenNamefinal	
GrantStatement	TokenNameIdentifier	 Grant Statement
grantStatement	TokenNameIdentifier	 grant Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
GrantStatement	TokenNameIdentifier	 Grant Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Set	TokenNameIdentifier	 Set
<	TokenNameLESS	
Permission	TokenNameIdentifier	 Permission
>	TokenNameGREATER	
permissionOrAll1	TokenNameIdentifier	 permission Or All1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
IResource	TokenNameIdentifier	 I Resource
resource2	TokenNameIdentifier	 resource2
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username3	TokenNameIdentifier	 username3
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:506:5: ( K_GRANT permissionOrAll K_ON resource K_TO username ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:506:5: ( K_GRANT permissionOrAll K_ON resource K_TO username ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:506:7: K_GRANT permissionOrAll K_ON resource K_TO username 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:506:7: K_GRANT permissionOrAll K_ON resource K_TO username 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_GRANT	TokenNameIdentifier	 K  GRANT
,	TokenNameCOMMA	
FOLLOW_K_GRANT_in_grantStatement2620	TokenNameIdentifier	 FOLLOW  K  GRANT in grant Statement2620
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_permissionOrAll_in_grantStatement2632	TokenNameIdentifier	 FOLLOW permission Or All in grant Statement2632
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
permissionOrAll1	TokenNameIdentifier	 permission Or All1
=	TokenNameEQUAL	
permissionOrAll	TokenNameIdentifier	 permission Or All
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ON	TokenNameIdentifier	 K  ON
,	TokenNameCOMMA	
FOLLOW_K_ON_in_grantStatement2640	TokenNameIdentifier	 FOLLOW  K  ON in grant Statement2640
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_resource_in_grantStatement2652	TokenNameIdentifier	 FOLLOW resource in grant Statement2652
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
resource2	TokenNameIdentifier	 resource2
=	TokenNameEQUAL	
resource	TokenNameIdentifier	 resource
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TO	TokenNameIdentifier	 K  TO
,	TokenNameCOMMA	
FOLLOW_K_TO_in_grantStatement2660	TokenNameIdentifier	 FOLLOW  K  TO in grant Statement2660
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_grantStatement2672	TokenNameIdentifier	 FOLLOW username in grant Statement2672
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username3	TokenNameIdentifier	 username3
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
GrantStatement	TokenNameIdentifier	 Grant Statement
(	TokenNameLPAREN	
permissionOrAll1	TokenNameIdentifier	 permission Or All1
,	TokenNameCOMMA	
resource2	TokenNameIdentifier	 resource2
,	TokenNameCOMMA	
(	TokenNameLPAREN	
username3	TokenNameIdentifier	 username3
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
username3	TokenNameIdentifier	 username3
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
username3	TokenNameIdentifier	 username3
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "grantStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "grantStatement" 
// $ANTLR start "revokeStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "revokeStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:515:1: revokeStatement returns [RevokeStatement stmt] : K_REVOKE permissionOrAll K_ON resource K_FROM username ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:515:1: revokeStatement returns [RevokeStatement stmt] : K_REVOKE permissionOrAll K_ON resource K_FROM username ; 
public	TokenNamepublic	
final	TokenNamefinal	
RevokeStatement	TokenNameIdentifier	 Revoke Statement
revokeStatement	TokenNameIdentifier	 revoke Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
RevokeStatement	TokenNameIdentifier	 Revoke Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Set	TokenNameIdentifier	 Set
<	TokenNameLESS	
Permission	TokenNameIdentifier	 Permission
>	TokenNameGREATER	
permissionOrAll4	TokenNameIdentifier	 permission Or All4
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
IResource	TokenNameIdentifier	 I Resource
resource5	TokenNameIdentifier	 resource5
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username6	TokenNameIdentifier	 username6
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:519:5: ( K_REVOKE permissionOrAll K_ON resource K_FROM username ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:519:5: ( K_REVOKE permissionOrAll K_ON resource K_FROM username ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:519:7: K_REVOKE permissionOrAll K_ON resource K_FROM username 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:519:7: K_REVOKE permissionOrAll K_ON resource K_FROM username 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_REVOKE	TokenNameIdentifier	 K  REVOKE
,	TokenNameCOMMA	
FOLLOW_K_REVOKE_in_revokeStatement2703	TokenNameIdentifier	 FOLLOW  K  REVOKE in revoke Statement2703
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_permissionOrAll_in_revokeStatement2715	TokenNameIdentifier	 FOLLOW permission Or All in revoke Statement2715
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
permissionOrAll4	TokenNameIdentifier	 permission Or All4
=	TokenNameEQUAL	
permissionOrAll	TokenNameIdentifier	 permission Or All
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ON	TokenNameIdentifier	 K  ON
,	TokenNameCOMMA	
FOLLOW_K_ON_in_revokeStatement2723	TokenNameIdentifier	 FOLLOW  K  ON in revoke Statement2723
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_resource_in_revokeStatement2735	TokenNameIdentifier	 FOLLOW resource in revoke Statement2735
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
resource5	TokenNameIdentifier	 resource5
=	TokenNameEQUAL	
resource	TokenNameIdentifier	 resource
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_FROM	TokenNameIdentifier	 K  FROM
,	TokenNameCOMMA	
FOLLOW_K_FROM_in_revokeStatement2743	TokenNameIdentifier	 FOLLOW  K  FROM in revoke Statement2743
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_revokeStatement2755	TokenNameIdentifier	 FOLLOW username in revoke Statement2755
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username6	TokenNameIdentifier	 username6
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
RevokeStatement	TokenNameIdentifier	 Revoke Statement
(	TokenNameLPAREN	
permissionOrAll4	TokenNameIdentifier	 permission Or All4
,	TokenNameCOMMA	
resource5	TokenNameIdentifier	 resource5
,	TokenNameCOMMA	
(	TokenNameLPAREN	
username6	TokenNameIdentifier	 username6
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
username6	TokenNameIdentifier	 username6
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
username6	TokenNameIdentifier	 username6
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "revokeStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "revokeStatement" 
// $ANTLR start "listPermissionsStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "listPermissionsStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:528:1: listPermissionsStatement returns [ListPermissionsStatement stmt] : K_LIST permissionOrAll ( K_ON resource )? ( K_OF username )? ( K_NORECURSIVE )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:528:1: listPermissionsStatement returns [ListPermissionsStatement stmt] : K_LIST permissionOrAll ( K_ON resource )? ( K_OF username )? ( K_NORECURSIVE )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
ListPermissionsStatement	TokenNameIdentifier	 List Permissions Statement
listPermissionsStatement	TokenNameIdentifier	 list Permissions Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ListPermissionsStatement	TokenNameIdentifier	 List Permissions Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
IResource	TokenNameIdentifier	 I Resource
resource7	TokenNameIdentifier	 resource7
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username8	TokenNameIdentifier	 username8
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Set	TokenNameIdentifier	 Set
<	TokenNameLESS	
Permission	TokenNameIdentifier	 Permission
>	TokenNameGREATER	
permissionOrAll9	TokenNameIdentifier	 permission Or All9
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
IResource	TokenNameIdentifier	 I Resource
resource	TokenNameIdentifier	 resource
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
username	TokenNameIdentifier	 username
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
recursive	TokenNameIdentifier	 recursive
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:534:5: ( K_LIST permissionOrAll ( K_ON resource )? ( K_OF username )? ( K_NORECURSIVE )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:534:5: ( K_LIST permissionOrAll ( K_ON resource )? ( K_OF username )? ( K_NORECURSIVE )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:534:7: K_LIST permissionOrAll ( K_ON resource )? ( K_OF username )? ( K_NORECURSIVE )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:534:7: K_LIST permissionOrAll ( K_ON resource )? ( K_OF username )? ( K_NORECURSIVE )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_LIST	TokenNameIdentifier	 K  LIST
,	TokenNameCOMMA	
FOLLOW_K_LIST_in_listPermissionsStatement2793	TokenNameIdentifier	 FOLLOW  K  LIST in list Permissions Statement2793
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_permissionOrAll_in_listPermissionsStatement2805	TokenNameIdentifier	 FOLLOW permission Or All in list Permissions Statement2805
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
permissionOrAll9	TokenNameIdentifier	 permission Or All9
=	TokenNameEQUAL	
permissionOrAll	TokenNameIdentifier	 permission Or All
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:536:7: ( K_ON resource )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:536:7: ( K_ON resource )? 
int	TokenNameint	
alt50	TokenNameIdentifier	 alt50
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA50_0	TokenNameIdentifier	 L A50 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA50_0	TokenNameIdentifier	 L A50 0
==	TokenNameEQUAL_EQUAL	
K_ON	TokenNameIdentifier	 K  ON
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt50	TokenNameIdentifier	 alt50
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt50	TokenNameIdentifier	 alt50
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:536:9: K_ON resource 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:536:9: K_ON resource 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ON	TokenNameIdentifier	 K  ON
,	TokenNameCOMMA	
FOLLOW_K_ON_in_listPermissionsStatement2815	TokenNameIdentifier	 FOLLOW  K  ON in list Permissions Statement2815
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_resource_in_listPermissionsStatement2817	TokenNameIdentifier	 FOLLOW resource in list Permissions Statement2817
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
resource7	TokenNameIdentifier	 resource7
=	TokenNameEQUAL	
resource	TokenNameIdentifier	 resource
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
resource	TokenNameIdentifier	 resource
=	TokenNameEQUAL	
resource7	TokenNameIdentifier	 resource7
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:537:7: ( K_OF username )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:537:7: ( K_OF username )? 
int	TokenNameint	
alt51	TokenNameIdentifier	 alt51
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA51_0	TokenNameIdentifier	 L A51 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA51_0	TokenNameIdentifier	 L A51 0
==	TokenNameEQUAL_EQUAL	
K_OF	TokenNameIdentifier	 K  OF
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt51	TokenNameIdentifier	 alt51
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt51	TokenNameIdentifier	 alt51
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:537:9: K_OF username 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:537:9: K_OF username 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_OF	TokenNameIdentifier	 K  OF
,	TokenNameCOMMA	
FOLLOW_K_OF_in_listPermissionsStatement2832	TokenNameIdentifier	 FOLLOW  K  OF in list Permissions Statement2832
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_listPermissionsStatement2834	TokenNameIdentifier	 FOLLOW username in list Permissions Statement2834
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username8	TokenNameIdentifier	 username8
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
username	TokenNameIdentifier	 username
=	TokenNameEQUAL	
(	TokenNameLPAREN	
username8	TokenNameIdentifier	 username8
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
username8	TokenNameIdentifier	 username8
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
username8	TokenNameIdentifier	 username8
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:538:7: ( K_NORECURSIVE )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:538:7: ( K_NORECURSIVE )? 
int	TokenNameint	
alt52	TokenNameIdentifier	 alt52
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA52_0	TokenNameIdentifier	 L A52 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA52_0	TokenNameIdentifier	 L A52 0
==	TokenNameEQUAL_EQUAL	
K_NORECURSIVE	TokenNameIdentifier	 K  NORECURSIVE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt52	TokenNameIdentifier	 alt52
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt52	TokenNameIdentifier	 alt52
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:538:9: K_NORECURSIVE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:538:9: K_NORECURSIVE 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_NORECURSIVE	TokenNameIdentifier	 K  NORECURSIVE
,	TokenNameCOMMA	
FOLLOW_K_NORECURSIVE_in_listPermissionsStatement2849	TokenNameIdentifier	 FOLLOW  K  NORECURSIVE in list Permissions Statement2849
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recursive	TokenNameIdentifier	 recursive
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
ListPermissionsStatement	TokenNameIdentifier	 List Permissions Statement
(	TokenNameLPAREN	
permissionOrAll9	TokenNameIdentifier	 permission Or All9
,	TokenNameCOMMA	
resource	TokenNameIdentifier	 resource
,	TokenNameCOMMA	
username	TokenNameIdentifier	 username
,	TokenNameCOMMA	
recursive	TokenNameIdentifier	 recursive
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "listPermissionsStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "listPermissionsStatement" 
// $ANTLR start "permission" 	TokenNameCOMMENT_LINE	$ANTLR start "permission" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:542:1: permission returns [Permission perm] : p= ( K_CREATE | K_ALTER | K_DROP | K_SELECT | K_MODIFY | K_AUTHORIZE ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:542:1: permission returns [Permission perm] : p= ( K_CREATE | K_ALTER | K_DROP | K_SELECT | K_MODIFY | K_AUTHORIZE ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
Permission	TokenNameIdentifier	 Permission
permission	TokenNameIdentifier	 permission
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Permission	TokenNameIdentifier	 Permission
perm	TokenNameIdentifier	 perm
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
p	TokenNameIdentifier	 p
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:543:5: (p= ( K_CREATE | K_ALTER | K_DROP | K_SELECT | K_MODIFY | K_AUTHORIZE ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:543:5: (p= ( K_CREATE | K_ALTER | K_DROP | K_SELECT | K_MODIFY | K_AUTHORIZE ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:543:7: p= ( K_CREATE | K_ALTER | K_DROP | K_SELECT | K_MODIFY | K_AUTHORIZE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:543:7: p= ( K_CREATE | K_ALTER | K_DROP | K_SELECT | K_MODIFY | K_AUTHORIZE ) 
{	TokenNameLBRACE	
p	TokenNameIdentifier	 p
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_SELECT	TokenNameIdentifier	 K  SELECT
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_CREATE	TokenNameIdentifier	 K  CREATE
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_ALTER	TokenNameIdentifier	 K  ALTER
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_DROP	TokenNameIdentifier	 K  DROP
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
K_MODIFY	TokenNameIdentifier	 K  MODIFY
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
K_AUTHORIZE	TokenNameIdentifier	 K  AUTHORIZE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
perm	TokenNameIdentifier	 perm
=	TokenNameEQUAL	
Permission	TokenNameIdentifier	 Permission
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
(	TokenNameLPAREN	
p	TokenNameIdentifier	 p
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
p	TokenNameIdentifier	 p
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
.	TokenNameDOT	
toUpperCase	TokenNameIdentifier	 to Upper Case
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
perm	TokenNameIdentifier	 perm
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "permission" 	TokenNameCOMMENT_LINE	$ANTLR end "permission" 
// $ANTLR start "permissionOrAll" 	TokenNameCOMMENT_LINE	$ANTLR start "permissionOrAll" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:547:1: permissionOrAll returns [Set<Permission> perms] : ( K_ALL ( K_PERMISSIONS )? | p= permission ( K_PERMISSION )? ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:547:1: permissionOrAll returns [Set<Permission> perms] : ( K_ALL ( K_PERMISSIONS )? | p= permission ( K_PERMISSION )? ); 
public	TokenNamepublic	
final	TokenNamefinal	
Set	TokenNameIdentifier	 Set
<	TokenNameLESS	
Permission	TokenNameIdentifier	 Permission
>	TokenNameGREATER	
permissionOrAll	TokenNameIdentifier	 permission Or All
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Set	TokenNameIdentifier	 Set
<	TokenNameLESS	
Permission	TokenNameIdentifier	 Permission
>	TokenNameGREATER	
perms	TokenNameIdentifier	 perms
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Permission	TokenNameIdentifier	 Permission
p	TokenNameIdentifier	 p
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:5: ( K_ALL ( K_PERMISSIONS )? | p= permission ( K_PERMISSION )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:5: ( K_ALL ( K_PERMISSIONS )? | p= permission ( K_PERMISSION )? ) 
int	TokenNameint	
alt55	TokenNameIdentifier	 alt55
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA55_0	TokenNameIdentifier	 L A55 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA55_0	TokenNameIdentifier	 L A55 0
==	TokenNameEQUAL_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt55	TokenNameIdentifier	 alt55
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA55_0	TokenNameIdentifier	 L A55 0
==	TokenNameEQUAL_EQUAL	
K_SELECT	TokenNameIdentifier	 K  SELECT
||	TokenNameOR_OR	
LA55_0	TokenNameIdentifier	 L A55 0
==	TokenNameEQUAL_EQUAL	
K_CREATE	TokenNameIdentifier	 K  CREATE
||	TokenNameOR_OR	
LA55_0	TokenNameIdentifier	 L A55 0
==	TokenNameEQUAL_EQUAL	
K_ALTER	TokenNameIdentifier	 K  ALTER
||	TokenNameOR_OR	
LA55_0	TokenNameIdentifier	 L A55 0
==	TokenNameEQUAL_EQUAL	
K_DROP	TokenNameIdentifier	 K  DROP
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA55_0	TokenNameIdentifier	 L A55 0
>=	TokenNameGREATER_EQUAL	
K_MODIFY	TokenNameIdentifier	 K  MODIFY
&&	TokenNameAND_AND	
LA55_0	TokenNameIdentifier	 L A55 0
<=	TokenNameLESS_EQUAL	
K_AUTHORIZE	TokenNameIdentifier	 K  AUTHORIZE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt55	TokenNameIdentifier	 alt55
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
55	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt55	TokenNameIdentifier	 alt55
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:7: K_ALL ( K_PERMISSIONS )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:7: K_ALL ( K_PERMISSIONS )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALL	TokenNameIdentifier	 K  ALL
,	TokenNameCOMMA	
FOLLOW_K_ALL_in_permissionOrAll2934	TokenNameIdentifier	 FOLLOW  K  ALL in permission Or All2934
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:13: ( K_PERMISSIONS )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:13: ( K_PERMISSIONS )? 
int	TokenNameint	
alt53	TokenNameIdentifier	 alt53
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA53_0	TokenNameIdentifier	 L A53 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA53_0	TokenNameIdentifier	 L A53 0
==	TokenNameEQUAL_EQUAL	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt53	TokenNameIdentifier	 alt53
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt53	TokenNameIdentifier	 alt53
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:15: K_PERMISSIONS 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:548:15: K_PERMISSIONS 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
,	TokenNameCOMMA	
FOLLOW_K_PERMISSIONS_in_permissionOrAll2938	TokenNameIdentifier	 FOLLOW  K  PERMISSIONS in permission Or All2938
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
perms	TokenNameIdentifier	 perms
=	TokenNameEQUAL	
Permission	TokenNameIdentifier	 Permission
.	TokenNameDOT	
ALL_DATA	TokenNameIdentifier	 ALL  DATA
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:549:7: p= permission ( K_PERMISSION )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:549:7: p= permission ( K_PERMISSION )? 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_permission_in_permissionOrAll2959	TokenNameIdentifier	 FOLLOW permission in permission Or All2959
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
p	TokenNameIdentifier	 p
=	TokenNameEQUAL	
permission	TokenNameIdentifier	 permission
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:549:20: ( K_PERMISSION )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:549:20: ( K_PERMISSION )? 
int	TokenNameint	
alt54	TokenNameIdentifier	 alt54
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA54_0	TokenNameIdentifier	 L A54 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA54_0	TokenNameIdentifier	 L A54 0
==	TokenNameEQUAL_EQUAL	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt54	TokenNameIdentifier	 alt54
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt54	TokenNameIdentifier	 alt54
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:549:22: K_PERMISSION 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:549:22: K_PERMISSION 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
,	TokenNameCOMMA	
FOLLOW_K_PERMISSION_in_permissionOrAll2963	TokenNameIdentifier	 FOLLOW  K  PERMISSION in permission Or All2963
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
perms	TokenNameIdentifier	 perms
=	TokenNameEQUAL	
EnumSet	TokenNameIdentifier	 Enum Set
.	TokenNameDOT	
of	TokenNameIdentifier	 of
(	TokenNameLPAREN	
p	TokenNameIdentifier	 p
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
perms	TokenNameIdentifier	 perms
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "permissionOrAll" 	TokenNameCOMMENT_LINE	$ANTLR end "permissionOrAll" 
// $ANTLR start "resource" 	TokenNameCOMMENT_LINE	$ANTLR start "resource" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:552:1: resource returns [IResource res] : r= dataResource ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:552:1: resource returns [IResource res] : r= dataResource ; 
public	TokenNamepublic	
final	TokenNamefinal	
IResource	TokenNameIdentifier	 I Resource
resource	TokenNameIdentifier	 resource
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
IResource	TokenNameIdentifier	 I Resource
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
DataResource	TokenNameIdentifier	 Data Resource
r	TokenNameIdentifier	 r
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:553:5: (r= dataResource ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:553:5: (r= dataResource ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:553:7: r= dataResource 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:553:7: r= dataResource 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_dataResource_in_resource2991	TokenNameIdentifier	 FOLLOW data Resource in resource2991
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
r	TokenNameIdentifier	 r
=	TokenNameEQUAL	
dataResource	TokenNameIdentifier	 data Resource
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
r	TokenNameIdentifier	 r
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
res	TokenNameIdentifier	 res
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "resource" 	TokenNameCOMMENT_LINE	$ANTLR end "resource" 
// $ANTLR start "dataResource" 	TokenNameCOMMENT_LINE	$ANTLR start "dataResource" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:556:1: dataResource returns [DataResource res] : ( K_ALL K_KEYSPACES | K_KEYSPACE ks= keyspaceName | ( K_COLUMNFAMILY )? cf= columnFamilyName ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:556:1: dataResource returns [DataResource res] : ( K_ALL K_KEYSPACES | K_KEYSPACE ks= keyspaceName | ( K_COLUMNFAMILY )? cf= columnFamilyName ); 
public	TokenNamepublic	
final	TokenNamefinal	
DataResource	TokenNameIdentifier	 Data Resource
dataResource	TokenNameIdentifier	 data Resource
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
DataResource	TokenNameIdentifier	 Data Resource
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:557:5: ( K_ALL K_KEYSPACES | K_KEYSPACE ks= keyspaceName | ( K_COLUMNFAMILY )? cf= columnFamilyName ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:557:5: ( K_ALL K_KEYSPACES | K_KEYSPACE ks= keyspaceName | ( K_COLUMNFAMILY )? cf= columnFamilyName ) 
int	TokenNameint	
alt57	TokenNameIdentifier	 alt57
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_ALL	TokenNameIdentifier	 K  ALL
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA57_1	TokenNameIdentifier	 L A57 1
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA57_1	TokenNameIdentifier	 L A57 1
==	TokenNameEQUAL_EQUAL	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt57	TokenNameIdentifier	 alt57
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA57_1	TokenNameIdentifier	 L A57 1
==	TokenNameEQUAL_EQUAL	
EOF	TokenNameIdentifier	 EOF
||	TokenNameOR_OR	
LA57_1	TokenNameIdentifier	 L A57 1
==	TokenNameEQUAL_EQUAL	
K_FROM	TokenNameIdentifier	 K  FROM
||	TokenNameOR_OR	
LA57_1	TokenNameIdentifier	 L A57 1
==	TokenNameEQUAL_EQUAL	
K_TO	TokenNameIdentifier	 K  TO
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA57_1	TokenNameIdentifier	 L A57 1
>=	TokenNameGREATER_EQUAL	
K_OF	TokenNameIdentifier	 K  OF
&&	TokenNameAND_AND	
LA57_1	TokenNameIdentifier	 L A57 1
<=	TokenNameLESS_EQUAL	
K_NORECURSIVE	TokenNameIdentifier	 K  NORECURSIVE
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA57_1	TokenNameIdentifier	 L A57 1
==	TokenNameEQUAL_EQUAL	
124	TokenNameIntegerLiteral	
||	TokenNameOR_OR	
LA57_1	TokenNameIdentifier	 L A57 1
==	TokenNameEQUAL_EQUAL	
131	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt57	TokenNameIdentifier	 alt57
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
57	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
1	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_KEYSPACE	TokenNameIdentifier	 K  KEYSPACE
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt57	TokenNameIdentifier	 alt57
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_COUNT	TokenNameIdentifier	 K  COUNT
:	TokenNameCOLON	
case	TokenNamecase	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
:	TokenNameCOLON	
case	TokenNamecase	
K_TTL	TokenNameIdentifier	 K  TTL
:	TokenNameCOLON	
case	TokenNamecase	
K_VALUES	TokenNameIdentifier	 K  VALUES
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
case	TokenNamecase	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
:	TokenNameCOLON	
case	TokenNamecase	
K_KEY	TokenNameIdentifier	 K  KEY
:	TokenNameCOLON	
case	TokenNamecase	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
:	TokenNameCOLON	
case	TokenNamecase	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
:	TokenNameCOLON	
case	TokenNamecase	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
:	TokenNameCOLON	
case	TokenNamecase	
IDENT	TokenNameIdentifier	 IDENT
:	TokenNameCOLON	
case	TokenNamecase	
K_TYPE	TokenNameIdentifier	 K  TYPE
:	TokenNameCOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
:	TokenNameCOLON	
case	TokenNamecase	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
:	TokenNameCOLON	
case	TokenNamecase	
K_USER	TokenNameIdentifier	 K  USER
:	TokenNameCOLON	
case	TokenNamecase	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_USERS	TokenNameIdentifier	 K  USERS
:	TokenNameCOLON	
case	TokenNamecase	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
:	TokenNameCOLON	
case	TokenNamecase	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
:	TokenNameCOLON	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt57	TokenNameIdentifier	 alt57
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
57	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt57	TokenNameIdentifier	 alt57
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:557:7: K_ALL K_KEYSPACES 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:557:7: K_ALL K_KEYSPACES 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALL	TokenNameIdentifier	 K  ALL
,	TokenNameCOMMA	
FOLLOW_K_ALL_in_dataResource3014	TokenNameIdentifier	 FOLLOW  K  ALL in data Resource3014
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
,	TokenNameCOMMA	
FOLLOW_K_KEYSPACES_in_dataResource3016	TokenNameIdentifier	 FOLLOW  K  KEYSPACES in data Resource3016
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
DataResource	TokenNameIdentifier	 Data Resource
.	TokenNameDOT	
root	TokenNameIdentifier	 root
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:558:7: K_KEYSPACE ks= keyspaceName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:558:7: K_KEYSPACE ks= keyspaceName 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_KEYSPACE	TokenNameIdentifier	 K  KEYSPACE
,	TokenNameCOMMA	
FOLLOW_K_KEYSPACE_in_dataResource3026	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in data Resource3026
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_keyspaceName_in_dataResource3032	TokenNameIdentifier	 FOLLOW keyspace Name in data Resource3032
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ks	TokenNameIdentifier	 ks
=	TokenNameEQUAL	
keyspaceName	TokenNameIdentifier	 keyspace Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
DataResource	TokenNameIdentifier	 Data Resource
.	TokenNameDOT	
keyspace	TokenNameIdentifier	 keyspace
(	TokenNameLPAREN	
ks	TokenNameIdentifier	 ks
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:559:7: ( K_COLUMNFAMILY )? cf= columnFamilyName 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:559:7: ( K_COLUMNFAMILY )? cf= columnFamilyName 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:559:7: ( K_COLUMNFAMILY )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:559:7: ( K_COLUMNFAMILY )? 
int	TokenNameint	
alt56	TokenNameIdentifier	 alt56
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA56_0	TokenNameIdentifier	 L A56 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA56_0	TokenNameIdentifier	 L A56 0
==	TokenNameEQUAL_EQUAL	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt56	TokenNameIdentifier	 alt56
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt56	TokenNameIdentifier	 alt56
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:559:9: K_COLUMNFAMILY 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:559:9: K_COLUMNFAMILY 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COLUMNFAMILY	TokenNameIdentifier	 K  COLUMNFAMILY
,	TokenNameCOMMA	
FOLLOW_K_COLUMNFAMILY_in_dataResource3044	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in data Resource3044
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_columnFamilyName_in_dataResource3053	TokenNameIdentifier	 FOLLOW column Family Name in data Resource3053
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cf	TokenNameIdentifier	 cf
=	TokenNameEQUAL	
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
res	TokenNameIdentifier	 res
=	TokenNameEQUAL	
DataResource	TokenNameIdentifier	 Data Resource
.	TokenNameDOT	
columnFamily	TokenNameIdentifier	 column Family
(	TokenNameLPAREN	
cf	TokenNameIdentifier	 cf
.	TokenNameDOT	
getKeyspace	TokenNameIdentifier	 get Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
cf	TokenNameIdentifier	 cf
.	TokenNameDOT	
getColumnFamily	TokenNameIdentifier	 get Column Family
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
res	TokenNameIdentifier	 res
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "dataResource" 	TokenNameCOMMENT_LINE	$ANTLR end "dataResource" 
// $ANTLR start "createUserStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "createUserStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:563:1: createUserStatement returns [CreateUserStatement stmt] : K_CREATE K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:563:1: createUserStatement returns [CreateUserStatement stmt] : K_CREATE K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
CreateUserStatement	TokenNameIdentifier	 Create User Statement
createUserStatement	TokenNameIdentifier	 create User Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CreateUserStatement	TokenNameIdentifier	 Create User Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username10	TokenNameIdentifier	 username10
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UserOptions	TokenNameIdentifier	 User Options
opts	TokenNameIdentifier	 opts
=	TokenNameEQUAL	
new	TokenNamenew	
UserOptions	TokenNameIdentifier	 User Options
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
boolean	TokenNameboolean	
superuser	TokenNameIdentifier	 superuser
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:571:5: ( K_CREATE K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:571:5: ( K_CREATE K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:571:7: K_CREATE K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:571:7: K_CREATE K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_CREATE	TokenNameIdentifier	 K  CREATE
,	TokenNameCOMMA	
FOLLOW_K_CREATE_in_createUserStatement3093	TokenNameIdentifier	 FOLLOW  K  CREATE in create User Statement3093
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USER	TokenNameIdentifier	 K  USER
,	TokenNameCOMMA	
FOLLOW_K_USER_in_createUserStatement3095	TokenNameIdentifier	 FOLLOW  K  USER in create User Statement3095
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_createUserStatement3097	TokenNameIdentifier	 FOLLOW username in create User Statement3097
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username10	TokenNameIdentifier	 username10
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:572:7: ( K_WITH userOptions[opts] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:572:7: ( K_WITH userOptions[opts] )? 
int	TokenNameint	
alt58	TokenNameIdentifier	 alt58
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA58_0	TokenNameIdentifier	 L A58 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA58_0	TokenNameIdentifier	 L A58 0
==	TokenNameEQUAL_EQUAL	
K_WITH	TokenNameIdentifier	 K  WITH
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt58	TokenNameIdentifier	 alt58
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt58	TokenNameIdentifier	 alt58
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:572:9: K_WITH userOptions[opts] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:572:9: K_WITH userOptions[opts] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WITH	TokenNameIdentifier	 K  WITH
,	TokenNameCOMMA	
FOLLOW_K_WITH_in_createUserStatement3107	TokenNameIdentifier	 FOLLOW  K  WITH in create User Statement3107
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_userOptions_in_createUserStatement3109	TokenNameIdentifier	 FOLLOW user Options in create User Statement3109
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
userOptions	TokenNameIdentifier	 user Options
(	TokenNameLPAREN	
opts	TokenNameIdentifier	 opts
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:573:7: ( K_SUPERUSER | K_NOSUPERUSER )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:573:7: ( K_SUPERUSER | K_NOSUPERUSER )? 
int	TokenNameint	
alt59	TokenNameIdentifier	 alt59
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA59_0	TokenNameIdentifier	 L A59 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA59_0	TokenNameIdentifier	 L A59 0
==	TokenNameEQUAL_EQUAL	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt59	TokenNameIdentifier	 alt59
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA59_0	TokenNameIdentifier	 L A59 0
==	TokenNameEQUAL_EQUAL	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt59	TokenNameIdentifier	 alt59
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt59	TokenNameIdentifier	 alt59
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:573:9: K_SUPERUSER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:573:9: K_SUPERUSER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
,	TokenNameCOMMA	
FOLLOW_K_SUPERUSER_in_createUserStatement3123	TokenNameIdentifier	 FOLLOW  K  SUPERUSER in create User Statement3123
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
superuser	TokenNameIdentifier	 superuser
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:573:45: K_NOSUPERUSER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:573:45: K_NOSUPERUSER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
,	TokenNameCOMMA	
FOLLOW_K_NOSUPERUSER_in_createUserStatement3129	TokenNameIdentifier	 FOLLOW  K  NOSUPERUSER in create User Statement3129
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
superuser	TokenNameIdentifier	 superuser
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
CreateUserStatement	TokenNameIdentifier	 Create User Statement
(	TokenNameLPAREN	
(	TokenNameLPAREN	
username10	TokenNameIdentifier	 username10
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
username10	TokenNameIdentifier	 username10
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
username10	TokenNameIdentifier	 username10
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
opts	TokenNameIdentifier	 opts
,	TokenNameCOMMA	
superuser	TokenNameIdentifier	 superuser
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "createUserStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "createUserStatement" 
// $ANTLR start "alterUserStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "alterUserStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:577:1: alterUserStatement returns [AlterUserStatement stmt] : K_ALTER K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:577:1: alterUserStatement returns [AlterUserStatement stmt] : K_ALTER K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ; 
public	TokenNamepublic	
final	TokenNamefinal	
AlterUserStatement	TokenNameIdentifier	 Alter User Statement
alterUserStatement	TokenNameIdentifier	 alter User Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
AlterUserStatement	TokenNameIdentifier	 Alter User Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username11	TokenNameIdentifier	 username11
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
UserOptions	TokenNameIdentifier	 User Options
opts	TokenNameIdentifier	 opts
=	TokenNameEQUAL	
new	TokenNamenew	
UserOptions	TokenNameIdentifier	 User Options
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Boolean	TokenNameIdentifier	 Boolean
superuser	TokenNameIdentifier	 superuser
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:585:5: ( K_ALTER K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:585:5: ( K_ALTER K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:585:7: K_ALTER K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:585:7: K_ALTER K_USER username ( K_WITH userOptions[opts] )? ( K_SUPERUSER | K_NOSUPERUSER )? 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ALTER	TokenNameIdentifier	 K  ALTER
,	TokenNameCOMMA	
FOLLOW_K_ALTER_in_alterUserStatement3174	TokenNameIdentifier	 FOLLOW  K  ALTER in alter User Statement3174
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USER	TokenNameIdentifier	 K  USER
,	TokenNameCOMMA	
FOLLOW_K_USER_in_alterUserStatement3176	TokenNameIdentifier	 FOLLOW  K  USER in alter User Statement3176
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_alterUserStatement3178	TokenNameIdentifier	 FOLLOW username in alter User Statement3178
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username11	TokenNameIdentifier	 username11
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:586:7: ( K_WITH userOptions[opts] )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:586:7: ( K_WITH userOptions[opts] )? 
int	TokenNameint	
alt60	TokenNameIdentifier	 alt60
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA60_0	TokenNameIdentifier	 L A60 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA60_0	TokenNameIdentifier	 L A60 0
==	TokenNameEQUAL_EQUAL	
K_WITH	TokenNameIdentifier	 K  WITH
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt60	TokenNameIdentifier	 alt60
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt60	TokenNameIdentifier	 alt60
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:586:9: K_WITH userOptions[opts] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:586:9: K_WITH userOptions[opts] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_WITH	TokenNameIdentifier	 K  WITH
,	TokenNameCOMMA	
FOLLOW_K_WITH_in_alterUserStatement3188	TokenNameIdentifier	 FOLLOW  K  WITH in alter User Statement3188
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_userOptions_in_alterUserStatement3190	TokenNameIdentifier	 FOLLOW user Options in alter User Statement3190
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
userOptions	TokenNameIdentifier	 user Options
(	TokenNameLPAREN	
opts	TokenNameIdentifier	 opts
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:587:7: ( K_SUPERUSER | K_NOSUPERUSER )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:587:7: ( K_SUPERUSER | K_NOSUPERUSER )? 
int	TokenNameint	
alt61	TokenNameIdentifier	 alt61
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA61_0	TokenNameIdentifier	 L A61 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA61_0	TokenNameIdentifier	 L A61 0
==	TokenNameEQUAL_EQUAL	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt61	TokenNameIdentifier	 alt61
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA61_0	TokenNameIdentifier	 L A61 0
==	TokenNameEQUAL_EQUAL	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt61	TokenNameIdentifier	 alt61
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt61	TokenNameIdentifier	 alt61
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:587:9: K_SUPERUSER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:587:9: K_SUPERUSER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
,	TokenNameCOMMA	
FOLLOW_K_SUPERUSER_in_alterUserStatement3204	TokenNameIdentifier	 FOLLOW  K  SUPERUSER in alter User Statement3204
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
superuser	TokenNameIdentifier	 superuser
=	TokenNameEQUAL	
true	TokenNametrue	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:587:45: K_NOSUPERUSER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:587:45: K_NOSUPERUSER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
,	TokenNameCOMMA	
FOLLOW_K_NOSUPERUSER_in_alterUserStatement3210	TokenNameIdentifier	 FOLLOW  K  NOSUPERUSER in alter User Statement3210
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
superuser	TokenNameIdentifier	 superuser
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
AlterUserStatement	TokenNameIdentifier	 Alter User Statement
(	TokenNameLPAREN	
(	TokenNameLPAREN	
username11	TokenNameIdentifier	 username11
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
username11	TokenNameIdentifier	 username11
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
username11	TokenNameIdentifier	 username11
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
opts	TokenNameIdentifier	 opts
,	TokenNameCOMMA	
superuser	TokenNameIdentifier	 superuser
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "alterUserStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "alterUserStatement" 
// $ANTLR start "dropUserStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "dropUserStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:591:1: dropUserStatement returns [DropUserStatement stmt] : K_DROP K_USER username ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:591:1: dropUserStatement returns [DropUserStatement stmt] : K_DROP K_USER username ; 
public	TokenNamepublic	
final	TokenNamefinal	
DropUserStatement	TokenNameIdentifier	 Drop User Statement
dropUserStatement	TokenNameIdentifier	 drop User Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
DropUserStatement	TokenNameIdentifier	 Drop User Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username12	TokenNameIdentifier	 username12
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:595:5: ( K_DROP K_USER username ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:595:5: ( K_DROP K_USER username ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:595:7: K_DROP K_USER username 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:595:7: K_DROP K_USER username 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DROP	TokenNameIdentifier	 K  DROP
,	TokenNameCOMMA	
FOLLOW_K_DROP_in_dropUserStatement3246	TokenNameIdentifier	 FOLLOW  K  DROP in drop User Statement3246
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USER	TokenNameIdentifier	 K  USER
,	TokenNameCOMMA	
FOLLOW_K_USER_in_dropUserStatement3248	TokenNameIdentifier	 FOLLOW  K  USER in drop User Statement3248
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_username_in_dropUserStatement3250	TokenNameIdentifier	 FOLLOW username in drop User Statement3250
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
username12	TokenNameIdentifier	 username12
=	TokenNameEQUAL	
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
DropUserStatement	TokenNameIdentifier	 Drop User Statement
(	TokenNameLPAREN	
(	TokenNameLPAREN	
username12	TokenNameIdentifier	 username12
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
username12	TokenNameIdentifier	 username12
.	TokenNameDOT	
start	TokenNameIdentifier	 start
,	TokenNameCOMMA	
username12	TokenNameIdentifier	 username12
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "dropUserStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "dropUserStatement" 
// $ANTLR start "listUsersStatement" 	TokenNameCOMMENT_LINE	$ANTLR start "listUsersStatement" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:598:1: listUsersStatement returns [ListUsersStatement stmt] : K_LIST K_USERS ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:598:1: listUsersStatement returns [ListUsersStatement stmt] : K_LIST K_USERS ; 
public	TokenNamepublic	
final	TokenNamefinal	
ListUsersStatement	TokenNameIdentifier	 List Users Statement
listUsersStatement	TokenNameIdentifier	 list Users Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ListUsersStatement	TokenNameIdentifier	 List Users Statement
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:602:5: ( K_LIST K_USERS ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:602:5: ( K_LIST K_USERS ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:602:7: K_LIST K_USERS 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:602:7: K_LIST K_USERS 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_LIST	TokenNameIdentifier	 K  LIST
,	TokenNameCOMMA	
FOLLOW_K_LIST_in_listUsersStatement3275	TokenNameIdentifier	 FOLLOW  K  LIST in list Users Statement3275
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_USERS	TokenNameIdentifier	 K  USERS
,	TokenNameCOMMA	
FOLLOW_K_USERS_in_listUsersStatement3277	TokenNameIdentifier	 FOLLOW  K  USERS in list Users Statement3277
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
stmt	TokenNameIdentifier	 stmt
=	TokenNameEQUAL	
new	TokenNamenew	
ListUsersStatement	TokenNameIdentifier	 List Users Statement
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
stmt	TokenNameIdentifier	 stmt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "listUsersStatement" 	TokenNameCOMMENT_LINE	$ANTLR end "listUsersStatement" 
// $ANTLR start "userOptions" 	TokenNameCOMMENT_LINE	$ANTLR start "userOptions" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:605:1: userOptions[UserOptions opts] : userOption[opts] ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:605:1: userOptions[UserOptions opts] : userOption[opts] ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
userOptions	TokenNameIdentifier	 user Options
(	TokenNameLPAREN	
UserOptions	TokenNameIdentifier	 User Options
opts	TokenNameIdentifier	 opts
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:606:5: ( userOption[opts] ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:606:5: ( userOption[opts] ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:606:7: userOption[opts] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:606:7: userOption[opts] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_userOption_in_userOptions3297	TokenNameIdentifier	 FOLLOW user Option in user Options3297
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
userOption	TokenNameIdentifier	 user Option
(	TokenNameLPAREN	
opts	TokenNameIdentifier	 opts
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "userOptions" 	TokenNameCOMMENT_LINE	$ANTLR end "userOptions" 
// $ANTLR start "userOption" 	TokenNameCOMMENT_LINE	$ANTLR start "userOption" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:609:1: userOption[UserOptions opts] : k= K_PASSWORD v= STRING_LITERAL ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:609:1: userOption[UserOptions opts] : k= K_PASSWORD v= STRING_LITERAL ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
userOption	TokenNameIdentifier	 user Option
(	TokenNameLPAREN	
UserOptions	TokenNameIdentifier	 User Options
opts	TokenNameIdentifier	 opts
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Token	TokenNameIdentifier	 Token
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:610:5: (k= K_PASSWORD v= STRING_LITERAL ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:610:5: (k= K_PASSWORD v= STRING_LITERAL ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:610:7: k= K_PASSWORD v= STRING_LITERAL 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:610:7: k= K_PASSWORD v= STRING_LITERAL 
{	TokenNameLBRACE	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
,	TokenNameCOMMA	
FOLLOW_K_PASSWORD_in_userOption3318	TokenNameIdentifier	 FOLLOW  K  PASSWORD in user Option3318
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
,	TokenNameCOMMA	
FOLLOW_STRING_LITERAL_in_userOption3322	TokenNameIdentifier	 FOLLOW  STRING  LITERAL in user Option3322
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
opts	TokenNameIdentifier	 opts
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
k	TokenNameIdentifier	 k
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
v	TokenNameIdentifier	 v
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
v	TokenNameIdentifier	 v
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "userOption" 	TokenNameCOMMENT_LINE	$ANTLR end "userOption" 
// $ANTLR start "cident" 	TokenNameCOMMENT_LINE	$ANTLR start "cident" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:613:1: cident returns [ColumnIdentifier id] : (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:613:1: cident returns [ColumnIdentifier id] : (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ); 
public	TokenNamepublic	
final	TokenNamefinal	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:617:5: (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:617:5: (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ) 
int	TokenNameint	
alt62	TokenNameIdentifier	 alt62
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
IDENT	TokenNameIdentifier	 IDENT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt62	TokenNameIdentifier	 alt62
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt62	TokenNameIdentifier	 alt62
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_COUNT	TokenNameIdentifier	 K  COUNT
:	TokenNameCOLON	
case	TokenNamecase	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
:	TokenNameCOLON	
case	TokenNamecase	
K_TTL	TokenNameIdentifier	 K  TTL
:	TokenNameCOLON	
case	TokenNamecase	
K_VALUES	TokenNameIdentifier	 K  VALUES
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
case	TokenNamecase	
K_KEY	TokenNameIdentifier	 K  KEY
:	TokenNameCOLON	
case	TokenNamecase	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
:	TokenNameCOLON	
case	TokenNamecase	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
:	TokenNameCOLON	
case	TokenNamecase	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_TYPE	TokenNameIdentifier	 K  TYPE
:	TokenNameCOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
case	TokenNamecase	
K_ALL	TokenNameIdentifier	 K  ALL
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
:	TokenNameCOLON	
case	TokenNamecase	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
:	TokenNameCOLON	
case	TokenNamecase	
K_USER	TokenNameIdentifier	 K  USER
:	TokenNameCOLON	
case	TokenNamecase	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_USERS	TokenNameIdentifier	 K  USERS
:	TokenNameCOLON	
case	TokenNamecase	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
:	TokenNameCOLON	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt62	TokenNameIdentifier	 alt62
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
62	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt62	TokenNameIdentifier	 alt62
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:617:7: t= IDENT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:617:7: t= IDENT 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IDENT	TokenNameIdentifier	 IDENT
,	TokenNameCOMMA	
FOLLOW_IDENT_in_cident3351	TokenNameIdentifier	 FOLLOW  IDENT in cident3351
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
new	TokenNamenew	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:618:7: t= QUOTED_NAME 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:618:7: t= QUOTED_NAME 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
,	TokenNameCOMMA	
FOLLOW_QUOTED_NAME_in_cident3376	TokenNameIdentifier	 FOLLOW  QUOTED  NAME in cident3376
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
new	TokenNamenew	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:619:7: k= unreserved_keyword 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:619:7: k= unreserved_keyword 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_unreserved_keyword_in_cident3395	TokenNameIdentifier	 FOLLOW unreserved keyword in cident3395
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
unreserved_keyword	TokenNameIdentifier	 unreserved keyword
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
new	TokenNamenew	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
id	TokenNameIdentifier	 id
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cident" 	TokenNameCOMMENT_LINE	$ANTLR end "cident" 
// $ANTLR start "keyspaceName" 	TokenNameCOMMENT_LINE	$ANTLR start "keyspaceName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:623:1: keyspaceName returns [String id] : cfOrKsName[name, true] ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:623:1: keyspaceName returns [String id] : cfOrKsName[name, true] ; 
public	TokenNamepublic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
keyspaceName	TokenNameIdentifier	 keyspace Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
String	TokenNameIdentifier	 String
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
CFName	TokenNameIdentifier	 CF Name
name	TokenNameIdentifier	 name
=	TokenNameEQUAL	
new	TokenNamenew	
CFName	TokenNameIdentifier	 CF Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:625:5: ( cfOrKsName[name, true] ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:625:5: ( cfOrKsName[name, true] ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:625:7: cfOrKsName[name, true] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:625:7: cfOrKsName[name, true] 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfOrKsName_in_keyspaceName3428	TokenNameIdentifier	 FOLLOW cf Or Ks Name in keyspace Name3428
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfOrKsName	TokenNameIdentifier	 cf Or Ks Name
(	TokenNameLPAREN	
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
id	TokenNameIdentifier	 id
=	TokenNameEQUAL	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
getKeyspace	TokenNameIdentifier	 get Keyspace
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
id	TokenNameIdentifier	 id
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "keyspaceName" 	TokenNameCOMMENT_LINE	$ANTLR end "keyspaceName" 
// $ANTLR start "columnFamilyName" 	TokenNameCOMMENT_LINE	$ANTLR start "columnFamilyName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:628:1: columnFamilyName returns [CFName name] : ( cfOrKsName[name, true] '.' )? cfOrKsName[name, false] ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:628:1: columnFamilyName returns [CFName name] : ( cfOrKsName[name, true] '.' )? cfOrKsName[name, false] ; 
public	TokenNamepublic	
final	TokenNamefinal	
CFName	TokenNameIdentifier	 CF Name
columnFamilyName	TokenNameIdentifier	 column Family Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CFName	TokenNameIdentifier	 CF Name
name	TokenNameIdentifier	 name
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
name	TokenNameIdentifier	 name
=	TokenNameEQUAL	
new	TokenNamenew	
CFName	TokenNameIdentifier	 CF Name
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:5: ( ( cfOrKsName[name, true] '.' )? cfOrKsName[name, false] ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:5: ( ( cfOrKsName[name, true] '.' )? cfOrKsName[name, false] ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:7: ( cfOrKsName[name, true] '.' )? cfOrKsName[name, false] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:7: ( cfOrKsName[name, true] '.' )? cfOrKsName[name, false] 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:7: ( cfOrKsName[name, true] '.' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:7: ( cfOrKsName[name, true] '.' )? 
int	TokenNameint	
alt63	TokenNameIdentifier	 alt63
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt63	TokenNameIdentifier	 alt63
=	TokenNameEQUAL	
dfa63	TokenNameIdentifier	 dfa63
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt63	TokenNameIdentifier	 alt63
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:8: cfOrKsName[name, true] '.' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:630:8: cfOrKsName[name, true] '.' 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfOrKsName_in_columnFamilyName3462	TokenNameIdentifier	 FOLLOW cf Or Ks Name in column Family Name3462
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfOrKsName	TokenNameIdentifier	 cf Or Ks Name
(	TokenNameLPAREN	
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
131	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_131_in_columnFamilyName3465	TokenNameIdentifier	 FOLLOW 131 in column Family Name3465
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cfOrKsName_in_columnFamilyName3469	TokenNameIdentifier	 FOLLOW cf Or Ks Name in column Family Name3469
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
cfOrKsName	TokenNameIdentifier	 cf Or Ks Name
(	TokenNameLPAREN	
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
name	TokenNameIdentifier	 name
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "columnFamilyName" 	TokenNameCOMMENT_LINE	$ANTLR end "columnFamilyName" 
// $ANTLR start "cfOrKsName" 	TokenNameCOMMENT_LINE	$ANTLR start "cfOrKsName" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:633:1: cfOrKsName[CFName name, boolean isKs] : (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:633:1: cfOrKsName[CFName name, boolean isKs] : (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
cfOrKsName	TokenNameIdentifier	 cf Or Ks Name
(	TokenNameLPAREN	
CFName	TokenNameIdentifier	 CF Name
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
boolean	TokenNameboolean	
isKs	TokenNameIdentifier	 is Ks
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:634:5: (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:634:5: (t= IDENT | t= QUOTED_NAME | k= unreserved_keyword ) 
int	TokenNameint	
alt64	TokenNameIdentifier	 alt64
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
IDENT	TokenNameIdentifier	 IDENT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt64	TokenNameIdentifier	 alt64
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt64	TokenNameIdentifier	 alt64
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_COUNT	TokenNameIdentifier	 K  COUNT
:	TokenNameCOLON	
case	TokenNamecase	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_WRITETIME	TokenNameIdentifier	 K  WRITETIME
:	TokenNameCOLON	
case	TokenNamecase	
K_TTL	TokenNameIdentifier	 K  TTL
:	TokenNameCOLON	
case	TokenNamecase	
K_VALUES	TokenNameIdentifier	 K  VALUES
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
case	TokenNamecase	
K_KEY	TokenNameIdentifier	 K  KEY
:	TokenNameCOLON	
case	TokenNamecase	
K_COMPACT	TokenNameIdentifier	 K  COMPACT
:	TokenNameCOLON	
case	TokenNamecase	
K_STORAGE	TokenNameIdentifier	 K  STORAGE
:	TokenNameCOLON	
case	TokenNamecase	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
:	TokenNameCOLON	
case	TokenNamecase	
K_TYPE	TokenNameIdentifier	 K  TYPE
:	TokenNameCOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
case	TokenNamecase	
K_ALL	TokenNameIdentifier	 K  ALL
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSIONS	TokenNameIdentifier	 K  PERMISSIONS
:	TokenNameCOLON	
case	TokenNamecase	
K_PERMISSION	TokenNameIdentifier	 K  PERMISSION
:	TokenNameCOLON	
case	TokenNamecase	
K_KEYSPACES	TokenNameIdentifier	 K  KEYSPACES
:	TokenNameCOLON	
case	TokenNamecase	
K_USER	TokenNameIdentifier	 K  USER
:	TokenNameCOLON	
case	TokenNamecase	
K_SUPERUSER	TokenNameIdentifier	 K  SUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_NOSUPERUSER	TokenNameIdentifier	 K  NOSUPERUSER
:	TokenNameCOLON	
case	TokenNamecase	
K_USERS	TokenNameIdentifier	 K  USERS
:	TokenNameCOLON	
case	TokenNamecase	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
:	TokenNameCOLON	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt64	TokenNameIdentifier	 alt64
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
64	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt64	TokenNameIdentifier	 alt64
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:634:7: t= IDENT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:634:7: t= IDENT 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
IDENT	TokenNameIdentifier	 IDENT
,	TokenNameCOMMA	
FOLLOW_IDENT_in_cfOrKsName3490	TokenNameIdentifier	 FOLLOW  IDENT in cf Or Ks Name3490
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
isKs	TokenNameIdentifier	 is Ks
)	TokenNameRPAREN	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
setKeyspace	TokenNameIdentifier	 set Keyspace
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
else	TokenNameelse	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
setColumnFamily	TokenNameIdentifier	 set Column Family
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:635:7: t= QUOTED_NAME 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:635:7: t= QUOTED_NAME 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QUOTED_NAME	TokenNameIdentifier	 QUOTED  NAME
,	TokenNameCOMMA	
FOLLOW_QUOTED_NAME_in_cfOrKsName3515	TokenNameIdentifier	 FOLLOW  QUOTED  NAME in cf Or Ks Name3515
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
isKs	TokenNameIdentifier	 is Ks
)	TokenNameRPAREN	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
setKeyspace	TokenNameIdentifier	 set Keyspace
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
else	TokenNameelse	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
setColumnFamily	TokenNameIdentifier	 set Column Family
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:636:7: k= unreserved_keyword 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:636:7: k= unreserved_keyword 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_unreserved_keyword_in_cfOrKsName3534	TokenNameIdentifier	 FOLLOW unreserved keyword in cf Or Ks Name3534
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
unreserved_keyword	TokenNameIdentifier	 unreserved keyword
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
isKs	TokenNameIdentifier	 is Ks
)	TokenNameRPAREN	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
setKeyspace	TokenNameIdentifier	 set Keyspace
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
else	TokenNameelse	
name	TokenNameIdentifier	 name
.	TokenNameDOT	
setColumnFamily	TokenNameIdentifier	 set Column Family
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
,	TokenNameCOMMA	
false	TokenNamefalse	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "cfOrKsName" 	TokenNameCOMMENT_LINE	$ANTLR end "cfOrKsName" 
// $ANTLR start "set_operation" 	TokenNameCOMMENT_LINE	$ANTLR start "set_operation" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:639:1: set_operation returns [Operation op] : (t= finalTerm | mk= QMARK | m= map_literal | l= list_literal | s= set_literal ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:639:1: set_operation returns [Operation op] : (t= finalTerm | mk= QMARK | m= map_literal | l= list_literal | s= set_literal ); 
public	TokenNamepublic	
final	TokenNamefinal	
Operation	TokenNameIdentifier	 Operation
set_operation	TokenNameIdentifier	 set operation
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Operation	TokenNameIdentifier	 Operation
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
m	TokenNameIdentifier	 m
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
l	TokenNameIdentifier	 l
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:640:5: (t= finalTerm | mk= QMARK | m= map_literal | l= list_literal | s= set_literal ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:640:5: (t= finalTerm | mk= QMARK | m= map_literal | l= list_literal | s= set_literal ) 
int	TokenNameint	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
INTEGER	TokenNameIdentifier	 INTEGER
:	TokenNameCOLON	
case	TokenNamecase	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
:	TokenNameCOLON	
case	TokenNamecase	
UUID	TokenNameIdentifier	 UUID
:	TokenNameCOLON	
case	TokenNamecase	
FLOAT	TokenNameIdentifier	 FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_TRUE	TokenNameIdentifier	 K  TRUE
:	TokenNameCOLON	
case	TokenNamecase	
K_FALSE	TokenNameIdentifier	 K  FALSE
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
QMARK	TokenNameIdentifier	 QMARK
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
132	TokenNameIntegerLiteral	
:	TokenNameCOLON	
{	TokenNameLBRACE	
int	TokenNameint	
LA65_3	TokenNameIdentifier	 L A65 3
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
2	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA65_3	TokenNameIdentifier	 L A65 3
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
LA65_3	TokenNameIdentifier	 L A65 3
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA65_3	TokenNameIdentifier	 L A65 3
>=	TokenNameGREATER_EQUAL	
UUID	TokenNameIdentifier	 UUID
&&	TokenNameAND_AND	
LA65_3	TokenNameIdentifier	 L A65 3
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
int	TokenNameint	
LA65_5	TokenNameIdentifier	 L A65 5
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
3	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA65_5	TokenNameIdentifier	 L A65 5
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
||	TokenNameOR_OR	
LA65_5	TokenNameIdentifier	 L A65 5
==	TokenNameEQUAL_EQUAL	
133	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA65_5	TokenNameIdentifier	 L A65 5
==	TokenNameEQUAL_EQUAL	
134	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
65	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
5	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA65_3	TokenNameIdentifier	 L A65 3
==	TokenNameEQUAL_EQUAL	
133	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
65	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
3	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
129	TokenNameIntegerLiteral	
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt65	TokenNameIdentifier	 alt65
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
65	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt65	TokenNameIdentifier	 alt65
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:640:7: t= finalTerm 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:640:7: t= finalTerm 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_set_operation3559	TokenNameIdentifier	 FOLLOW final Term in set operation3559
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
ColumnOperation	TokenNameIdentifier	 Column Operation
.	TokenNameDOT	
Set	TokenNameIdentifier	 Set
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:641:7: mk= QMARK 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:641:7: mk= QMARK 
{	TokenNameLBRACE	
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QMARK	TokenNameIdentifier	 QMARK
,	TokenNameCOMMA	
FOLLOW_QMARK_in_set_operation3574	TokenNameIdentifier	 FOLLOW  QMARK in set operation3574
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
new	TokenNamenew	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
(	TokenNameLPAREN	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
++	TokenNamePLUS_PLUS	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
)	TokenNameRPAREN	
,	TokenNameCOMMA	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
.	TokenNameDOT	
Kind	TokenNameIdentifier	 Kind
.	TokenNameDOT	
SET	TokenNameIdentifier	 SET
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:642:7: m= map_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:642:7: m= map_literal 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_map_literal_in_set_operation3592	TokenNameIdentifier	 FOLLOW map literal in set operation3592
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
m	TokenNameIdentifier	 m
=	TokenNameEQUAL	
map_literal	TokenNameIdentifier	 map literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
MapOperation	TokenNameIdentifier	 Map Operation
.	TokenNameDOT	
Set	TokenNameIdentifier	 Set
(	TokenNameLPAREN	
m	TokenNameIdentifier	 m
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:643:7: l= list_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:643:7: l= list_literal 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_list_literal_in_set_operation3605	TokenNameIdentifier	 FOLLOW list literal in set operation3605
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
=	TokenNameEQUAL	
list_literal	TokenNameIdentifier	 list literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
ListOperation	TokenNameIdentifier	 List Operation
.	TokenNameDOT	
Set	TokenNameIdentifier	 Set
(	TokenNameLPAREN	
l	TokenNameIdentifier	 l
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:644:7: s= set_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:644:7: s= set_literal 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_set_literal_in_set_operation3617	TokenNameIdentifier	 FOLLOW set literal in set operation3617
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
set_literal	TokenNameIdentifier	 set literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
SetOperation	TokenNameIdentifier	 Set Operation
.	TokenNameDOT	
Set	TokenNameIdentifier	 Set
(	TokenNameLPAREN	
s	TokenNameIdentifier	 s
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
op	TokenNameIdentifier	 op
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "set_operation" 	TokenNameCOMMENT_LINE	$ANTLR end "set_operation" 
// $ANTLR start "list_literal" 	TokenNameCOMMENT_LINE	$ANTLR start "list_literal" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:647:1: list_literal returns [List<Term> value] : '[' (t1= finalTerm ( ',' tn= finalTerm )* )? ']' ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:647:1: list_literal returns [List<Term> value] : '[' (t1= finalTerm ( ',' tn= finalTerm )* )? ']' ; 
public	TokenNamepublic	
final	TokenNamefinal	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
list_literal	TokenNameIdentifier	 list literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
tn	TokenNameIdentifier	 tn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:5: ( '[' (t1= finalTerm ( ',' tn= finalTerm )* )? ']' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:5: ( '[' (t1= finalTerm ( ',' tn= finalTerm )* )? ']' ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:7: '[' (t1= finalTerm ( ',' tn= finalTerm )* )? ']' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:7: '[' (t1= finalTerm ( ',' tn= finalTerm )* )? ']' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
129	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_129_in_list_literal3641	TokenNameIdentifier	 FOLLOW 129 in list literal3641
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
l	TokenNameIdentifier	 l
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:53: (t1= finalTerm ( ',' tn= finalTerm )* )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:53: (t1= finalTerm ( ',' tn= finalTerm )* )? 
int	TokenNameint	
alt67	TokenNameIdentifier	 alt67
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA67_0	TokenNameIdentifier	 L A67 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA67_0	TokenNameIdentifier	 L A67 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
LA67_0	TokenNameIdentifier	 L A67 0
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA67_0	TokenNameIdentifier	 L A67 0
>=	TokenNameGREATER_EQUAL	
UUID	TokenNameIdentifier	 UUID
&&	TokenNameAND_AND	
LA67_0	TokenNameIdentifier	 L A67 0
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt67	TokenNameIdentifier	 alt67
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt67	TokenNameIdentifier	 alt67
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:55: t1= finalTerm ( ',' tn= finalTerm )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:55: t1= finalTerm ( ',' tn= finalTerm )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_list_literal3649	TokenNameIdentifier	 FOLLOW final Term in list literal3649
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
t1	TokenNameIdentifier	 t1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:83: ( ',' tn= finalTerm )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:83: ( ',' tn= finalTerm )* 
loop66	TokenNameIdentifier	 loop66
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt66	TokenNameIdentifier	 alt66
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA66_0	TokenNameIdentifier	 L A66 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA66_0	TokenNameIdentifier	 L A66 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt66	TokenNameIdentifier	 alt66
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt66	TokenNameIdentifier	 alt66
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:85: ',' tn= finalTerm 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:648:85: ',' tn= finalTerm 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_list_literal3655	TokenNameIdentifier	 FOLLOW 127 in list literal3655
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_list_literal3659	TokenNameIdentifier	 FOLLOW final Term in list literal3659
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tn	TokenNameIdentifier	 tn
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
tn	TokenNameIdentifier	 tn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop66	TokenNameIdentifier	 loop66
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
130	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_130_in_list_literal3669	TokenNameIdentifier	 FOLLOW 130 in list literal3669
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
l	TokenNameIdentifier	 l
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
value	TokenNameIdentifier	 value
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "list_literal" 	TokenNameCOMMENT_LINE	$ANTLR end "list_literal" 
// $ANTLR start "set_literal" 	TokenNameCOMMENT_LINE	$ANTLR start "set_literal" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:651:1: set_literal returns [List<Term> value] : '{' (t1= finalTerm ( ',' tn= finalTerm )* )? '}' ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:651:1: set_literal returns [List<Term> value] : '{' (t1= finalTerm ( ',' tn= finalTerm )* )? '}' ; 
public	TokenNamepublic	
final	TokenNamefinal	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
set_literal	TokenNameIdentifier	 set literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
tn	TokenNameIdentifier	 tn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:5: ( '{' (t1= finalTerm ( ',' tn= finalTerm )* )? '}' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:5: ( '{' (t1= finalTerm ( ',' tn= finalTerm )* )? '}' ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:7: '{' (t1= finalTerm ( ',' tn= finalTerm )* )? '}' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:7: '{' (t1= finalTerm ( ',' tn= finalTerm )* )? '}' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
132	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_132_in_set_literal3692	TokenNameIdentifier	 FOLLOW 132 in set literal3692
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:53: (t1= finalTerm ( ',' tn= finalTerm )* )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:53: (t1= finalTerm ( ',' tn= finalTerm )* )? 
int	TokenNameint	
alt69	TokenNameIdentifier	 alt69
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA69_0	TokenNameIdentifier	 L A69 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA69_0	TokenNameIdentifier	 L A69 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
LA69_0	TokenNameIdentifier	 L A69 0
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA69_0	TokenNameIdentifier	 L A69 0
>=	TokenNameGREATER_EQUAL	
UUID	TokenNameIdentifier	 UUID
&&	TokenNameAND_AND	
LA69_0	TokenNameIdentifier	 L A69 0
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt69	TokenNameIdentifier	 alt69
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt69	TokenNameIdentifier	 alt69
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:55: t1= finalTerm ( ',' tn= finalTerm )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:55: t1= finalTerm ( ',' tn= finalTerm )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_set_literal3700	TokenNameIdentifier	 FOLLOW final Term in set literal3700
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
t1	TokenNameIdentifier	 t1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:83: ( ',' tn= finalTerm )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:83: ( ',' tn= finalTerm )* 
loop68	TokenNameIdentifier	 loop68
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt68	TokenNameIdentifier	 alt68
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA68_0	TokenNameIdentifier	 L A68 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA68_0	TokenNameIdentifier	 L A68 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt68	TokenNameIdentifier	 alt68
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt68	TokenNameIdentifier	 alt68
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:85: ',' tn= finalTerm 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:652:85: ',' tn= finalTerm 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_set_literal3706	TokenNameIdentifier	 FOLLOW 127 in set literal3706
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_set_literal3710	TokenNameIdentifier	 FOLLOW final Term in set literal3710
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tn	TokenNameIdentifier	 tn
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
s	TokenNameIdentifier	 s
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
tn	TokenNameIdentifier	 tn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop68	TokenNameIdentifier	 loop68
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
133	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_133_in_set_literal3720	TokenNameIdentifier	 FOLLOW 133 in set literal3720
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
s	TokenNameIdentifier	 s
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
value	TokenNameIdentifier	 value
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "set_literal" 	TokenNameCOMMENT_LINE	$ANTLR end "set_literal" 
// $ANTLR start "map_literal" 	TokenNameCOMMENT_LINE	$ANTLR start "map_literal" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:655:1: map_literal returns [Map<Term, Term> value] : '{' k1= finalTerm ':' v1= finalTerm ( ',' kn= finalTerm ':' vn= finalTerm )* '}' ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:655:1: map_literal returns [Map<Term, Term> value] : '{' k1= finalTerm ':' v1= finalTerm ( ',' kn= finalTerm ':' vn= finalTerm )* '}' ; 
public	TokenNamepublic	
final	TokenNamefinal	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
map_literal	TokenNameIdentifier	 map literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
k1	TokenNameIdentifier	 k1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
v1	TokenNameIdentifier	 v1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
kn	TokenNameIdentifier	 kn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
vn	TokenNameIdentifier	 vn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:657:5: ( '{' k1= finalTerm ':' v1= finalTerm ( ',' kn= finalTerm ':' vn= finalTerm )* '}' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:657:5: ( '{' k1= finalTerm ':' v1= finalTerm ( ',' kn= finalTerm ':' vn= finalTerm )* '}' ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:657:7: '{' k1= finalTerm ':' v1= finalTerm ( ',' kn= finalTerm ':' vn= finalTerm )* '}' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:657:7: '{' k1= finalTerm ':' v1= finalTerm ( ',' kn= finalTerm ':' vn= finalTerm )* '}' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
132	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_132_in_map_literal3749	TokenNameIdentifier	 FOLLOW 132 in map literal3749
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
m	TokenNameIdentifier	 m
=	TokenNameEQUAL	
new	TokenNamenew	
HashMap	TokenNameIdentifier	 Hash Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_map_literal3765	TokenNameIdentifier	 FOLLOW final Term in map literal3765
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k1	TokenNameIdentifier	 k1
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
134	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_134_in_map_literal3767	TokenNameIdentifier	 FOLLOW 134 in map literal3767
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_map_literal3771	TokenNameIdentifier	 FOLLOW final Term in map literal3771
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
v1	TokenNameIdentifier	 v1
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
m	TokenNameIdentifier	 m
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
k1	TokenNameIdentifier	 k1
,	TokenNameCOMMA	
v1	TokenNameIdentifier	 v1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:658:60: ( ',' kn= finalTerm ':' vn= finalTerm )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:658:60: ( ',' kn= finalTerm ':' vn= finalTerm )* 
loop70	TokenNameIdentifier	 loop70
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt70	TokenNameIdentifier	 alt70
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA70_0	TokenNameIdentifier	 L A70 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA70_0	TokenNameIdentifier	 L A70 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt70	TokenNameIdentifier	 alt70
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt70	TokenNameIdentifier	 alt70
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:658:62: ',' kn= finalTerm ':' vn= finalTerm 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:658:62: ',' kn= finalTerm ':' vn= finalTerm 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_map_literal3777	TokenNameIdentifier	 FOLLOW 127 in map literal3777
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_map_literal3781	TokenNameIdentifier	 FOLLOW final Term in map literal3781
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
kn	TokenNameIdentifier	 kn
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
134	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_134_in_map_literal3783	TokenNameIdentifier	 FOLLOW 134 in map literal3783
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_map_literal3787	TokenNameIdentifier	 FOLLOW final Term in map literal3787
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
vn	TokenNameIdentifier	 vn
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
m	TokenNameIdentifier	 m
.	TokenNameDOT	
put	TokenNameIdentifier	 put
(	TokenNameLPAREN	
kn	TokenNameIdentifier	 kn
,	TokenNameCOMMA	
vn	TokenNameIdentifier	 vn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop70	TokenNameIdentifier	 loop70
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
133	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_133_in_map_literal3794	TokenNameIdentifier	 FOLLOW 133 in map literal3794
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
value	TokenNameIdentifier	 value
=	TokenNameEQUAL	
m	TokenNameIdentifier	 m
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
value	TokenNameIdentifier	 value
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "map_literal" 	TokenNameCOMMENT_LINE	$ANTLR end "map_literal" 
// $ANTLR start "finalTerm" 	TokenNameCOMMENT_LINE	$ANTLR start "finalTerm" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:662:1: finalTerm returns [Term term] : t= ( STRING_LITERAL | UUID | INTEGER | FLOAT | K_TRUE | K_FALSE ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:662:1: finalTerm returns [Term term] : t= ( STRING_LITERAL | UUID | INTEGER | FLOAT | K_TRUE | K_FALSE ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
Term	TokenNameIdentifier	 Term
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Term	TokenNameIdentifier	 Term
term	TokenNameIdentifier	 term
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:663:5: (t= ( STRING_LITERAL | UUID | INTEGER | FLOAT | K_TRUE | K_FALSE ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:663:5: (t= ( STRING_LITERAL | UUID | INTEGER | FLOAT | K_TRUE | K_FALSE ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:663:7: t= ( STRING_LITERAL | UUID | INTEGER | FLOAT | K_TRUE | K_FALSE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:663:7: t= ( STRING_LITERAL | UUID | INTEGER | FLOAT | K_TRUE | K_FALSE ) 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
UUID	TokenNameIdentifier	 UUID
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
term	TokenNameIdentifier	 term
=	TokenNameEQUAL	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
term	TokenNameIdentifier	 term
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "finalTerm" 	TokenNameCOMMENT_LINE	$ANTLR end "finalTerm" 
// $ANTLR start "term" 	TokenNameCOMMENT_LINE	$ANTLR start "term" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:666:1: term returns [Term term] : (ft= finalTerm | t= QMARK ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:666:1: term returns [Term term] : (ft= finalTerm | t= QMARK ); 
public	TokenNamepublic	
final	TokenNamefinal	
Term	TokenNameIdentifier	 Term
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Term	TokenNameIdentifier	 Term
term	TokenNameIdentifier	 term
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
ft	TokenNameIdentifier	 ft
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:667:5: (ft= finalTerm | t= QMARK ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:667:5: (ft= finalTerm | t= QMARK ) 
int	TokenNameint	
alt71	TokenNameIdentifier	 alt71
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA71_0	TokenNameIdentifier	 L A71 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA71_0	TokenNameIdentifier	 L A71 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
LA71_0	TokenNameIdentifier	 L A71 0
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA71_0	TokenNameIdentifier	 L A71 0
>=	TokenNameGREATER_EQUAL	
UUID	TokenNameIdentifier	 UUID
&&	TokenNameAND_AND	
LA71_0	TokenNameIdentifier	 L A71 0
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt71	TokenNameIdentifier	 alt71
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA71_0	TokenNameIdentifier	 L A71 0
==	TokenNameEQUAL_EQUAL	
QMARK	TokenNameIdentifier	 QMARK
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt71	TokenNameIdentifier	 alt71
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
71	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt71	TokenNameIdentifier	 alt71
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:667:7: ft= finalTerm 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:667:7: ft= finalTerm 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_finalTerm_in_term3874	TokenNameIdentifier	 FOLLOW final Term in term3874
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ft	TokenNameIdentifier	 ft
=	TokenNameEQUAL	
finalTerm	TokenNameIdentifier	 final Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
term	TokenNameIdentifier	 term
=	TokenNameEQUAL	
ft	TokenNameIdentifier	 ft
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:668:7: t= QMARK 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:668:7: t= QMARK 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QMARK	TokenNameIdentifier	 QMARK
,	TokenNameCOMMA	
FOLLOW_QMARK_in_term3886	TokenNameIdentifier	 FOLLOW  QMARK in term3886
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
term	TokenNameIdentifier	 term
=	TokenNameEQUAL	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
++	TokenNamePLUS_PLUS	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
term	TokenNameIdentifier	 term
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "term" 	TokenNameCOMMENT_LINE	$ANTLR end "term" 
// $ANTLR start "termPairWithOperation" 	TokenNameCOMMENT_LINE	$ANTLR start "termPairWithOperation" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:671:1: termPairWithOperation[List<Pair<ColumnIdentifier, Operation>> columns] : (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:671:1: termPairWithOperation[List<Pair<ColumnIdentifier, Operation>> columns] : (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
termPairWithOperation	TokenNameIdentifier	 term Pair With Operation
(	TokenNameLPAREN	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Pair	TokenNameIdentifier	 Pair
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>>	TokenNameRIGHT_SHIFT	
columns	TokenNameIdentifier	 columns
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Token	TokenNameIdentifier	 Token
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
key	TokenNameIdentifier	 key
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Operation	TokenNameIdentifier	 Operation
set_op	TokenNameIdentifier	 set op
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Operation	TokenNameIdentifier	 Operation
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
ll	TokenNameIdentifier	 ll
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
vv	TokenNameIdentifier	 vv
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:672:5: (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:672:5: (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term ) 
int	TokenNameint	
alt73	TokenNameIdentifier	 alt73
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt73	TokenNameIdentifier	 alt73
=	TokenNameEQUAL	
dfa73	TokenNameIdentifier	 dfa73
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt73	TokenNameIdentifier	 alt73
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:672:7: key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:672:7: key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_termPairWithOperation3913	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation3913
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
key	TokenNameIdentifier	 key
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
135	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_135_in_termPairWithOperation3915	TokenNameIdentifier	 FOLLOW 135 in term Pair With Operation3915
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:673:9: (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:673:9: (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) 
int	TokenNameint	
alt72	TokenNameIdentifier	 alt72
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt72	TokenNameIdentifier	 alt72
=	TokenNameEQUAL	
dfa72	TokenNameIdentifier	 dfa72
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt72	TokenNameIdentifier	 alt72
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:673:11: set_op= set_operation 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:673:11: set_op= set_operation 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_set_operation_in_termPairWithOperation3929	TokenNameIdentifier	 FOLLOW set operation in term Pair With Operation3929
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
set_op	TokenNameIdentifier	 set op
=	TokenNameEQUAL	
set_operation	TokenNameIdentifier	 set operation
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
columns	TokenNameIdentifier	 columns
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
key	TokenNameIdentifier	 key
,	TokenNameCOMMA	
set_op	TokenNameIdentifier	 set op
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:674:11: c= cident op= operation 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:674:11: c= cident op= operation 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_termPairWithOperation3945	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation3945
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_operation_in_termPairWithOperation3949	TokenNameIdentifier	 FOLLOW operation in term Pair With Operation3949
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
operation	TokenNameIdentifier	 operation
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
key	TokenNameIdentifier	 key
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
)	TokenNameRPAREN	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"Only expressions like X = X <op> <value> are supported."	TokenNameStringLiteral	Only expressions like X = X <op> <value> are supported.
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columns	TokenNameIdentifier	 columns
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
key	TokenNameIdentifier	 key
,	TokenNameCOMMA	
op	TokenNameIdentifier	 op
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:680:11: ll= list_literal '+' c= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:680:11: ll= list_literal '+' c= cident 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_list_literal_in_termPairWithOperation3975	TokenNameIdentifier	 FOLLOW list literal in term Pair With Operation3975
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ll	TokenNameIdentifier	 ll
=	TokenNameEQUAL	
list_literal	TokenNameIdentifier	 list literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_termPairWithOperation3977	TokenNameIdentifier	 FOLLOW 136 in term Pair With Operation3977
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_termPairWithOperation3981	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation3981
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
key	TokenNameIdentifier	 key
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
)	TokenNameRPAREN	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"Only expressions like X = <value> + X are supported."	TokenNameStringLiteral	Only expressions like X = <value> + X are supported.
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columns	TokenNameIdentifier	 columns
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
key	TokenNameIdentifier	 key
,	TokenNameCOMMA	
ListOperation	TokenNameIdentifier	 List Operation
.	TokenNameDOT	
Prepend	TokenNameIdentifier	 Prepend
(	TokenNameLPAREN	
ll	TokenNameIdentifier	 ll
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:686:11: mk= QMARK '+' c= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:686:11: mk= QMARK '+' c= cident 
{	TokenNameLBRACE	
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QMARK	TokenNameIdentifier	 QMARK
,	TokenNameCOMMA	
FOLLOW_QMARK_in_termPairWithOperation4007	TokenNameIdentifier	 FOLLOW  QMARK in term Pair With Operation4007
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_termPairWithOperation4009	TokenNameIdentifier	 FOLLOW 136 in term Pair With Operation4009
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_termPairWithOperation4013	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation4013
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
!	TokenNameNOT	
key	TokenNameIdentifier	 key
.	TokenNameDOT	
equals	TokenNameIdentifier	 equals
(	TokenNameLPAREN	
c	TokenNameIdentifier	 c
)	TokenNameRPAREN	
)	TokenNameRPAREN	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"Only expressions like X = <value> + X are supported."	TokenNameStringLiteral	Only expressions like X = <value> + X are supported.
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
pop	TokenNameIdentifier	 pop
=	TokenNameEQUAL	
new	TokenNamenew	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
(	TokenNameLPAREN	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
++	TokenNamePLUS_PLUS	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
)	TokenNameRPAREN	
,	TokenNameCOMMA	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
.	TokenNameDOT	
Kind	TokenNameIdentifier	 Kind
.	TokenNameDOT	
PREPARED_PLUS	TokenNameIdentifier	 PREPARED  PLUS
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
columns	TokenNameIdentifier	 columns
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
key	TokenNameIdentifier	 key
,	TokenNameCOMMA	
pop	TokenNameIdentifier	 pop
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:694:7: key= cident '[' t= term ']' '=' vv= term 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:694:7: key= cident '[' t= term ']' '=' vv= term 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_termPairWithOperation4045	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation4045
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
key	TokenNameIdentifier	 key
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
129	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_129_in_termPairWithOperation4047	TokenNameIdentifier	 FOLLOW 129 in term Pair With Operation4047
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_termPairWithOperation4051	TokenNameIdentifier	 FOLLOW term in term Pair With Operation4051
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
130	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_130_in_termPairWithOperation4053	TokenNameIdentifier	 FOLLOW 130 in term Pair With Operation4053
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
135	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_135_in_termPairWithOperation4055	TokenNameIdentifier	 FOLLOW 135 in term Pair With Operation4055
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_termPairWithOperation4059	TokenNameIdentifier	 FOLLOW term in term Pair With Operation4059
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
vv	TokenNameIdentifier	 vv
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// This is ambiguous, this can either set a list by index, or be a map put. 	TokenNameCOMMENT_LINE	This is ambiguous, this can either set a list by index, or be a map put. 
// So we always return a list setIndex and we'll check later and 	TokenNameCOMMENT_LINE	So we always return a list setIndex and we'll check later and 
// backtrack to a map operation if need be. 	TokenNameCOMMENT_LINE	backtrack to a map operation if need be. 
columns	TokenNameIdentifier	 columns
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
,	TokenNameCOMMA	
Operation	TokenNameIdentifier	 Operation
>	TokenNameGREATER	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
key	TokenNameIdentifier	 key
,	TokenNameCOMMA	
ListOperation	TokenNameIdentifier	 List Operation
.	TokenNameDOT	
SetIndex	TokenNameIdentifier	 Set Index
(	TokenNameLPAREN	
Arrays	TokenNameIdentifier	 Arrays
.	TokenNameDOT	
asList	TokenNameIdentifier	 as List
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
,	TokenNameCOMMA	
vv	TokenNameIdentifier	 vv
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "termPairWithOperation" 	TokenNameCOMMENT_LINE	$ANTLR end "termPairWithOperation" 
// $ANTLR start "intTerm" 	TokenNameCOMMENT_LINE	$ANTLR start "intTerm" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:703:1: intTerm returns [Term integer] : (t= INTEGER | t= QMARK ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:703:1: intTerm returns [Term integer] : (t= INTEGER | t= QMARK ); 
public	TokenNamepublic	
final	TokenNamefinal	
Term	TokenNameIdentifier	 Term
intTerm	TokenNameIdentifier	 int Term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Term	TokenNameIdentifier	 Term
integer	TokenNameIdentifier	 integer
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:704:5: (t= INTEGER | t= QMARK ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:704:5: (t= INTEGER | t= QMARK ) 
int	TokenNameint	
alt74	TokenNameIdentifier	 alt74
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA74_0	TokenNameIdentifier	 L A74 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA74_0	TokenNameIdentifier	 L A74 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt74	TokenNameIdentifier	 alt74
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA74_0	TokenNameIdentifier	 L A74 0
==	TokenNameEQUAL_EQUAL	
QMARK	TokenNameIdentifier	 QMARK
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt74	TokenNameIdentifier	 alt74
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
74	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt74	TokenNameIdentifier	 alt74
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:704:7: t= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:704:7: t= INTEGER 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_intTerm4090	TokenNameIdentifier	 FOLLOW  INTEGER in int Term4090
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
integer	TokenNameIdentifier	 integer
=	TokenNameEQUAL	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:705:7: t= QMARK 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:705:7: t= QMARK 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QMARK	TokenNameIdentifier	 QMARK
,	TokenNameCOMMA	
FOLLOW_QMARK_in_intTerm4102	TokenNameIdentifier	 FOLLOW  QMARK in int Term4102
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
integer	TokenNameIdentifier	 integer
=	TokenNameEQUAL	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
++	TokenNamePLUS_PLUS	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
integer	TokenNameIdentifier	 integer
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "intTerm" 	TokenNameCOMMENT_LINE	$ANTLR end "intTerm" 
// $ANTLR start "operation" 	TokenNameCOMMENT_LINE	$ANTLR start "operation" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:709:1: operation returns [Operation op] : ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:709:1: operation returns [Operation op] : ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal ); 
public	TokenNamepublic	
final	TokenNamefinal	
Operation	TokenNameIdentifier	 Operation
operation	TokenNameIdentifier	 operation
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Operation	TokenNameIdentifier	 Operation
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
sign	TokenNameIdentifier	 sign
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
ll	TokenNameIdentifier	 ll
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
sl	TokenNameIdentifier	 sl
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
ml	TokenNameIdentifier	 ml
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:710:5: ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:710:5: ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal ) 
int	TokenNameint	
alt76	TokenNameIdentifier	 alt76
=	TokenNameEQUAL	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt76	TokenNameIdentifier	 alt76
=	TokenNameEQUAL	
dfa76	TokenNameIdentifier	 dfa76
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt76	TokenNameIdentifier	 alt76
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:710:7: '+' i= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:710:7: '+' i= INTEGER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_operation4128	TokenNameIdentifier	 FOLLOW 136 in operation4128
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_operation4132	TokenNameIdentifier	 FOLLOW  INTEGER in operation4132
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
ColumnOperation	TokenNameIdentifier	 Column Operation
.	TokenNameDOT	
CounterInc	TokenNameIdentifier	 Counter Inc
(	TokenNameLPAREN	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
i	TokenNameIdentifier	 i
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
i	TokenNameIdentifier	 i
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:711:7: (sign= '-' )? i= INTEGER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:711:7: (sign= '-' )? i= INTEGER 
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:711:11: (sign= '-' )? 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:711:11: (sign= '-' )? 
int	TokenNameint	
alt75	TokenNameIdentifier	 alt75
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA75_0	TokenNameIdentifier	 L A75 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA75_0	TokenNameIdentifier	 L A75 0
==	TokenNameEQUAL_EQUAL	
137	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt75	TokenNameIdentifier	 alt75
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt75	TokenNameIdentifier	 alt75
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:711:11: sign= '-' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:711:11: sign= '-' 
{	TokenNameLBRACE	
sign	TokenNameIdentifier	 sign
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
137	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_137_in_operation4144	TokenNameIdentifier	 FOLLOW 137 in operation4144
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
INTEGER	TokenNameIdentifier	 INTEGER
,	TokenNameCOMMA	
FOLLOW_INTEGER_in_operation4149	TokenNameIdentifier	 FOLLOW  INTEGER in operation4149
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
i	TokenNameIdentifier	 i
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
i	TokenNameIdentifier	 i
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
validateMinusSupplied	TokenNameIdentifier	 validate Minus Supplied
(	TokenNameLPAREN	
sign	TokenNameIdentifier	 sign
,	TokenNameCOMMA	
t	TokenNameIdentifier	 t
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
sign	TokenNameIdentifier	 sign
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
)	TokenNameRPAREN	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
-	TokenNameMINUS	
(	TokenNameLPAREN	
Long	TokenNameIdentifier	 Long
.	TokenNameDOT	
valueOf	TokenNameIdentifier	 value Of
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
ColumnOperation	TokenNameIdentifier	 Column Operation
.	TokenNameDOT	
CounterDec	TokenNameIdentifier	 Counter Dec
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:719:7: '+' mk= QMARK 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:719:7: '+' mk= QMARK 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_operation4165	TokenNameIdentifier	 FOLLOW 136 in operation4165
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QMARK	TokenNameIdentifier	 QMARK
,	TokenNameCOMMA	
FOLLOW_QMARK_in_operation4169	TokenNameIdentifier	 FOLLOW  QMARK in operation4169
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
new	TokenNamenew	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
(	TokenNameLPAREN	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
++	TokenNamePLUS_PLUS	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
)	TokenNameRPAREN	
,	TokenNameCOMMA	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
.	TokenNameDOT	
Kind	TokenNameIdentifier	 Kind
.	TokenNameDOT	
PLUS_PREPARED	TokenNameIdentifier	 PLUS  PREPARED
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:720:7: '-' mk= QMARK 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:720:7: '-' mk= QMARK 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
137	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_137_in_operation4179	TokenNameIdentifier	 FOLLOW 137 in operation4179
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
mk	TokenNameIdentifier	 mk
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
QMARK	TokenNameIdentifier	 QMARK
,	TokenNameCOMMA	
FOLLOW_QMARK_in_operation4183	TokenNameIdentifier	 FOLLOW  QMARK in operation4183
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
new	TokenNamenew	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
(	TokenNameLPAREN	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
mk	TokenNameIdentifier	 mk
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
mk	TokenNameIdentifier	 mk
.	TokenNameDOT	
getType	TokenNameIdentifier	 get Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
0	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
++	TokenNamePLUS_PLUS	
currentBindMarkerIdx	TokenNameIdentifier	 current Bind Marker Idx
)	TokenNameRPAREN	
,	TokenNameCOMMA	
PreparedOperation	TokenNameIdentifier	 Prepared Operation
.	TokenNameDOT	
Kind	TokenNameIdentifier	 Kind
.	TokenNameDOT	
MINUS_PREPARED	TokenNameIdentifier	 MINUS  PREPARED
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:722:7: '+' ll= list_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:722:7: '+' ll= list_literal 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_operation4194	TokenNameIdentifier	 FOLLOW 136 in operation4194
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_list_literal_in_operation4198	TokenNameIdentifier	 FOLLOW list literal in operation4198
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ll	TokenNameIdentifier	 ll
=	TokenNameEQUAL	
list_literal	TokenNameIdentifier	 list literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
ListOperation	TokenNameIdentifier	 List Operation
.	TokenNameDOT	
Append	TokenNameIdentifier	 Append
(	TokenNameLPAREN	
ll	TokenNameIdentifier	 ll
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
6	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:723:7: '-' ll= list_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:723:7: '-' ll= list_literal 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
137	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_137_in_operation4208	TokenNameIdentifier	 FOLLOW 137 in operation4208
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_list_literal_in_operation4212	TokenNameIdentifier	 FOLLOW list literal in operation4212
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ll	TokenNameIdentifier	 ll
=	TokenNameEQUAL	
list_literal	TokenNameIdentifier	 list literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
ListOperation	TokenNameIdentifier	 List Operation
.	TokenNameDOT	
Discard	TokenNameIdentifier	 Discard
(	TokenNameLPAREN	
ll	TokenNameIdentifier	 ll
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
7	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:725:7: '+' sl= set_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:725:7: '+' sl= set_literal 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_operation4223	TokenNameIdentifier	 FOLLOW 136 in operation4223
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_set_literal_in_operation4227	TokenNameIdentifier	 FOLLOW set literal in operation4227
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sl	TokenNameIdentifier	 sl
=	TokenNameEQUAL	
set_literal	TokenNameIdentifier	 set literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
SetOperation	TokenNameIdentifier	 Set Operation
.	TokenNameDOT	
Add	TokenNameIdentifier	 Add
(	TokenNameLPAREN	
sl	TokenNameIdentifier	 sl
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
8	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:726:7: '-' sl= set_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:726:7: '-' sl= set_literal 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
137	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_137_in_operation4237	TokenNameIdentifier	 FOLLOW 137 in operation4237
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_set_literal_in_operation4241	TokenNameIdentifier	 FOLLOW set literal in operation4241
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
sl	TokenNameIdentifier	 sl
=	TokenNameEQUAL	
set_literal	TokenNameIdentifier	 set literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
SetOperation	TokenNameIdentifier	 Set Operation
.	TokenNameDOT	
Discard	TokenNameIdentifier	 Discard
(	TokenNameLPAREN	
sl	TokenNameIdentifier	 sl
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
9	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:728:7: '+' ml= map_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:728:7: '+' ml= map_literal 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
136	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_136_in_operation4252	TokenNameIdentifier	 FOLLOW 136 in operation4252
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_map_literal_in_operation4256	TokenNameIdentifier	 FOLLOW map literal in operation4256
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
ml	TokenNameIdentifier	 ml
=	TokenNameEQUAL	
map_literal	TokenNameIdentifier	 map literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
op	TokenNameIdentifier	 op
=	TokenNameEQUAL	
MapOperation	TokenNameIdentifier	 Map Operation
.	TokenNameDOT	
Put	TokenNameIdentifier	 Put
(	TokenNameLPAREN	
ml	TokenNameIdentifier	 ml
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
op	TokenNameIdentifier	 op
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "operation" 	TokenNameCOMMENT_LINE	$ANTLR end "operation" 
// $ANTLR start "properties" 	TokenNameCOMMENT_LINE	$ANTLR start "properties" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:731:1: properties[PropertyDefinitions props] : property[props] ( K_AND property[props] )* ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:731:1: properties[PropertyDefinitions props] : property[props] ( K_AND property[props] )* ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
properties	TokenNameIdentifier	 properties
(	TokenNameLPAREN	
PropertyDefinitions	TokenNameIdentifier	 Property Definitions
props	TokenNameIdentifier	 props
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:5: ( property[props] ( K_AND property[props] )* ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:5: ( property[props] ( K_AND property[props] )* ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:7: property[props] ( K_AND property[props] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:7: property[props] ( K_AND property[props] )* 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_property_in_properties4276	TokenNameIdentifier	 FOLLOW property in properties4276
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
property	TokenNameIdentifier	 property
(	TokenNameLPAREN	
props	TokenNameIdentifier	 props
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:23: ( K_AND property[props] )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:23: ( K_AND property[props] )* 
loop77	TokenNameIdentifier	 loop77
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt77	TokenNameIdentifier	 alt77
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA77_0	TokenNameIdentifier	 L A77 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA77_0	TokenNameIdentifier	 L A77 0
==	TokenNameEQUAL_EQUAL	
K_AND	TokenNameIdentifier	 K  AND
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt77	TokenNameIdentifier	 alt77
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt77	TokenNameIdentifier	 alt77
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:24: K_AND property[props] 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:732:24: K_AND property[props] 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_AND	TokenNameIdentifier	 K  AND
,	TokenNameCOMMA	
FOLLOW_K_AND_in_properties4280	TokenNameIdentifier	 FOLLOW  K  AND in properties4280
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_property_in_properties4282	TokenNameIdentifier	 FOLLOW property in properties4282
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
property	TokenNameIdentifier	 property
(	TokenNameLPAREN	
props	TokenNameIdentifier	 props
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop77	TokenNameIdentifier	 loop77
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "properties" 	TokenNameCOMMENT_LINE	$ANTLR end "properties" 
// $ANTLR start "property" 	TokenNameCOMMENT_LINE	$ANTLR start "property" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:735:1: property[PropertyDefinitions props] : k= cident '=' (simple= propertyValue | map= map_literal ) ; 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:735:1: property[PropertyDefinitions props] : k= cident '=' (simple= propertyValue | map= map_literal ) ; 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
property	TokenNameIdentifier	 property
(	TokenNameLPAREN	
PropertyDefinitions	TokenNameIdentifier	 Property Definitions
props	TokenNameIdentifier	 props
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
simple	TokenNameIdentifier	 simple
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Map	TokenNameIdentifier	 Map
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
map	TokenNameIdentifier	 map
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:5: (k= cident '=' (simple= propertyValue | map= map_literal ) ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:5: (k= cident '=' (simple= propertyValue | map= map_literal ) ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:7: k= cident '=' (simple= propertyValue | map= map_literal ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:7: k= cident '=' (simple= propertyValue | map= map_literal ) 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_property4305	TokenNameIdentifier	 FOLLOW cident in property4305
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
135	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_135_in_property4307	TokenNameIdentifier	 FOLLOW 135 in property4307
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:20: (simple= propertyValue | map= map_literal ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:20: (simple= propertyValue | map= map_literal ) 
int	TokenNameint	
alt78	TokenNameIdentifier	 alt78
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA78_0	TokenNameIdentifier	 L A78 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA78_0	TokenNameIdentifier	 L A78 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA78_0	TokenNameIdentifier	 L A78 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA78_0	TokenNameIdentifier	 L A78 0
<=	TokenNameLESS_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
>=	TokenNameGREATER_EQUAL	
FLOAT	TokenNameIdentifier	 FLOAT
&&	TokenNameAND_AND	
LA78_0	TokenNameIdentifier	 L A78 0
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA78_0	TokenNameIdentifier	 L A78 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt78	TokenNameIdentifier	 alt78
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA78_0	TokenNameIdentifier	 L A78 0
==	TokenNameEQUAL_EQUAL	
132	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt78	TokenNameIdentifier	 alt78
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
78	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt78	TokenNameIdentifier	 alt78
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:21: simple= propertyValue 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:736:21: simple= propertyValue 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_propertyValue_in_property4312	TokenNameIdentifier	 FOLLOW property Value in property4312
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
simple	TokenNameIdentifier	 simple
=	TokenNameEQUAL	
propertyValue	TokenNameIdentifier	 property Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
props	TokenNameIdentifier	 props
.	TokenNameDOT	
addProperty	TokenNameIdentifier	 add Property
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
simple	TokenNameIdentifier	 simple
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
SyntaxException	TokenNameIdentifier	 Syntax Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:737:24: map= map_literal 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:737:24: map= map_literal 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_map_literal_in_property4341	TokenNameIdentifier	 FOLLOW map literal in property4341
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
map	TokenNameIdentifier	 map
=	TokenNameEQUAL	
map_literal	TokenNameIdentifier	 map literal
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
props	TokenNameIdentifier	 props
.	TokenNameDOT	
addProperty	TokenNameIdentifier	 add Property
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
convertMap	TokenNameIdentifier	 convert Map
(	TokenNameLPAREN	
map	TokenNameIdentifier	 map
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
SyntaxException	TokenNameIdentifier	 Syntax Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "property" 	TokenNameCOMMENT_LINE	$ANTLR end "property" 
// $ANTLR start "propertyValue" 	TokenNameCOMMENT_LINE	$ANTLR start "propertyValue" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:740:1: propertyValue returns [String str] : (v= ( STRING_LITERAL | IDENT | INTEGER | FLOAT | K_TRUE | K_FALSE ) | u= unreserved_keyword ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:740:1: propertyValue returns [String str] : (v= ( STRING_LITERAL | IDENT | INTEGER | FLOAT | K_TRUE | K_FALSE ) | u= unreserved_keyword ); 
public	TokenNamepublic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
propertyValue	TokenNameIdentifier	 property Value
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
String	TokenNameIdentifier	 String
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
String	TokenNameIdentifier	 String
u	TokenNameIdentifier	 u
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:741:5: (v= ( STRING_LITERAL | IDENT | INTEGER | FLOAT | K_TRUE | K_FALSE ) | u= unreserved_keyword ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:741:5: (v= ( STRING_LITERAL | IDENT | INTEGER | FLOAT | K_TRUE | K_FALSE ) | u= unreserved_keyword ) 
int	TokenNameint	
alt79	TokenNameIdentifier	 alt79
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA79_0	TokenNameIdentifier	 L A79 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
>=	TokenNameGREATER_EQUAL	
FLOAT	TokenNameIdentifier	 FLOAT
&&	TokenNameAND_AND	
LA79_0	TokenNameIdentifier	 L A79 0
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt79	TokenNameIdentifier	 alt79
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA79_0	TokenNameIdentifier	 L A79 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA79_0	TokenNameIdentifier	 L A79 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA79_0	TokenNameIdentifier	 L A79 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA79_0	TokenNameIdentifier	 L A79 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA79_0	TokenNameIdentifier	 L A79 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA79_0	TokenNameIdentifier	 L A79 0
<=	TokenNameLESS_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt79	TokenNameIdentifier	 alt79
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
79	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt79	TokenNameIdentifier	 alt79
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:741:7: v= ( STRING_LITERAL | IDENT | INTEGER | FLOAT | K_TRUE | K_FALSE ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:741:7: v= ( STRING_LITERAL | IDENT | INTEGER | FLOAT | K_TRUE | K_FALSE ) 
{	TokenNameLBRACE	
v	TokenNameIdentifier	 v
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
INTEGER	TokenNameIdentifier	 INTEGER
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
FLOAT	TokenNameIdentifier	 FLOAT
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
K_FALSE	TokenNameIdentifier	 K  FALSE
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
(	TokenNameLPAREN	
v	TokenNameIdentifier	 v
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
v	TokenNameIdentifier	 v
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:742:7: u= unreserved_keyword 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:742:7: u= unreserved_keyword 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_unreserved_keyword_in_propertyValue4403	TokenNameIdentifier	 FOLLOW unreserved keyword in property Value4403
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
u	TokenNameIdentifier	 u
=	TokenNameEQUAL	
unreserved_keyword	TokenNameIdentifier	 unreserved keyword
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
u	TokenNameIdentifier	 u
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
str	TokenNameIdentifier	 str
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "propertyValue" 	TokenNameCOMMENT_LINE	$ANTLR end "propertyValue" 
// $ANTLR start "tokenDefinition" 	TokenNameCOMMENT_LINE	$ANTLR start "tokenDefinition" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:746:1: tokenDefinition returns [Pair<String, List<Term>> tkdef] : ( K_TOKEN '(' t1= term ( ',' tn= term )* ')' | t= STRING_LITERAL ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:746:1: tokenDefinition returns [Pair<String, List<Term>> tkdef] : ( K_TOKEN '(' t1= term ( ',' tn= term )* ')' | t= STRING_LITERAL ); 
public	TokenNamepublic	
final	TokenNamefinal	
Pair	TokenNameIdentifier	 Pair
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>>	TokenNameRIGHT_SHIFT	
tokenDefinition	TokenNameIdentifier	 token Definition
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Pair	TokenNameIdentifier	 Pair
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>>	TokenNameRIGHT_SHIFT	
tkdef	TokenNameIdentifier	 tkdef
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
tn	TokenNameIdentifier	 tn
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:747:5: ( K_TOKEN '(' t1= term ( ',' tn= term )* ')' | t= STRING_LITERAL ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:747:5: ( K_TOKEN '(' t1= term ( ',' tn= term )* ')' | t= STRING_LITERAL ) 
int	TokenNameint	
alt81	TokenNameIdentifier	 alt81
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA81_0	TokenNameIdentifier	 L A81 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA81_0	TokenNameIdentifier	 L A81 0
==	TokenNameEQUAL_EQUAL	
K_TOKEN	TokenNameIdentifier	 K  TOKEN
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt81	TokenNameIdentifier	 alt81
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA81_0	TokenNameIdentifier	 L A81 0
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt81	TokenNameIdentifier	 alt81
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
81	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt81	TokenNameIdentifier	 alt81
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:747:7: K_TOKEN '(' t1= term ( ',' tn= term )* ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:747:7: K_TOKEN '(' t1= term ( ',' tn= term )* ')' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TOKEN	TokenNameIdentifier	 K  TOKEN
,	TokenNameCOMMA	
FOLLOW_K_TOKEN_in_tokenDefinition4451	TokenNameIdentifier	 FOLLOW  K  TOKEN in token Definition4451
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
l	TokenNameIdentifier	 l
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_tokenDefinition4464	TokenNameIdentifier	 FOLLOW 125 in token Definition4464
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_tokenDefinition4468	TokenNameIdentifier	 FOLLOW term in token Definition4468
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
t1	TokenNameIdentifier	 t1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:748:37: ( ',' tn= term )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:748:37: ( ',' tn= term )* 
loop80	TokenNameIdentifier	 loop80
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt80	TokenNameIdentifier	 alt80
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA80_0	TokenNameIdentifier	 L A80 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA80_0	TokenNameIdentifier	 L A80 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt80	TokenNameIdentifier	 alt80
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt80	TokenNameIdentifier	 alt80
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:748:39: ',' tn= term 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:748:39: ',' tn= term 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_tokenDefinition4474	TokenNameIdentifier	 FOLLOW 127 in token Definition4474
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_tokenDefinition4478	TokenNameIdentifier	 FOLLOW term in token Definition4478
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tn	TokenNameIdentifier	 tn
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
tn	TokenNameIdentifier	 tn
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop80	TokenNameIdentifier	 loop80
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_tokenDefinition4486	TokenNameIdentifier	 FOLLOW 126 in token Definition4486
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tkdef	TokenNameIdentifier	 tkdef
=	TokenNameEQUAL	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>>	TokenNameRIGHT_SHIFT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
l	TokenNameIdentifier	 l
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:749:7: t= STRING_LITERAL 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:749:7: t= STRING_LITERAL 
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
,	TokenNameCOMMA	
FOLLOW_STRING_LITERAL_in_tokenDefinition4498	TokenNameIdentifier	 FOLLOW  STRING  LITERAL in token Definition4498
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tkdef	TokenNameIdentifier	 tkdef
=	TokenNameEQUAL	
Pair	TokenNameIdentifier	 Pair
.	TokenNameDOT	
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>>	TokenNameRIGHT_SHIFT	
create	TokenNameIdentifier	 create
(	TokenNameLPAREN	
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
tkdef	TokenNameIdentifier	 tkdef
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "tokenDefinition" 	TokenNameCOMMENT_LINE	$ANTLR end "tokenDefinition" 
// $ANTLR start "relation" 	TokenNameCOMMENT_LINE	$ANTLR start "relation" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:752:1: relation[List<Relation> clauses] : (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:752:1: relation[List<Relation> clauses] : (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' ); 
public	TokenNamepublic	
final	TokenNamefinal	
void	TokenNamevoid	
relation	TokenNameIdentifier	 relation
(	TokenNameLPAREN	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Relation	TokenNameIdentifier	 Relation
>	TokenNameGREATER	
clauses	TokenNameIdentifier	 clauses
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
Token	TokenNameIdentifier	 Token
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
name	TokenNameIdentifier	 name
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
name1	TokenNameIdentifier	 name1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
namen	TokenNameIdentifier	 namen
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Pair	TokenNameIdentifier	 Pair
<	TokenNameLESS	
String	TokenNameIdentifier	 String
,	TokenNameCOMMA	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
Term	TokenNameIdentifier	 Term
>>	TokenNameRIGHT_SHIFT	
tkd	TokenNameIdentifier	 tkd
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
f1	TokenNameIdentifier	 f1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Term	TokenNameIdentifier	 Term
fN	TokenNameIdentifier	 f N
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:753:5: (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:753:5: (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' ) 
int	TokenNameint	
alt84	TokenNameIdentifier	 alt84
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
alt84	TokenNameIdentifier	 alt84
=	TokenNameEQUAL	
dfa84	TokenNameIdentifier	 dfa84
.	TokenNameDOT	
predict	TokenNameIdentifier	 predict
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt84	TokenNameIdentifier	 alt84
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:753:7: name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:753:7: name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_relation4520	TokenNameIdentifier	 FOLLOW cident in relation4520
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
name	TokenNameIdentifier	 name
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
135	TokenNameIntegerLiteral	
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
138	TokenNameIntegerLiteral	
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
141	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_relation4546	TokenNameIdentifier	 FOLLOW term in relation4546
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
clauses	TokenNameIdentifier	 clauses
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
new	TokenNamenew	
Relation	TokenNameIdentifier	 Relation
(	TokenNameLPAREN	
name	TokenNameIdentifier	 name
,	TokenNameCOMMA	
(	TokenNameLPAREN	
type	TokenNameIdentifier	 type
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
type	TokenNameIdentifier	 type
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:754:7: K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:754:7: K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TOKEN	TokenNameIdentifier	 K  TOKEN
,	TokenNameCOMMA	
FOLLOW_K_TOKEN_in_relation4556	TokenNameIdentifier	 FOLLOW  K  TOKEN in relation4556
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
List	TokenNameIdentifier	 List
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
l	TokenNameIdentifier	 l
=	TokenNameEQUAL	
new	TokenNamenew	
ArrayList	TokenNameIdentifier	 Array List
<	TokenNameLESS	
ColumnIdentifier	TokenNameIdentifier	 Column Identifier
>	TokenNameGREATER	
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_relation4567	TokenNameIdentifier	 FOLLOW 125 in relation4567
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_relation4571	TokenNameIdentifier	 FOLLOW cident in relation4571
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
name1	TokenNameIdentifier	 name1
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
name1	TokenNameIdentifier	 name1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:755:43: ( ',' namen= cident )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:755:43: ( ',' namen= cident )* 
loop82	TokenNameIdentifier	 loop82
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt82	TokenNameIdentifier	 alt82
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA82_0	TokenNameIdentifier	 L A82 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA82_0	TokenNameIdentifier	 L A82 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt82	TokenNameIdentifier	 alt82
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt82	TokenNameIdentifier	 alt82
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:755:45: ',' namen= cident 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:755:45: ',' namen= cident 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_relation4577	TokenNameIdentifier	 FOLLOW 127 in relation4577
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_relation4581	TokenNameIdentifier	 FOLLOW cident in relation4581
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
namen	TokenNameIdentifier	 namen
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
namen	TokenNameIdentifier	 namen
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop82	TokenNameIdentifier	 loop82
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_relation4587	TokenNameIdentifier	 FOLLOW 126 in relation4587
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
type	TokenNameIdentifier	 type
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
135	TokenNameIntegerLiteral	
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
138	TokenNameIntegerLiteral	
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
141	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_tokenDefinition_in_relation4623	TokenNameIdentifier	 FOLLOW token Definition in relation4623
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
tkd	TokenNameIdentifier	 tkd
=	TokenNameEQUAL	
tokenDefinition	TokenNameIdentifier	 token Definition
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
tkd	TokenNameIdentifier	 tkd
.	TokenNameDOT	
right	TokenNameIdentifier	 right
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
&&	TokenNameAND_AND	
tkd	TokenNameIdentifier	 tkd
.	TokenNameDOT	
right	TokenNameIdentifier	 right
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
!=	TokenNameNOT_EQUAL	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"The number of arguments to the token() function don't match"	TokenNameStringLiteral	The number of arguments to the token() function don't match
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
Term	TokenNameIdentifier	 Term
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
tkd	TokenNameIdentifier	 tkd
.	TokenNameDOT	
left	TokenNameIdentifier	 left
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
null	TokenNamenull	
:	TokenNameCOLON	
new	TokenNamenew	
Term	TokenNameIdentifier	 Term
(	TokenNameLPAREN	
tkd	TokenNameIdentifier	 tkd
.	TokenNameDOT	
left	TokenNameIdentifier	 left
,	TokenNameCOMMA	
Term	TokenNameIdentifier	 Term
.	TokenNameDOT	
Type	TokenNameIdentifier	 Type
.	TokenNameDOT	
STRING	TokenNameIdentifier	 STRING
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
size	TokenNameIdentifier	 size
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
Term	TokenNameIdentifier	 Term
tt	TokenNameIdentifier	 tt
=	TokenNameEQUAL	
str	TokenNameIdentifier	 str
==	TokenNameEQUAL_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
Term	TokenNameIdentifier	 Term
.	TokenNameDOT	
tokenOf	TokenNameIdentifier	 token Of
(	TokenNameLPAREN	
tkd	TokenNameIdentifier	 tkd
.	TokenNameDOT	
right	TokenNameIdentifier	 right
.	TokenNameDOT	
get	TokenNameIdentifier	 get
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
)	TokenNameRPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
str	TokenNameIdentifier	 str
;	TokenNameSEMICOLON	
clauses	TokenNameIdentifier	 clauses
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
new	TokenNamenew	
Relation	TokenNameIdentifier	 Relation
(	TokenNameLPAREN	
l	TokenNameIdentifier	 l
.	TokenNameDOT	
get	TokenNameIdentifier	 get
(	TokenNameLPAREN	
i	TokenNameIdentifier	 i
)	TokenNameRPAREN	
,	TokenNameCOMMA	
(	TokenNameLPAREN	
type	TokenNameIdentifier	 type
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
type	TokenNameIdentifier	 type
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
,	TokenNameCOMMA	
tt	TokenNameIdentifier	 tt
,	TokenNameCOMMA	
true	TokenNametrue	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:772:7: name= cident K_IN '(' f1= term ( ',' fN= term )* ')' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:772:7: name= cident K_IN '(' f1= term ( ',' fN= term )* ')' 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_cident_in_relation4642	TokenNameIdentifier	 FOLLOW cident in relation4642
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
name	TokenNameIdentifier	 name
=	TokenNameEQUAL	
cident	TokenNameIdentifier	 cident
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_IN	TokenNameIdentifier	 K  IN
,	TokenNameCOMMA	
FOLLOW_K_IN_in_relation4644	TokenNameIdentifier	 FOLLOW  K  IN in relation4644
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
Relation	TokenNameIdentifier	 Relation
rel	TokenNameIdentifier	 rel
=	TokenNameEQUAL	
Relation	TokenNameIdentifier	 Relation
.	TokenNameDOT	
createInRelation	TokenNameIdentifier	 create In Relation
(	TokenNameLPAREN	
name	TokenNameIdentifier	 name
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
125	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_125_in_relation4655	TokenNameIdentifier	 FOLLOW 125 in relation4655
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_relation4659	TokenNameIdentifier	 FOLLOW term in relation4659
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
f1	TokenNameIdentifier	 f1
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
rel	TokenNameIdentifier	 rel
.	TokenNameDOT	
addInValue	TokenNameIdentifier	 add In Value
(	TokenNameLPAREN	
f1	TokenNameIdentifier	 f1
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:773:44: ( ',' fN= term )* 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:773:44: ( ',' fN= term )* 
loop83	TokenNameIdentifier	 loop83
:	TokenNameCOLON	
do	TokenNamedo	
{	TokenNameLBRACE	
int	TokenNameint	
alt83	TokenNameIdentifier	 alt83
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA83_0	TokenNameIdentifier	 L A83 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA83_0	TokenNameIdentifier	 L A83 0
==	TokenNameEQUAL_EQUAL	
127	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt83	TokenNameIdentifier	 alt83
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt83	TokenNameIdentifier	 alt83
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:773:45: ',' fN= term 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:773:45: ',' fN= term 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_relation4664	TokenNameIdentifier	 FOLLOW 127 in relation4664
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_term_in_relation4668	TokenNameIdentifier	 FOLLOW term in relation4668
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
fN	TokenNameIdentifier	 f N
=	TokenNameEQUAL	
term	TokenNameIdentifier	 term
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
rel	TokenNameIdentifier	 rel
.	TokenNameDOT	
addInValue	TokenNameIdentifier	 add In Value
(	TokenNameLPAREN	
fN	TokenNameIdentifier	 f N
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
break	TokenNamebreak	
loop83	TokenNameIdentifier	 loop83
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
while	TokenNamewhile	
(	TokenNameLPAREN	
true	TokenNametrue	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
126	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_126_in_relation4675	TokenNameIdentifier	 FOLLOW 126 in relation4675
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
clauses	TokenNameIdentifier	 clauses
.	TokenNameDOT	
add	TokenNameIdentifier	 add
(	TokenNameLPAREN	
rel	TokenNameIdentifier	 rel
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "relation" 	TokenNameCOMMENT_LINE	$ANTLR end "relation" 
// $ANTLR start "comparatorType" 	TokenNameCOMMENT_LINE	$ANTLR start "comparatorType" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:776:1: comparatorType returns [ParsedType t] : (c= native_type | c= collection_type | s= STRING_LITERAL ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:776:1: comparatorType returns [ParsedType t] : (c= native_type | c= collection_type | s= STRING_LITERAL ); 
public	TokenNamepublic	
final	TokenNamefinal	
ParsedType	TokenNameIdentifier	 Parsed Type
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ParsedType	TokenNameIdentifier	 Parsed Type
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:777:5: (c= native_type | c= collection_type | s= STRING_LITERAL ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:777:5: (c= native_type | c= collection_type | s= STRING_LITERAL ) 
int	TokenNameint	
alt85	TokenNameIdentifier	 alt85
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt85	TokenNameIdentifier	 alt85
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_SET	TokenNameIdentifier	 K  SET
:	TokenNameCOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt85	TokenNameIdentifier	 alt85
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt85	TokenNameIdentifier	 alt85
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
85	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt85	TokenNameIdentifier	 alt85
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:777:7: c= native_type 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:777:7: c= native_type 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_native_type_in_comparatorType4700	TokenNameIdentifier	 FOLLOW native type in comparator Type4700
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
native_type	TokenNameIdentifier	 native type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:778:7: c= collection_type 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:778:7: c= collection_type 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_collection_type_in_comparatorType4716	TokenNameIdentifier	 FOLLOW collection type in comparator Type4716
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
c	TokenNameIdentifier	 c
=	TokenNameEQUAL	
collection_type	TokenNameIdentifier	 collection type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
c	TokenNameIdentifier	 c
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:779:7: s= STRING_LITERAL 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:779:7: s= STRING_LITERAL 
{	TokenNameLBRACE	
s	TokenNameIdentifier	 s
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
,	TokenNameCOMMA	
FOLLOW_STRING_LITERAL_in_comparatorType4728	TokenNameIdentifier	 FOLLOW  STRING  LITERAL in comparator Type4728
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
new	TokenNamenew	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Custom	TokenNameIdentifier	 Custom
(	TokenNameLPAREN	
(	TokenNameLPAREN	
s	TokenNameIdentifier	 s
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
s	TokenNameIdentifier	 s
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
SyntaxException	TokenNameIdentifier	 Syntax Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"Cannot parse type "	TokenNameStringLiteral	Cannot parse type 
+	TokenNamePLUS	
(	TokenNameLPAREN	
s	TokenNameIdentifier	 s
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
s	TokenNameIdentifier	 s
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
+	TokenNamePLUS	
": "	TokenNameStringLiteral	: 
+	TokenNamePLUS	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
ConfigurationException	TokenNameIdentifier	 Configuration Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
"Errot setting type "	TokenNameStringLiteral	Errot setting type 
+	TokenNamePLUS	
(	TokenNameLPAREN	
s	TokenNameIdentifier	 s
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
s	TokenNameIdentifier	 s
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
+	TokenNamePLUS	
": "	TokenNameStringLiteral	: 
+	TokenNamePLUS	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
t	TokenNameIdentifier	 t
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "comparatorType" 	TokenNameCOMMENT_LINE	$ANTLR end "comparatorType" 
// $ANTLR start "native_type" 	TokenNameCOMMENT_LINE	$ANTLR start "native_type" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:791:1: native_type returns [ParsedType t] : ( K_ASCII | K_BIGINT | K_BLOB | K_BOOLEAN | K_COUNTER | K_DECIMAL | K_DOUBLE | K_FLOAT | K_INET | K_INT | K_TEXT | K_TIMESTAMP | K_UUID | K_VARCHAR | K_VARINT | K_TIMEUUID ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:791:1: native_type returns [ParsedType t] : ( K_ASCII | K_BIGINT | K_BLOB | K_BOOLEAN | K_COUNTER | K_DECIMAL | K_DOUBLE | K_FLOAT | K_INET | K_INT | K_TEXT | K_TIMESTAMP | K_UUID | K_VARCHAR | K_VARINT | K_TIMEUUID ); 
public	TokenNamepublic	
final	TokenNamefinal	
ParsedType	TokenNameIdentifier	 Parsed Type
native_type	TokenNameIdentifier	 native type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ParsedType	TokenNameIdentifier	 Parsed Type
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:792:5: ( K_ASCII | K_BIGINT | K_BLOB | K_BOOLEAN | K_COUNTER | K_DECIMAL | K_DOUBLE | K_FLOAT | K_INET | K_INT | K_TEXT | K_TIMESTAMP | K_UUID | K_VARCHAR | K_VARINT | K_TIMEUUID ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:792:5: ( K_ASCII | K_BIGINT | K_BLOB | K_BOOLEAN | K_COUNTER | K_DECIMAL | K_DOUBLE | K_FLOAT | K_INET | K_INT | K_TEXT | K_TIMESTAMP | K_UUID | K_VARCHAR | K_VARINT | K_TIMEUUID ) 
int	TokenNameint	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
16	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_ASCII	TokenNameIdentifier	 K  ASCII
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_BLOB	TokenNameIdentifier	 K  BLOB
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
4	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
5	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
6	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
7	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
8	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_INET	TokenNameIdentifier	 K  INET
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
9	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_INT	TokenNameIdentifier	 K  INT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
10	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_TEXT	TokenNameIdentifier	 K  TEXT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
11	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
12	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_UUID	TokenNameIdentifier	 K  UUID
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
13	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
14	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_VARINT	TokenNameIdentifier	 K  VARINT
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
15	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt86	TokenNameIdentifier	 alt86
=	TokenNameEQUAL	
16	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
86	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt86	TokenNameIdentifier	 alt86
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:792:7: K_ASCII 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:792:7: K_ASCII 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_ASCII	TokenNameIdentifier	 K  ASCII
,	TokenNameCOMMA	
FOLLOW_K_ASCII_in_native_type4757	TokenNameIdentifier	 FOLLOW  K  ASCII in native type4757
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
ASCII	TokenNameIdentifier	 ASCII
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:793:7: K_BIGINT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:793:7: K_BIGINT 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BIGINT	TokenNameIdentifier	 K  BIGINT
,	TokenNameCOMMA	
FOLLOW_K_BIGINT_in_native_type4771	TokenNameIdentifier	 FOLLOW  K  BIGINT in native type4771
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
BIGINT	TokenNameIdentifier	 BIGINT
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:794:7: K_BLOB 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:794:7: K_BLOB 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BLOB	TokenNameIdentifier	 K  BLOB
,	TokenNameCOMMA	
FOLLOW_K_BLOB_in_native_type4784	TokenNameIdentifier	 FOLLOW  K  BLOB in native type4784
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
BLOB	TokenNameIdentifier	 BLOB
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
4	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:795:7: K_BOOLEAN 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:795:7: K_BOOLEAN 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_BOOLEAN	TokenNameIdentifier	 K  BOOLEAN
,	TokenNameCOMMA	
FOLLOW_K_BOOLEAN_in_native_type4799	TokenNameIdentifier	 FOLLOW  K  BOOLEAN in native type4799
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
BOOLEAN	TokenNameIdentifier	 BOOLEAN
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
5	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:796:7: K_COUNTER 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:796:7: K_COUNTER 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
,	TokenNameCOMMA	
FOLLOW_K_COUNTER_in_native_type4811	TokenNameIdentifier	 FOLLOW  K  COUNTER in native type4811
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
COUNTER	TokenNameIdentifier	 COUNTER
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
6	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:797:7: K_DECIMAL 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:797:7: K_DECIMAL 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DECIMAL	TokenNameIdentifier	 K  DECIMAL
,	TokenNameCOMMA	
FOLLOW_K_DECIMAL_in_native_type4823	TokenNameIdentifier	 FOLLOW  K  DECIMAL in native type4823
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
DECIMAL	TokenNameIdentifier	 DECIMAL
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
7	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:798:7: K_DOUBLE 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:798:7: K_DOUBLE 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_DOUBLE	TokenNameIdentifier	 K  DOUBLE
,	TokenNameCOMMA	
FOLLOW_K_DOUBLE_in_native_type4835	TokenNameIdentifier	 FOLLOW  K  DOUBLE in native type4835
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
DOUBLE	TokenNameIdentifier	 DOUBLE
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
8	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:799:7: K_FLOAT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:799:7: K_FLOAT 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_FLOAT	TokenNameIdentifier	 K  FLOAT
,	TokenNameCOMMA	
FOLLOW_K_FLOAT_in_native_type4848	TokenNameIdentifier	 FOLLOW  K  FLOAT in native type4848
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
FLOAT	TokenNameIdentifier	 FLOAT
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
9	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:800:7: K_INET 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:800:7: K_INET 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_INET	TokenNameIdentifier	 K  INET
,	TokenNameCOMMA	
FOLLOW_K_INET_in_native_type4862	TokenNameIdentifier	 FOLLOW  K  INET in native type4862
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
INET	TokenNameIdentifier	 INET
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
10	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:801:7: K_INT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:801:7: K_INT 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_INT	TokenNameIdentifier	 K  INT
,	TokenNameCOMMA	
FOLLOW_K_INT_in_native_type4877	TokenNameIdentifier	 FOLLOW  K  INT in native type4877
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
INT	TokenNameIdentifier	 INT
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
11	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:802:7: K_TEXT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:802:7: K_TEXT 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TEXT	TokenNameIdentifier	 K  TEXT
,	TokenNameCOMMA	
FOLLOW_K_TEXT_in_native_type4893	TokenNameIdentifier	 FOLLOW  K  TEXT in native type4893
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
TEXT	TokenNameIdentifier	 TEXT
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
12	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:803:7: K_TIMESTAMP 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:803:7: K_TIMESTAMP 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
,	TokenNameCOMMA	
FOLLOW_K_TIMESTAMP_in_native_type4908	TokenNameIdentifier	 FOLLOW  K  TIMESTAMP in native type4908
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
TIMESTAMP	TokenNameIdentifier	 TIMESTAMP
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
13	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:804:7: K_UUID 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:804:7: K_UUID 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_UUID	TokenNameIdentifier	 K  UUID
,	TokenNameCOMMA	
FOLLOW_K_UUID_in_native_type4918	TokenNameIdentifier	 FOLLOW  K  UUID in native type4918
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
UUID	TokenNameIdentifier	 UUID
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
14	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:805:7: K_VARCHAR 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:805:7: K_VARCHAR 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_VARCHAR	TokenNameIdentifier	 K  VARCHAR
,	TokenNameCOMMA	
FOLLOW_K_VARCHAR_in_native_type4933	TokenNameIdentifier	 FOLLOW  K  VARCHAR in native type4933
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
VARCHAR	TokenNameIdentifier	 VARCHAR
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
15	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:806:7: K_VARINT 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:806:7: K_VARINT 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_VARINT	TokenNameIdentifier	 K  VARINT
,	TokenNameCOMMA	
FOLLOW_K_VARINT_in_native_type4945	TokenNameIdentifier	 FOLLOW  K  VARINT in native type4945
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
VARINT	TokenNameIdentifier	 VARINT
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
16	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:807:7: K_TIMEUUID 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:807:7: K_TIMEUUID 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
,	TokenNameCOMMA	
FOLLOW_K_TIMEUUID_in_native_type4958	TokenNameIdentifier	 FOLLOW  K  TIMEUUID in native type4958
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Native	TokenNameIdentifier	 Native
.	TokenNameDOT	
TIMEUUID	TokenNameIdentifier	 TIMEUUID
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
t	TokenNameIdentifier	 t
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "native_type" 	TokenNameCOMMENT_LINE	$ANTLR end "native_type" 
// $ANTLR start "collection_type" 	TokenNameCOMMENT_LINE	$ANTLR start "collection_type" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:810:1: collection_type returns [ParsedType pt] : ( K_MAP '<' t1= comparatorType ',' t2= comparatorType '>' | K_LIST '<' t= comparatorType '>' | K_SET '<' t= comparatorType '>' ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:810:1: collection_type returns [ParsedType pt] : ( K_MAP '<' t1= comparatorType ',' t2= comparatorType '>' | K_LIST '<' t= comparatorType '>' | K_SET '<' t= comparatorType '>' ); 
public	TokenNamepublic	
final	TokenNamefinal	
ParsedType	TokenNameIdentifier	 Parsed Type
collection_type	TokenNameIdentifier	 collection type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
ParsedType	TokenNameIdentifier	 Parsed Type
pt	TokenNameIdentifier	 pt
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
t2	TokenNameIdentifier	 t2
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:811:5: ( K_MAP '<' t1= comparatorType ',' t2= comparatorType '>' | K_LIST '<' t= comparatorType '>' | K_SET '<' t= comparatorType '>' ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:811:5: ( K_MAP '<' t1= comparatorType ',' t2= comparatorType '>' | K_LIST '<' t= comparatorType '>' | K_SET '<' t= comparatorType '>' ) 
int	TokenNameint	
alt87	TokenNameIdentifier	 alt87
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
switch	TokenNameswitch	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
K_MAP	TokenNameIdentifier	 K  MAP
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt87	TokenNameIdentifier	 alt87
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_LIST	TokenNameIdentifier	 K  LIST
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt87	TokenNameIdentifier	 alt87
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
K_SET	TokenNameIdentifier	 K  SET
:	TokenNameCOLON	
{	TokenNameLBRACE	
alt87	TokenNameIdentifier	 alt87
=	TokenNameEQUAL	
3	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
default	TokenNamedefault	
:	TokenNameCOLON	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
87	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt87	TokenNameIdentifier	 alt87
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:811:7: K_MAP '<' t1= comparatorType ',' t2= comparatorType '>' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:811:7: K_MAP '<' t1= comparatorType ',' t2= comparatorType '>' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_MAP	TokenNameIdentifier	 K  MAP
,	TokenNameCOMMA	
FOLLOW_K_MAP_in_collection_type4982	TokenNameIdentifier	 FOLLOW  K  MAP in collection type4982
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
138	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_138_in_collection_type4985	TokenNameIdentifier	 FOLLOW 138 in collection type4985
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_collection_type4989	TokenNameIdentifier	 FOLLOW comparator Type in collection type4989
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t1	TokenNameIdentifier	 t1
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
127	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_127_in_collection_type4991	TokenNameIdentifier	 FOLLOW 127 in collection type4991
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_collection_type4995	TokenNameIdentifier	 FOLLOW comparator Type in collection type4995
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t2	TokenNameIdentifier	 t2
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
141	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_141_in_collection_type4997	TokenNameIdentifier	 FOLLOW 141 in collection type4997
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
pt	TokenNameIdentifier	 pt
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Collection	TokenNameIdentifier	 Collection
.	TokenNameDOT	
map	TokenNameIdentifier	 map
(	TokenNameLPAREN	
t1	TokenNameIdentifier	 t1
,	TokenNameCOMMA	
t2	TokenNameIdentifier	 t2
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
InvalidRequestException	TokenNameIdentifier	 Invalid Request Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:813:7: K_LIST '<' t= comparatorType '>' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:813:7: K_LIST '<' t= comparatorType '>' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_LIST	TokenNameIdentifier	 K  LIST
,	TokenNameCOMMA	
FOLLOW_K_LIST_in_collection_type5015	TokenNameIdentifier	 FOLLOW  K  LIST in collection type5015
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
138	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_138_in_collection_type5017	TokenNameIdentifier	 FOLLOW 138 in collection type5017
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_collection_type5021	TokenNameIdentifier	 FOLLOW comparator Type in collection type5021
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
141	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_141_in_collection_type5023	TokenNameIdentifier	 FOLLOW 141 in collection type5023
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
pt	TokenNameIdentifier	 pt
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Collection	TokenNameIdentifier	 Collection
.	TokenNameDOT	
list	TokenNameIdentifier	 list
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
InvalidRequestException	TokenNameIdentifier	 Invalid Request Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
3	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:815:7: K_SET '<' t= comparatorType '>' 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:815:7: K_SET '<' t= comparatorType '>' 
{	TokenNameLBRACE	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
K_SET	TokenNameIdentifier	 K  SET
,	TokenNameCOMMA	
FOLLOW_K_SET_in_collection_type5041	TokenNameIdentifier	 FOLLOW  K  SET in collection type5041
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
138	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_138_in_collection_type5044	TokenNameIdentifier	 FOLLOW 138 in collection type5044
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_comparatorType_in_collection_type5048	TokenNameIdentifier	 FOLLOW comparator Type in collection type5048
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
comparatorType	TokenNameIdentifier	 comparator Type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
match	TokenNameIdentifier	 match
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
141	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
FOLLOW_141_in_collection_type5050	TokenNameIdentifier	 FOLLOW 141 in collection type5050
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
pt	TokenNameIdentifier	 pt
=	TokenNameEQUAL	
ParsedType	TokenNameIdentifier	 Parsed Type
.	TokenNameDOT	
Collection	TokenNameIdentifier	 Collection
.	TokenNameDOT	
set	TokenNameIdentifier	 set
(	TokenNameLPAREN	
t	TokenNameIdentifier	 t
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
InvalidRequestException	TokenNameIdentifier	 Invalid Request Exception
e	TokenNameIdentifier	 e
)	TokenNameRPAREN	
{	TokenNameLBRACE	
addRecognitionError	TokenNameIdentifier	 add Recognition Error
(	TokenNameLPAREN	
e	TokenNameIdentifier	 e
.	TokenNameDOT	
getMessage	TokenNameIdentifier	 get Message
(	TokenNameLPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
pt	TokenNameIdentifier	 pt
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "collection_type" 	TokenNameCOMMENT_LINE	$ANTLR end "collection_type" 
public	TokenNamepublic	
static	TokenNamestatic	
class	TokenNameclass	
username_return	TokenNameIdentifier	 username return
extends	TokenNameextends	
ParserRuleReturnScope	TokenNameIdentifier	 Parser Rule Return Scope
{	TokenNameLBRACE	
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
// $ANTLR start "username" 	TokenNameCOMMENT_LINE	$ANTLR start "username" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:819:1: username : ( IDENT | STRING_LITERAL ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:819:1: username : ( IDENT | STRING_LITERAL ); 
public	TokenNamepublic	
final	TokenNamefinal	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
username	TokenNameIdentifier	 username
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
retval	TokenNameIdentifier	 retval
=	TokenNameEQUAL	
new	TokenNamenew	
CqlParser	TokenNameIdentifier	 Cql Parser
.	TokenNameDOT	
username_return	TokenNameIdentifier	 username return
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
start	TokenNameIdentifier	 start
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:820:5: ( IDENT | STRING_LITERAL ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:820:5: ( IDENT | STRING_LITERAL ) 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g: 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g: 
{	TokenNameLBRACE	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
IDENT	TokenNameIdentifier	 IDENT
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
STRING_LITERAL	TokenNameIdentifier	 STRING  LITERAL
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
retval	TokenNameIdentifier	 retval
.	TokenNameDOT	
stop	TokenNameIdentifier	 stop
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
-	TokenNameMINUS	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
retval	TokenNameIdentifier	 retval
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "username" 	TokenNameCOMMENT_LINE	$ANTLR end "username" 
// $ANTLR start "unreserved_keyword" 	TokenNameCOMMENT_LINE	$ANTLR start "unreserved_keyword" 
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:824:1: unreserved_keyword returns [String str] : (k= ( K_KEY | K_CLUSTERING | K_COUNT | K_TTL | K_COMPACT | K_STORAGE | K_TYPE | K_VALUES | K_WRITETIME | K_MAP | K_LIST | K_FILTERING | K_PERMISSION | K_PERMISSIONS | K_KEYSPACES | K_ALL | K_USER | K_USERS | K_SUPERUSER | K_NOSUPERUSER | K_PASSWORD ) | t= native_type ); 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:824:1: unreserved_keyword returns [String str] : (k= ( K_KEY | K_CLUSTERING | K_COUNT | K_TTL | K_COMPACT | K_STORAGE | K_TYPE | K_VALUES | K_WRITETIME | K_MAP | K_LIST | K_FILTERING | K_PERMISSION | K_PERMISSIONS | K_KEYSPACES | K_ALL | K_USER | K_USERS | K_SUPERUSER | K_NOSUPERUSER | K_PASSWORD ) | t= native_type ); 
public	TokenNamepublic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
unreserved_keyword	TokenNameIdentifier	 unreserved keyword
(	TokenNameLPAREN	
)	TokenNameRPAREN	
throws	TokenNamethrows	
RecognitionException	TokenNameIdentifier	 Recognition Exception
{	TokenNameLBRACE	
String	TokenNameIdentifier	 String
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
Token	TokenNameIdentifier	 Token
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
ParsedType	TokenNameIdentifier	 Parsed Type
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
null	TokenNamenull	
;	TokenNameSEMICOLON	
try	TokenNametry	
{	TokenNameLBRACE	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:825:5: (k= ( K_KEY | K_CLUSTERING | K_COUNT | K_TTL | K_COMPACT | K_STORAGE | K_TYPE | K_VALUES | K_WRITETIME | K_MAP | K_LIST | K_FILTERING | K_PERMISSION | K_PERMISSIONS | K_KEYSPACES | K_ALL | K_USER | K_USERS | K_SUPERUSER | K_NOSUPERUSER | K_PASSWORD ) | t= native_type ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:825:5: (k= ( K_KEY | K_CLUSTERING | K_COUNT | K_TTL | K_COMPACT | K_STORAGE | K_TYPE | K_VALUES | K_WRITETIME | K_MAP | K_LIST | K_FILTERING | K_PERMISSION | K_PERMISSIONS | K_KEYSPACES | K_ALL | K_USER | K_USERS | K_SUPERUSER | K_NOSUPERUSER | K_PASSWORD ) | t= native_type ) 
int	TokenNameint	
alt88	TokenNameIdentifier	 alt88
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
int	TokenNameint	
LA88_0	TokenNameIdentifier	 L A88 0
=	TokenNameEQUAL	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA88_0	TokenNameIdentifier	 L A88 0
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
LA88_0	TokenNameIdentifier	 L A88 0
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA88_0	TokenNameIdentifier	 L A88 0
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
LA88_0	TokenNameIdentifier	 L A88 0
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA88_0	TokenNameIdentifier	 L A88 0
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
LA88_0	TokenNameIdentifier	 L A88 0
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt88	TokenNameIdentifier	 alt88
=	TokenNameEQUAL	
1	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
if	TokenNameif	
(	TokenNameLPAREN	
(	TokenNameLPAREN	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_TIMESTAMP	TokenNameIdentifier	 K  TIMESTAMP
||	TokenNameOR_OR	
LA88_0	TokenNameIdentifier	 L A88 0
==	TokenNameEQUAL_EQUAL	
K_COUNTER	TokenNameIdentifier	 K  COUNTER
||	TokenNameOR_OR	
(	TokenNameLPAREN	
LA88_0	TokenNameIdentifier	 L A88 0
>=	TokenNameGREATER_EQUAL	
K_ASCII	TokenNameIdentifier	 K  ASCII
&&	TokenNameAND_AND	
LA88_0	TokenNameIdentifier	 L A88 0
<=	TokenNameLESS_EQUAL	
K_TIMEUUID	TokenNameIdentifier	 K  TIMEUUID
)	TokenNameRPAREN	
)	TokenNameRPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
alt88	TokenNameIdentifier	 alt88
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
nvae	TokenNameIdentifier	 nvae
=	TokenNameEQUAL	
new	TokenNamenew	
NoViableAltException	TokenNameIdentifier	 No Viable Alt Exception
(	TokenNameLPAREN	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
88	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
0	TokenNameIntegerLiteral	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
nvae	TokenNameIdentifier	 nvae
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
switch	TokenNameswitch	
(	TokenNameLPAREN	
alt88	TokenNameIdentifier	 alt88
)	TokenNameRPAREN	
{	TokenNameLBRACE	
case	TokenNamecase	
1	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:825:7: k= ( K_KEY | K_CLUSTERING | K_COUNT | K_TTL | K_COMPACT | K_STORAGE | K_TYPE | K_VALUES | K_WRITETIME | K_MAP | K_LIST | K_FILTERING | K_PERMISSION | K_PERMISSIONS | K_KEYSPACES | K_ALL | K_USER | K_USERS | K_SUPERUSER | K_NOSUPERUSER | K_PASSWORD ) 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:825:7: k= ( K_KEY | K_CLUSTERING | K_COUNT | K_TTL | K_COMPACT | K_STORAGE | K_TYPE | K_VALUES | K_WRITETIME | K_MAP | K_LIST | K_FILTERING | K_PERMISSION | K_PERMISSIONS | K_KEYSPACES | K_ALL | K_USER | K_USERS | K_SUPERUSER | K_NOSUPERUSER | K_PASSWORD ) 
{	TokenNameLBRACE	
k	TokenNameIdentifier	 k
=	TokenNameEQUAL	
(	TokenNameLPAREN	
Token	TokenNameIdentifier	 Token
)	TokenNameRPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LT	TokenNameIdentifier	 LT
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
if	TokenNameif	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_COUNT	TokenNameIdentifier	 K  COUNT
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
K_FILTERING	TokenNameIdentifier	 K  FILTERING
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
K_TTL	TokenNameIdentifier	 K  TTL
)	TokenNameRPAREN	
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_VALUES	TokenNameIdentifier	 K  VALUES
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
K_KEY	TokenNameIdentifier	 K  KEY
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
K_CLUSTERING	TokenNameIdentifier	 K  CLUSTERING
)	TokenNameRPAREN	
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_TYPE	TokenNameIdentifier	 K  TYPE
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_LIST	TokenNameIdentifier	 K  LIST
||	TokenNameOR_OR	
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
>=	TokenNameGREATER_EQUAL	
K_ALL	TokenNameIdentifier	 K  ALL
&&	TokenNameAND_AND	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
<=	TokenNameLESS_EQUAL	
K_PASSWORD	TokenNameIdentifier	 K  PASSWORD
)	TokenNameRPAREN	
||	TokenNameOR_OR	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
LA	TokenNameIdentifier	 LA
(	TokenNameLPAREN	
1	TokenNameIntegerLiteral	
)	TokenNameRPAREN	
==	TokenNameEQUAL_EQUAL	
K_MAP	TokenNameIdentifier	 K  MAP
)	TokenNameRPAREN	
{	TokenNameLBRACE	
input	TokenNameIdentifier	 input
.	TokenNameDOT	
consume	TokenNameIdentifier	 consume
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
errorRecovery	TokenNameIdentifier	 error Recovery
=	TokenNameEQUAL	
false	TokenNamefalse	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
else	TokenNameelse	
{	TokenNameLBRACE	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
mse	TokenNameIdentifier	 mse
=	TokenNameEQUAL	
new	TokenNamenew	
MismatchedSetException	TokenNameIdentifier	 Mismatched Set Exception
(	TokenNameLPAREN	
null	TokenNamenull	
,	TokenNameCOMMA	
input	TokenNameIdentifier	 input
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
throw	TokenNamethrow	
mse	TokenNameIdentifier	 mse
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
(	TokenNameLPAREN	
k	TokenNameIdentifier	 k
!=	TokenNameNOT_EQUAL	
null	TokenNamenull	
?	TokenNameQUESTION	
k	TokenNameIdentifier	 k
.	TokenNameDOT	
getText	TokenNameIdentifier	 get Text
(	TokenNameLPAREN	
)	TokenNameRPAREN	
:	TokenNameCOLON	
null	TokenNamenull	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
case	TokenNamecase	
2	TokenNameIntegerLiteral	
:	TokenNameCOLON	
// /home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:847:7: t= native_type 	TokenNameCOMMENT_LINE	/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g:847:7: t= native_type 
{	TokenNameLBRACE	
pushFollow	TokenNameIdentifier	 push Follow
(	TokenNameLPAREN	
FOLLOW_native_type_in_unreserved_keyword5372	TokenNameIdentifier	 FOLLOW native type in unreserved keyword5372
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
t	TokenNameIdentifier	 t
=	TokenNameEQUAL	
native_type	TokenNameIdentifier	 native type
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
state	TokenNameIdentifier	 state
.	TokenNameDOT	
_fsp	TokenNameIdentifier	 fsp
--	TokenNameMINUS_MINUS	
;	TokenNameSEMICOLON	
str	TokenNameIdentifier	 str
=	TokenNameEQUAL	
t	TokenNameIdentifier	 t
.	TokenNameDOT	
toString	TokenNameIdentifier	 to String
(	TokenNameLPAREN	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
break	TokenNamebreak	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
catch	TokenNamecatch	
(	TokenNameLPAREN	
RecognitionException	TokenNameIdentifier	 Recognition Exception
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
{	TokenNameLBRACE	
reportError	TokenNameIdentifier	 report Error
(	TokenNameLPAREN	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
recover	TokenNameIdentifier	 recover
(	TokenNameLPAREN	
input	TokenNameIdentifier	 input
,	TokenNameCOMMA	
re	TokenNameIdentifier	 re
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
finally	TokenNamefinally	
{	TokenNameLBRACE	
}	TokenNameRBRACE	
return	TokenNamereturn	
str	TokenNameIdentifier	 str
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
// $ANTLR end "unreserved_keyword" 	TokenNameCOMMENT_LINE	$ANTLR end "unreserved_keyword" 
// Delegated rules 	TokenNameCOMMENT_LINE	Delegated rules 
protected	TokenNameprotected	
DFA2	TokenNameIdentifier	 DF A2
dfa2	TokenNameIdentifier	 dfa2
=	TokenNameEQUAL	
new	TokenNamenew	
DFA2	TokenNameIdentifier	 DF A2
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA28	TokenNameIdentifier	 DF A28
dfa28	TokenNameIdentifier	 dfa28
=	TokenNameEQUAL	
new	TokenNamenew	
DFA28	TokenNameIdentifier	 DF A28
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA63	TokenNameIdentifier	 DF A63
dfa63	TokenNameIdentifier	 dfa63
=	TokenNameEQUAL	
new	TokenNamenew	
DFA63	TokenNameIdentifier	 DF A63
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA73	TokenNameIdentifier	 DF A73
dfa73	TokenNameIdentifier	 dfa73
=	TokenNameEQUAL	
new	TokenNamenew	
DFA73	TokenNameIdentifier	 DF A73
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA72	TokenNameIdentifier	 DF A72
dfa72	TokenNameIdentifier	 dfa72
=	TokenNameEQUAL	
new	TokenNamenew	
DFA72	TokenNameIdentifier	 DF A72
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA76	TokenNameIdentifier	 DF A76
dfa76	TokenNameIdentifier	 dfa76
=	TokenNameEQUAL	
new	TokenNamenew	
DFA76	TokenNameIdentifier	 DF A76
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
protected	TokenNameprotected	
DFA84	TokenNameIdentifier	 DF A84
dfa84	TokenNameIdentifier	 dfa84
=	TokenNameEQUAL	
new	TokenNamenew	
DFA84	TokenNameIdentifier	 DF A84
(	TokenNameLPAREN	
this	TokenNamethis	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_eotS	TokenNameIdentifier	 DF A2 eot S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_eofS	TokenNameIdentifier	 DF A2 eof S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_minS	TokenNameIdentifier	 DF A2 min S
=	TokenNameEQUAL	
"?"? ?"	TokenNameStringLiteral	?"? ?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_maxS	TokenNameIdentifier	 DF A2 max S
=	TokenNameEQUAL	
"6???B ?"	TokenNameStringLiteral	6???B ?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_acceptS	TokenNameIdentifier	 DF A2 accept S
=	TokenNameEQUAL	
"???"	TokenNameStringLiteral	???
+	TokenNamePLUS	
"     "	TokenNameStringLiteral	     
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA2_specialS	TokenNameIdentifier	 DF A2 special S
=	TokenNameEQUAL	
"?}>"	TokenNameStringLiteral	?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_transitionS	TokenNameIdentifier	 DF A2 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"????"	TokenNameStringLiteral	????
+	TokenNamePLUS	
" ? ?    "	TokenNameStringLiteral	 ? ?    
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"???"	TokenNameStringLiteral	???
,	TokenNameCOMMA	
"???"	TokenNameStringLiteral	???
,	TokenNameCOMMA	
"??"	TokenNameStringLiteral	??
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"? ???"	TokenNameStringLiteral	? ???
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_eot	TokenNameIdentifier	 DF A2 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_eotS	TokenNameIdentifier	 DF A2 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_eof	TokenNameIdentifier	 DF A2 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_eofS	TokenNameIdentifier	 DF A2 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_min	TokenNameIdentifier	 DF A2 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA2_minS	TokenNameIdentifier	 DF A2 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_max	TokenNameIdentifier	 DF A2 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA2_maxS	TokenNameIdentifier	 DF A2 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_accept	TokenNameIdentifier	 DF A2 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_acceptS	TokenNameIdentifier	 DF A2 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_special	TokenNameIdentifier	 DF A2 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_specialS	TokenNameIdentifier	 DF A2 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA2_transitionS	TokenNameIdentifier	 DF A2 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA2_transitionS	TokenNameIdentifier	 DF A2 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA2	TokenNameIdentifier	 DF A2
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA2	TokenNameIdentifier	 DF A2
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
2	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA2_eot	TokenNameIdentifier	 DF A2 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA2_eof	TokenNameIdentifier	 DF A2 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA2_min	TokenNameIdentifier	 DF A2 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA2_max	TokenNameIdentifier	 DF A2 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA2_accept	TokenNameIdentifier	 DF A2 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA2_special	TokenNameIdentifier	 DF A2 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA2_transition	TokenNameIdentifier	 DF A2 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"156:1: cqlStatement returns [ParsedStatement stmt] : (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement );"	TokenNameStringLiteral	156:1: cqlStatement returns [ParsedStatement stmt] : (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA28_eotS	TokenNameIdentifier	 DF A28 eot S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA28_eofS	TokenNameIdentifier	 DF A28 eof S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA28_minS	TokenNameIdentifier	 DF A28 min S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA28_maxS	TokenNameIdentifier	 DF A28 max S
=	TokenNameEQUAL	
"[??"	TokenNameStringLiteral	[??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA28_acceptS	TokenNameIdentifier	 DF A28 accept S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA28_specialS	TokenNameIdentifier	 DF A28 special S
=	TokenNameEQUAL	
"?}>"	TokenNameStringLiteral	?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_transitionS	TokenNameIdentifier	 DF A28 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"?????"	TokenNameStringLiteral	?????
+	TokenNamePLUS	
"???? ?"	TokenNameStringLiteral	???? ?
+	TokenNamePLUS	
"?     "	TokenNameStringLiteral	?     
+	TokenNamePLUS	
""	TokenNameStringLiteral	
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
"w??"	TokenNameStringLiteral	w??
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_eot	TokenNameIdentifier	 DF A28 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA28_eotS	TokenNameIdentifier	 DF A28 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_eof	TokenNameIdentifier	 DF A28 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA28_eofS	TokenNameIdentifier	 DF A28 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_min	TokenNameIdentifier	 DF A28 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA28_minS	TokenNameIdentifier	 DF A28 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_max	TokenNameIdentifier	 DF A28 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA28_maxS	TokenNameIdentifier	 DF A28 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_accept	TokenNameIdentifier	 DF A28 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA28_acceptS	TokenNameIdentifier	 DF A28 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_special	TokenNameIdentifier	 DF A28 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA28_specialS	TokenNameIdentifier	 DF A28 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA28_transition	TokenNameIdentifier	 DF A28 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA28_transitionS	TokenNameIdentifier	 DF A28 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA28_transition	TokenNameIdentifier	 DF A28 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA28_transition	TokenNameIdentifier	 DF A28 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA28_transitionS	TokenNameIdentifier	 DF A28 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA28	TokenNameIdentifier	 DF A28
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA28	TokenNameIdentifier	 DF A28
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
28	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA28_eot	TokenNameIdentifier	 DF A28 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA28_eof	TokenNameIdentifier	 DF A28 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA28_min	TokenNameIdentifier	 DF A28 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA28_max	TokenNameIdentifier	 DF A28 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA28_accept	TokenNameIdentifier	 DF A28 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA28_special	TokenNameIdentifier	 DF A28 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA28_transition	TokenNameIdentifier	 DF A28 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"329:1: deleteSelector returns [Selector s] : (c= cident | c= cident '[' t= term ']' );"	TokenNameStringLiteral	329:1: deleteSelector returns [Selector s] : (c= cident | c= cident '[' t= term ']' );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA63_eotS	TokenNameIdentifier	 DF A63 eot S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA63_eofS	TokenNameIdentifier	 DF A63 eof S
=	TokenNameEQUAL	
"??"	TokenNameStringLiteral	??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA63_minS	TokenNameIdentifier	 DF A63 min S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA63_maxS	TokenNameIdentifier	 DF A63 max S
=	TokenNameEQUAL	
"[??"	TokenNameStringLiteral	[??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA63_acceptS	TokenNameIdentifier	 DF A63 accept S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA63_specialS	TokenNameIdentifier	 DF A63 special S
=	TokenNameEQUAL	
"?}>"	TokenNameStringLiteral	?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_transitionS	TokenNameIdentifier	 DF A63 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"?????"	TokenNameStringLiteral	?????
+	TokenNamePLUS	
"???? ?"	TokenNameStringLiteral	???? ?
+	TokenNamePLUS	
"?     "	TokenNameStringLiteral	?     
+	TokenNamePLUS	
""	TokenNameStringLiteral	
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?? ??"	TokenNameStringLiteral	?? ??
+	TokenNamePLUS	
"? ???C?"	TokenNameStringLiteral	? ???C?
+	TokenNamePLUS	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_eot	TokenNameIdentifier	 DF A63 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA63_eotS	TokenNameIdentifier	 DF A63 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_eof	TokenNameIdentifier	 DF A63 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA63_eofS	TokenNameIdentifier	 DF A63 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_min	TokenNameIdentifier	 DF A63 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA63_minS	TokenNameIdentifier	 DF A63 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_max	TokenNameIdentifier	 DF A63 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA63_maxS	TokenNameIdentifier	 DF A63 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_accept	TokenNameIdentifier	 DF A63 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA63_acceptS	TokenNameIdentifier	 DF A63 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_special	TokenNameIdentifier	 DF A63 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA63_specialS	TokenNameIdentifier	 DF A63 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA63_transition	TokenNameIdentifier	 DF A63 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA63_transitionS	TokenNameIdentifier	 DF A63 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA63_transition	TokenNameIdentifier	 DF A63 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA63_transition	TokenNameIdentifier	 DF A63 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA63_transitionS	TokenNameIdentifier	 DF A63 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA63	TokenNameIdentifier	 DF A63
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA63	TokenNameIdentifier	 DF A63
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
63	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA63_eot	TokenNameIdentifier	 DF A63 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA63_eof	TokenNameIdentifier	 DF A63 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA63_min	TokenNameIdentifier	 DF A63 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA63_max	TokenNameIdentifier	 DF A63 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA63_accept	TokenNameIdentifier	 DF A63 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA63_special	TokenNameIdentifier	 DF A63 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA63_transition	TokenNameIdentifier	 DF A63 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"630:7: ( cfOrKsName[name, true] '.' )?"	TokenNameStringLiteral	630:7: ( cfOrKsName[name, true] '.' )?
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA73_eotS	TokenNameIdentifier	 DF A73 eot S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA73_eofS	TokenNameIdentifier	 DF A73 eof S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA73_minS	TokenNameIdentifier	 DF A73 min S
=	TokenNameEQUAL	
"??"	TokenNameStringLiteral	??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA73_maxS	TokenNameIdentifier	 DF A73 max S
=	TokenNameEQUAL	
"[??"	TokenNameStringLiteral	[??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA73_acceptS	TokenNameIdentifier	 DF A73 accept S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA73_specialS	TokenNameIdentifier	 DF A73 special S
=	TokenNameEQUAL	
"?}>"	TokenNameStringLiteral	?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_transitionS	TokenNameIdentifier	 DF A73 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"?????"	TokenNameStringLiteral	?????
+	TokenNamePLUS	
"???? ?"	TokenNameStringLiteral	???? ?
+	TokenNamePLUS	
"?     "	TokenNameStringLiteral	?     
+	TokenNamePLUS	
""	TokenNameStringLiteral	
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_eot	TokenNameIdentifier	 DF A73 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA73_eotS	TokenNameIdentifier	 DF A73 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_eof	TokenNameIdentifier	 DF A73 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA73_eofS	TokenNameIdentifier	 DF A73 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_min	TokenNameIdentifier	 DF A73 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA73_minS	TokenNameIdentifier	 DF A73 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_max	TokenNameIdentifier	 DF A73 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA73_maxS	TokenNameIdentifier	 DF A73 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_accept	TokenNameIdentifier	 DF A73 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA73_acceptS	TokenNameIdentifier	 DF A73 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_special	TokenNameIdentifier	 DF A73 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA73_specialS	TokenNameIdentifier	 DF A73 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA73_transition	TokenNameIdentifier	 DF A73 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA73_transitionS	TokenNameIdentifier	 DF A73 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA73_transition	TokenNameIdentifier	 DF A73 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA73_transition	TokenNameIdentifier	 DF A73 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA73_transitionS	TokenNameIdentifier	 DF A73 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA73	TokenNameIdentifier	 DF A73
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA73	TokenNameIdentifier	 DF A73
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
73	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA73_eot	TokenNameIdentifier	 DF A73 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA73_eof	TokenNameIdentifier	 DF A73 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA73_min	TokenNameIdentifier	 DF A73 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA73_max	TokenNameIdentifier	 DF A73 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA73_accept	TokenNameIdentifier	 DF A73 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA73_special	TokenNameIdentifier	 DF A73 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA73_transition	TokenNameIdentifier	 DF A73 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"671:1: termPairWithOperation[List<Pair<ColumnIdentifier, Operation>> columns] : (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term );"	TokenNameStringLiteral	671:1: termPairWithOperation[List<Pair<ColumnIdentifier, Operation>> columns] : (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA72_eotS	TokenNameIdentifier	 DF A72 eot S
=	TokenNameEQUAL	
" ?"	TokenNameStringLiteral	 ?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA72_eofS	TokenNameIdentifier	 DF A72 eof S
=	TokenNameEQUAL	
" ?"	TokenNameStringLiteral	 ?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA72_minS	TokenNameIdentifier	 DF A72 min S
=	TokenNameEQUAL	
"? ? ?"	TokenNameStringLiteral	? ? ?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA72_maxS	TokenNameIdentifier	 DF A72 max S
=	TokenNameEQUAL	
"???????J"	TokenNameStringLiteral	???????J
+	TokenNamePLUS	
"??"	TokenNameStringLiteral	??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA72_acceptS	TokenNameIdentifier	 DF A72 accept S
=	TokenNameEQUAL	
"????"	TokenNameStringLiteral	????
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA72_specialS	TokenNameIdentifier	 DF A72 special S
=	TokenNameEQUAL	
" ?}>"	TokenNameStringLiteral	 ?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_transitionS	TokenNameIdentifier	 DF A72 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"?????"	TokenNameStringLiteral	?????
+	TokenNamePLUS	
"?????"	TokenNameStringLiteral	?????
+	TokenNamePLUS	
" ?%??"	TokenNameStringLiteral	 ?%??
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"v??"	TokenNameStringLiteral	v??
,	TokenNameCOMMA	
"7??7?"	TokenNameStringLiteral	7??7?
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
,	TokenNameCOMMA	
"v?? "	TokenNameStringLiteral	v?? 
,	TokenNameCOMMA	
" 7? ? "	TokenNameStringLiteral	 7? ? 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
"?"	TokenNameStringLiteral	?
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_eot	TokenNameIdentifier	 DF A72 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA72_eotS	TokenNameIdentifier	 DF A72 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_eof	TokenNameIdentifier	 DF A72 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA72_eofS	TokenNameIdentifier	 DF A72 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_min	TokenNameIdentifier	 DF A72 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA72_minS	TokenNameIdentifier	 DF A72 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_max	TokenNameIdentifier	 DF A72 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA72_maxS	TokenNameIdentifier	 DF A72 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_accept	TokenNameIdentifier	 DF A72 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA72_acceptS	TokenNameIdentifier	 DF A72 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_special	TokenNameIdentifier	 DF A72 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA72_specialS	TokenNameIdentifier	 DF A72 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA72_transition	TokenNameIdentifier	 DF A72 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA72_transitionS	TokenNameIdentifier	 DF A72 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA72_transition	TokenNameIdentifier	 DF A72 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA72_transition	TokenNameIdentifier	 DF A72 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA72_transitionS	TokenNameIdentifier	 DF A72 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA72	TokenNameIdentifier	 DF A72
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA72	TokenNameIdentifier	 DF A72
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
72	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA72_eot	TokenNameIdentifier	 DF A72 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA72_eof	TokenNameIdentifier	 DF A72 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA72_min	TokenNameIdentifier	 DF A72 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA72_max	TokenNameIdentifier	 DF A72 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA72_accept	TokenNameIdentifier	 DF A72 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA72_special	TokenNameIdentifier	 DF A72 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA72_transition	TokenNameIdentifier	 DF A72 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"673:9: (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident )"	TokenNameStringLiteral	673:9: (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident )
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA76_eotS	TokenNameIdentifier	 DF A76 eot S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA76_eofS	TokenNameIdentifier	 DF A76 eof S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA76_minS	TokenNameIdentifier	 DF A76 min S
=	TokenNameEQUAL	
" ? ??"	TokenNameStringLiteral	 ? ??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA76_maxS	TokenNameIdentifier	 DF A76 max S
=	TokenNameEQUAL	
"???????"	TokenNameStringLiteral	???????
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA76_acceptS	TokenNameIdentifier	 DF A76 accept S
=	TokenNameEQUAL	
"??? "	TokenNameStringLiteral	??? 
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA76_specialS	TokenNameIdentifier	 DF A76 special S
=	TokenNameEQUAL	
"?}>"	TokenNameStringLiteral	?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_transitionS	TokenNameIdentifier	 DF A76 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"{?"	TokenNameStringLiteral	{?
,	TokenNameCOMMA	
"9?:??"	TokenNameStringLiteral	9?:??
,	TokenNameCOMMA	
"9?:? ? "	TokenNameStringLiteral	9?:? ? 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
" 7? ? :? "	TokenNameStringLiteral	 7? ? :? 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
" ?  "	TokenNameStringLiteral	 ?  
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_eot	TokenNameIdentifier	 DF A76 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA76_eotS	TokenNameIdentifier	 DF A76 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_eof	TokenNameIdentifier	 DF A76 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA76_eofS	TokenNameIdentifier	 DF A76 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_min	TokenNameIdentifier	 DF A76 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA76_minS	TokenNameIdentifier	 DF A76 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_max	TokenNameIdentifier	 DF A76 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA76_maxS	TokenNameIdentifier	 DF A76 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_accept	TokenNameIdentifier	 DF A76 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA76_acceptS	TokenNameIdentifier	 DF A76 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_special	TokenNameIdentifier	 DF A76 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA76_specialS	TokenNameIdentifier	 DF A76 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA76_transition	TokenNameIdentifier	 DF A76 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA76_transitionS	TokenNameIdentifier	 DF A76 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA76_transition	TokenNameIdentifier	 DF A76 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA76_transition	TokenNameIdentifier	 DF A76 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA76_transitionS	TokenNameIdentifier	 DF A76 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA76	TokenNameIdentifier	 DF A76
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA76	TokenNameIdentifier	 DF A76
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
76	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA76_eot	TokenNameIdentifier	 DF A76 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA76_eof	TokenNameIdentifier	 DF A76 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA76_min	TokenNameIdentifier	 DF A76 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA76_max	TokenNameIdentifier	 DF A76 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA76_accept	TokenNameIdentifier	 DF A76 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA76_special	TokenNameIdentifier	 DF A76 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA76_transition	TokenNameIdentifier	 DF A76 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"709:1: operation returns [Operation op] : ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal );"	TokenNameStringLiteral	709:1: operation returns [Operation op] : ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA84_eotS	TokenNameIdentifier	 DF A84 eot S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA84_eofS	TokenNameIdentifier	 DF A84 eof S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA84_minS	TokenNameIdentifier	 DF A84 min S
=	TokenNameEQUAL	
"L?"	TokenNameStringLiteral	L?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA84_maxS	TokenNameIdentifier	 DF A84 max S
=	TokenNameEQUAL	
"[??"	TokenNameStringLiteral	[??
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA84_acceptS	TokenNameIdentifier	 DF A84 accept S
=	TokenNameEQUAL	
"?"	TokenNameStringLiteral	?
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
DFA84_specialS	TokenNameIdentifier	 DF A84 special S
=	TokenNameEQUAL	
"?}>"	TokenNameStringLiteral	?}>
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
String	TokenNameIdentifier	 String
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_transitionS	TokenNameIdentifier	 DF A84 transition S
=	TokenNameEQUAL	
{	TokenNameLBRACE	
"?????"	TokenNameStringLiteral	?????
+	TokenNamePLUS	
"???? ?"	TokenNameStringLiteral	???? ?
+	TokenNamePLUS	
"??    "	TokenNameStringLiteral	??    
+	TokenNamePLUS	
" "	TokenNameStringLiteral	 
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
":??"	TokenNameStringLiteral	:??
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
,	TokenNameCOMMA	
""	TokenNameStringLiteral	 
}	TokenNameRBRACE	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_eot	TokenNameIdentifier	 DF A84 eot
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA84_eotS	TokenNameIdentifier	 DF A84 eot S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_eof	TokenNameIdentifier	 DF A84 eof
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA84_eofS	TokenNameIdentifier	 DF A84 eof S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_min	TokenNameIdentifier	 DF A84 min
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA84_minS	TokenNameIdentifier	 DF A84 min S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
char	TokenNamechar	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_max	TokenNameIdentifier	 DF A84 max
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedStringToUnsignedChars	TokenNameIdentifier	 unpack Encoded String To Unsigned Chars
(	TokenNameLPAREN	
DFA84_maxS	TokenNameIdentifier	 DF A84 max S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_accept	TokenNameIdentifier	 DF A84 accept
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA84_acceptS	TokenNameIdentifier	 DF A84 accept S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_special	TokenNameIdentifier	 DF A84 special
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA84_specialS	TokenNameIdentifier	 DF A84 special S
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
static	TokenNamestatic	
final	TokenNamefinal	
short	TokenNameshort	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
DFA84_transition	TokenNameIdentifier	 DF A84 transition
;	TokenNameSEMICOLON	
static	TokenNamestatic	
{	TokenNameLBRACE	
int	TokenNameint	
numStates	TokenNameIdentifier	 num States
=	TokenNameEQUAL	
DFA84_transitionS	TokenNameIdentifier	 DF A84 transition S
.	TokenNameDOT	
length	TokenNameIdentifier	 length
;	TokenNameSEMICOLON	
DFA84_transition	TokenNameIdentifier	 DF A84 transition
=	TokenNameEQUAL	
new	TokenNamenew	
short	TokenNameshort	
[	TokenNameLBRACKET	
numStates	TokenNameIdentifier	 num States
]	TokenNameRBRACKET	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
;	TokenNameSEMICOLON	
for	TokenNamefor	
(	TokenNameLPAREN	
int	TokenNameint	
i	TokenNameIdentifier	 i
=	TokenNameEQUAL	
0	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
<	TokenNameLESS	
numStates	TokenNameIdentifier	 num States
;	TokenNameSEMICOLON	
i	TokenNameIdentifier	 i
++	TokenNamePLUS_PLUS	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
DFA84_transition	TokenNameIdentifier	 DF A84 transition
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
=	TokenNameEQUAL	
DFA	TokenNameIdentifier	 DFA
.	TokenNameDOT	
unpackEncodedString	TokenNameIdentifier	 unpack Encoded String
(	TokenNameLPAREN	
DFA84_transitionS	TokenNameIdentifier	 DF A84 transition S
[	TokenNameLBRACKET	
i	TokenNameIdentifier	 i
]	TokenNameRBRACKET	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
class	TokenNameclass	
DFA84	TokenNameIdentifier	 DF A84
extends	TokenNameextends	
DFA	TokenNameIdentifier	 DFA
{	TokenNameLBRACE	
public	TokenNamepublic	
DFA84	TokenNameIdentifier	 DF A84
(	TokenNameLPAREN	
BaseRecognizer	TokenNameIdentifier	 Base Recognizer
recognizer	TokenNameIdentifier	 recognizer
)	TokenNameRPAREN	
{	TokenNameLBRACE	
this	TokenNamethis	
.	TokenNameDOT	
recognizer	TokenNameIdentifier	 recognizer
=	TokenNameEQUAL	
recognizer	TokenNameIdentifier	 recognizer
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
decisionNumber	TokenNameIdentifier	 decision Number
=	TokenNameEQUAL	
84	TokenNameIntegerLiteral	
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eot	TokenNameIdentifier	 eot
=	TokenNameEQUAL	
DFA84_eot	TokenNameIdentifier	 DF A84 eot
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
eof	TokenNameIdentifier	 eof
=	TokenNameEQUAL	
DFA84_eof	TokenNameIdentifier	 DF A84 eof
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
min	TokenNameIdentifier	 min
=	TokenNameEQUAL	
DFA84_min	TokenNameIdentifier	 DF A84 min
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
max	TokenNameIdentifier	 max
=	TokenNameEQUAL	
DFA84_max	TokenNameIdentifier	 DF A84 max
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
accept	TokenNameIdentifier	 accept
=	TokenNameEQUAL	
DFA84_accept	TokenNameIdentifier	 DF A84 accept
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
special	TokenNameIdentifier	 special
=	TokenNameEQUAL	
DFA84_special	TokenNameIdentifier	 DF A84 special
;	TokenNameSEMICOLON	
this	TokenNamethis	
.	TokenNameDOT	
transition	TokenNameIdentifier	 transition
=	TokenNameEQUAL	
DFA84_transition	TokenNameIdentifier	 DF A84 transition
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
public	TokenNamepublic	
String	TokenNameIdentifier	 String
getDescription	TokenNameIdentifier	 get Description
(	TokenNameLPAREN	
)	TokenNameRPAREN	
{	TokenNameLBRACE	
return	TokenNamereturn	
"752:1: relation[List<Relation> clauses] : (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' );"	TokenNameStringLiteral	752:1: relation[List<Relation> clauses] : (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' );
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
}	TokenNameRBRACE	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cqlStatement_in_query72	TokenNameIdentifier	 FOLLOW cql Statement in query72
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x1000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_124_in_query75	TokenNameIdentifier	 FOLLOW 124 in query75
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x1000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_EOF_in_query79	TokenNameIdentifier	 FOLLOW  EOF in query79
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_selectStatement_in_cqlStatement113	TokenNameIdentifier	 FOLLOW select Statement in cql Statement113
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_insertStatement_in_cqlStatement138	TokenNameIdentifier	 FOLLOW insert Statement in cql Statement138
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_updateStatement_in_cqlStatement163	TokenNameIdentifier	 FOLLOW update Statement in cql Statement163
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_batchStatement_in_cqlStatement188	TokenNameIdentifier	 FOLLOW batch Statement in cql Statement188
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_deleteStatement_in_cqlStatement214	TokenNameIdentifier	 FOLLOW delete Statement in cql Statement214
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_useStatement_in_cqlStatement239	TokenNameIdentifier	 FOLLOW use Statement in cql Statement239
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_truncateStatement_in_cqlStatement267	TokenNameIdentifier	 FOLLOW truncate Statement in cql Statement267
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_createKeyspaceStatement_in_cqlStatement290	TokenNameIdentifier	 FOLLOW create Keyspace Statement in cql Statement290
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_createColumnFamilyStatement_in_cqlStatement307	TokenNameIdentifier	 FOLLOW create Column Family Statement in cql Statement307
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_createIndexStatement_in_cqlStatement319	TokenNameIdentifier	 FOLLOW create Index Statement in cql Statement319
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_dropKeyspaceStatement_in_cqlStatement338	TokenNameIdentifier	 FOLLOW drop Keyspace Statement in cql Statement338
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_dropColumnFamilyStatement_in_cqlStatement356	TokenNameIdentifier	 FOLLOW drop Column Family Statement in cql Statement356
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_dropIndexStatement_in_cqlStatement370	TokenNameIdentifier	 FOLLOW drop Index Statement in cql Statement370
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_alterTableStatement_in_cqlStatement391	TokenNameIdentifier	 FOLLOW alter Table Statement in cql Statement391
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_alterKeyspaceStatement_in_cqlStatement411	TokenNameIdentifier	 FOLLOW alter Keyspace Statement in cql Statement411
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_grantStatement_in_cqlStatement428	TokenNameIdentifier	 FOLLOW grant Statement in cql Statement428
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_revokeStatement_in_cqlStatement453	TokenNameIdentifier	 FOLLOW revoke Statement in cql Statement453
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_listPermissionsStatement_in_cqlStatement477	TokenNameIdentifier	 FOLLOW list Permissions Statement in cql Statement477
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_createUserStatement_in_cqlStatement492	TokenNameIdentifier	 FOLLOW create User Statement in cql Statement492
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_alterUserStatement_in_cqlStatement512	TokenNameIdentifier	 FOLLOW alter User Statement in cql Statement512
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_dropUserStatement_in_cqlStatement533	TokenNameIdentifier	 FOLLOW drop User Statement in cql Statement533
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_listUsersStatement_in_cqlStatement555	TokenNameIdentifier	 FOLLOW list Users Statement in cql Statement555
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USE_in_useStatement589	TokenNameIdentifier	 FOLLOW  K  USE in use Statement589
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspaceName_in_useStatement593	TokenNameIdentifier	 FOLLOW keyspace Name in use Statement593
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_SELECT_in_selectStatement627	TokenNameIdentifier	 FOLLOW  K  SELECT in select Statement627
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_selectClause_in_selectStatement633	TokenNameIdentifier	 FOLLOW select Clause in select Statement633
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COUNT_in_selectStatement638	TokenNameIdentifier	 FOLLOW  K  COUNT in select Statement638
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_selectStatement640	TokenNameIdentifier	 FOLLOW 125 in select Statement640
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000001L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_selectCountClause_in_selectStatement644	TokenNameIdentifier	 FOLLOW select Count Clause in select Statement644
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_selectStatement646	TokenNameIdentifier	 FOLLOW 126 in select Statement646
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_FROM_in_selectStatement659	TokenNameIdentifier	 FOLLOW  K  FROM in select Statement659
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_selectStatement663	TokenNameIdentifier	 FOLLOW column Family Name in select Statement663
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000002B02L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WHERE_in_selectStatement673	TokenNameIdentifier	 FOLLOW  K  WHERE in select Statement673
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE82FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_whereClause_in_selectStatement677	TokenNameIdentifier	 FOLLOW where Clause in select Statement677
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000002A02L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ORDER_in_selectStatement690	TokenNameIdentifier	 FOLLOW  K  ORDER in select Statement690
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000400L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BY_in_selectStatement692	TokenNameIdentifier	 FOLLOW  K  BY in select Statement692
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_orderByClause_in_selectStatement694	TokenNameIdentifier	 FOLLOW order By Clause in select Statement694
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000002802L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_selectStatement699	TokenNameIdentifier	 FOLLOW 127 in select Statement699
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_orderByClause_in_selectStatement701	TokenNameIdentifier	 FOLLOW order By Clause in select Statement701
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000002802L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_LIMIT_in_selectStatement718	TokenNameIdentifier	 FOLLOW  K  LIMIT in select Statement718
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_selectStatement722	TokenNameIdentifier	 FOLLOW  INTEGER in select Statement722
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000002002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALLOW_in_selectStatement737	TokenNameIdentifier	 FOLLOW  K  ALLOW in select Statement737
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000004000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_FILTERING_in_selectStatement739	TokenNameIdentifier	 FOLLOW  K  FILTERING in select Statement739
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_selector_in_selectClause776	TokenNameIdentifier	 FOLLOW selector in select Clause776
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_selectClause781	TokenNameIdentifier	 FOLLOW 127 in select Clause781
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_selector_in_selectClause785	TokenNameIdentifier	 FOLLOW selector in select Clause785
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_128_in_selectClause797	TokenNameIdentifier	 FOLLOW 128 in select Clause797
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_selector822	TokenNameIdentifier	 FOLLOW cident in selector822
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WRITETIME_in_selector844	TokenNameIdentifier	 FOLLOW  K  WRITETIME in selector844
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_selector846	TokenNameIdentifier	 FOLLOW 125 in selector846
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_selector850	TokenNameIdentifier	 FOLLOW cident in selector850
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_selector852	TokenNameIdentifier	 FOLLOW 126 in selector852
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TTL_in_selector862	TokenNameIdentifier	 FOLLOW  K  TTL in selector862
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_selector864	TokenNameIdentifier	 FOLLOW 125 in selector864
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_selector868	TokenNameIdentifier	 FOLLOW cident in selector868
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_selector870	TokenNameIdentifier	 FOLLOW 126 in selector870
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_128_in_selectCountClause899	TokenNameIdentifier	 FOLLOW 128 in select Count Clause899
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_selectCountClause921	TokenNameIdentifier	 FOLLOW  INTEGER in select Count Clause921
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_relation_in_whereClause957	TokenNameIdentifier	 FOLLOW relation in where Clause957
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_AND_in_whereClause961	TokenNameIdentifier	 FOLLOW  K  AND in where Clause961
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE82FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_relation_in_whereClause963	TokenNameIdentifier	 FOLLOW relation in where Clause963
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_orderByClause994	TokenNameIdentifier	 FOLLOW cident in order By Clause994
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x00000000000C0002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ASC_in_orderByClause999	TokenNameIdentifier	 FOLLOW  K  ASC in order By Clause999
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DESC_in_orderByClause1003	TokenNameIdentifier	 FOLLOW  K  DESC in order By Clause1003
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_INSERT_in_insertStatement1041	TokenNameIdentifier	 FOLLOW  K  INSERT in insert Statement1041
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000200000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_INTO_in_insertStatement1043	TokenNameIdentifier	 FOLLOW  K  INTO in insert Statement1043
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_insertStatement1047	TokenNameIdentifier	 FOLLOW column Family Name in insert Statement1047
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_insertStatement1059	TokenNameIdentifier	 FOLLOW 125 in insert Statement1059
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_insertStatement1063	TokenNameIdentifier	 FOLLOW cident in insert Statement1063
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_insertStatement1070	TokenNameIdentifier	 FOLLOW 127 in insert Statement1070
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_insertStatement1074	TokenNameIdentifier	 FOLLOW cident in insert Statement1074
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_insertStatement1081	TokenNameIdentifier	 FOLLOW 126 in insert Statement1081
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000400000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_VALUES_in_insertStatement1091	TokenNameIdentifier	 FOLLOW  K  VALUES in insert Statement1091
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_insertStatement1103	TokenNameIdentifier	 FOLLOW 125 in insert Statement1103
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000012L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_operation_in_insertStatement1107	TokenNameIdentifier	 FOLLOW set operation in insert Statement1107
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_insertStatement1113	TokenNameIdentifier	 FOLLOW 127 in insert Statement1113
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000012L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_operation_in_insertStatement1117	TokenNameIdentifier	 FOLLOW set operation in insert Statement1117
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_insertStatement1124	TokenNameIdentifier	 FOLLOW 126 in insert Statement1124
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000800002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClause_in_insertStatement1136	TokenNameIdentifier	 FOLLOW using Clause in insert Statement1136
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USING_in_usingClause1166	TokenNameIdentifier	 FOLLOW  K  USING in using Clause1166
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001010000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClauseObjective_in_usingClause1168	TokenNameIdentifier	 FOLLOW using Clause Objective in using Clause1168
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001030002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_AND_in_usingClause1173	TokenNameIdentifier	 FOLLOW  K  AND in using Clause1173
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001010000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClauseObjective_in_usingClause1176	TokenNameIdentifier	 FOLLOW using Clause Objective in using Clause1176
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001030002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USING_in_usingClauseDelete1198	TokenNameIdentifier	 FOLLOW  K  USING in using Clause Delete1198
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1200	TokenNameIdentifier	 FOLLOW using Clause Delete Objective in using Clause Delete1200
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_AND_in_usingClauseDelete1205	TokenNameIdentifier	 FOLLOW  K  AND in using Clause Delete1205
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1208	TokenNameIdentifier	 FOLLOW using Clause Delete Objective in using Clause Delete1208
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000001020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TIMESTAMP_in_usingClauseDeleteObjective1230	TokenNameIdentifier	 FOLLOW  K  TIMESTAMP in using Clause Delete Objective1230
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_usingClauseDeleteObjective1234	TokenNameIdentifier	 FOLLOW  INTEGER in using Clause Delete Objective1234
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClauseDeleteObjective_in_usingClauseObjective1254	TokenNameIdentifier	 FOLLOW using Clause Delete Objective in using Clause Objective1254
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TTL_in_usingClauseObjective1263	TokenNameIdentifier	 FOLLOW  K  TTL in using Clause Objective1263
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_usingClauseObjective1267	TokenNameIdentifier	 FOLLOW  INTEGER in using Clause Objective1267
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_UPDATE_in_updateStatement1301	TokenNameIdentifier	 FOLLOW  K  UPDATE in update Statement1301
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_updateStatement1305	TokenNameIdentifier	 FOLLOW column Family Name in update Statement1305
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000004800000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClause_in_updateStatement1315	TokenNameIdentifier	 FOLLOW using Clause in update Statement1315
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000004000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_SET_in_updateStatement1327	TokenNameIdentifier	 FOLLOW  K  SET in update Statement1327
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_termPairWithOperation_in_updateStatement1329	TokenNameIdentifier	 FOLLOW term Pair With Operation in update Statement1329
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000100L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_updateStatement1333	TokenNameIdentifier	 FOLLOW 127 in update Statement1333
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_termPairWithOperation_in_updateStatement1335	TokenNameIdentifier	 FOLLOW term Pair With Operation in update Statement1335
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000100L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WHERE_in_updateStatement1346	TokenNameIdentifier	 FOLLOW  K  WHERE in update Statement1346
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE82FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_whereClause_in_updateStatement1350	TokenNameIdentifier	 FOLLOW where Clause in update Statement1350
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DELETE_in_deleteStatement1390	TokenNameIdentifier	 FOLLOW  K  DELETE in delete Statement1390
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C0C0L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_deleteSelection_in_deleteStatement1396	TokenNameIdentifier	 FOLLOW delete Selection in delete Statement1396
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_FROM_in_deleteStatement1409	TokenNameIdentifier	 FOLLOW  K  FROM in delete Statement1409
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_deleteStatement1413	TokenNameIdentifier	 FOLLOW column Family Name in delete Statement1413
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000800100L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClauseDelete_in_deleteStatement1423	TokenNameIdentifier	 FOLLOW using Clause Delete in delete Statement1423
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000100L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WHERE_in_deleteStatement1435	TokenNameIdentifier	 FOLLOW  K  WHERE in delete Statement1435
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE82FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_whereClause_in_deleteStatement1439	TokenNameIdentifier	 FOLLOW where Clause in delete Statement1439
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_deleteSelector_in_deleteSelection1470	TokenNameIdentifier	 FOLLOW delete Selector in delete Selection1470
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_deleteSelection1475	TokenNameIdentifier	 FOLLOW 127 in delete Selection1475
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_deleteSelector_in_deleteSelection1479	TokenNameIdentifier	 FOLLOW delete Selector in delete Selection1479
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_deleteSelector1506	TokenNameIdentifier	 FOLLOW cident in delete Selector1506
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_deleteSelector1533	TokenNameIdentifier	 FOLLOW cident in delete Selector1533
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_129_in_deleteSelector1535	TokenNameIdentifier	 FOLLOW 129 in delete Selector1535
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_deleteSelector1539	TokenNameIdentifier	 FOLLOW term in delete Selector1539
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_130_in_deleteSelector1541	TokenNameIdentifier	 FOLLOW 130 in delete Selector1541
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BEGIN_in_batchStatement1575	TokenNameIdentifier	 FOLLOW  K  BEGIN in batch Statement1575
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x00000000E0000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_UNLOGGED_in_batchStatement1585	TokenNameIdentifier	 FOLLOW  K  UNLOGGED in batch Statement1585
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000080000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COUNTER_in_batchStatement1591	TokenNameIdentifier	 FOLLOW  K  COUNTER in batch Statement1591
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000080000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BATCH_in_batchStatement1604	TokenNameIdentifier	 FOLLOW  K  BATCH in batch Statement1604
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x000000000A900000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_usingClause_in_batchStatement1608	TokenNameIdentifier	 FOLLOW using Clause in batch Statement1608
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x000000000A900000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_batchStatementObjective_in_batchStatement1626	TokenNameIdentifier	 FOLLOW batch Statement Objective in batch Statement1626
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x000000010A900000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x1000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_124_in_batchStatement1628	TokenNameIdentifier	 FOLLOW 124 in batch Statement1628
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x000000010A900000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_batchStatementObjective_in_batchStatement1637	TokenNameIdentifier	 FOLLOW batch Statement Objective in batch Statement1637
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x000000010A900000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x1000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_124_in_batchStatement1639	TokenNameIdentifier	 FOLLOW 124 in batch Statement1639
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x000000010A900000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_APPLY_in_batchStatement1653	TokenNameIdentifier	 FOLLOW  K  APPLY in batch Statement1653
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000080000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BATCH_in_batchStatement1655	TokenNameIdentifier	 FOLLOW  K  BATCH in batch Statement1655
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_insertStatement_in_batchStatementObjective1686	TokenNameIdentifier	 FOLLOW insert Statement in batch Statement Objective1686
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_updateStatement_in_batchStatementObjective1699	TokenNameIdentifier	 FOLLOW update Statement in batch Statement Objective1699
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_deleteStatement_in_batchStatementObjective1712	TokenNameIdentifier	 FOLLOW delete Statement in batch Statement Objective1712
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_CREATE_in_createKeyspaceStatement1747	TokenNameIdentifier	 FOLLOW  K  CREATE in create Keyspace Statement1747
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000400000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEYSPACE_in_createKeyspaceStatement1749	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in create Keyspace Statement1749
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspaceName_in_createKeyspaceStatement1753	TokenNameIdentifier	 FOLLOW keyspace Name in create Keyspace Statement1753
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000800000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WITH_in_createKeyspaceStatement1761	TokenNameIdentifier	 FOLLOW  K  WITH in create Keyspace Statement1761
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_properties_in_createKeyspaceStatement1763	TokenNameIdentifier	 FOLLOW properties in create Keyspace Statement1763
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_CREATE_in_createColumnFamilyStatement1789	TokenNameIdentifier	 FOLLOW  K  CREATE in create Column Family Statement1789
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000001000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COLUMNFAMILY_in_createColumnFamilyStatement1791	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in create Column Family Statement1791
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_createColumnFamilyStatement1795	TokenNameIdentifier	 FOLLOW column Family Name in create Column Family Statement1795
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamDefinition_in_createColumnFamilyStatement1805	TokenNameIdentifier	 FOLLOW cfam Definition in create Column Family Statement1805
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_cfamDefinition1824	TokenNameIdentifier	 FOLLOW 125 in cfam Definition1824
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BE04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamColumns_in_cfamDefinition1826	TokenNameIdentifier	 FOLLOW cfam Columns in cfam Definition1826
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_cfamDefinition1831	TokenNameIdentifier	 FOLLOW 127 in cfam Definition1831
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BE04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC00000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamColumns_in_cfamDefinition1833	TokenNameIdentifier	 FOLLOW cfam Columns in cfam Definition1833
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_cfamDefinition1840	TokenNameIdentifier	 FOLLOW 126 in cfam Definition1840
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000800000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WITH_in_cfamDefinition1850	TokenNameIdentifier	 FOLLOW  K  WITH in cfam Definition1850
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamProperty_in_cfamDefinition1852	TokenNameIdentifier	 FOLLOW cfam Property in cfam Definition1852
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_AND_in_cfamDefinition1857	TokenNameIdentifier	 FOLLOW  K  AND in cfam Definition1857
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamProperty_in_cfamDefinition1859	TokenNameIdentifier	 FOLLOW cfam Property in cfam Definition1859
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_cfamColumns1885	TokenNameIdentifier	 FOLLOW cident in cfam Columns1885
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_cfamColumns1889	TokenNameIdentifier	 FOLLOW comparator Type in cfam Columns1889
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000002000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_PRIMARY_in_cfamColumns1894	TokenNameIdentifier	 FOLLOW  K  PRIMARY in cfam Columns1894
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000004000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEY_in_cfamColumns1896	TokenNameIdentifier	 FOLLOW  K  KEY in cfam Columns1896
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_PRIMARY_in_cfamColumns1908	TokenNameIdentifier	 FOLLOW  K  PRIMARY in cfam Columns1908
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000004000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEY_in_cfamColumns1910	TokenNameIdentifier	 FOLLOW  K  KEY in cfam Columns1910
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_cfamColumns1912	TokenNameIdentifier	 FOLLOW 125 in cfam Columns1912
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x200000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_pkDef_in_cfamColumns1914	TokenNameIdentifier	 FOLLOW pk Def in cfam Columns1914
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_cfamColumns1918	TokenNameIdentifier	 FOLLOW 127 in cfam Columns1918
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_cfamColumns1922	TokenNameIdentifier	 FOLLOW cident in cfam Columns1922
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_cfamColumns1929	TokenNameIdentifier	 FOLLOW 126 in cfam Columns1929
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_pkDef1949	TokenNameIdentifier	 FOLLOW cident in pk Def1949
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_pkDef1959	TokenNameIdentifier	 FOLLOW 125 in pk Def1959
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_pkDef1965	TokenNameIdentifier	 FOLLOW cident in pk Def1965
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_pkDef1971	TokenNameIdentifier	 FOLLOW 127 in pk Def1971
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_pkDef1975	TokenNameIdentifier	 FOLLOW cident in pk Def1975
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_pkDef1982	TokenNameIdentifier	 FOLLOW 126 in pk Def1982
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_property_in_cfamProperty2002	TokenNameIdentifier	 FOLLOW property in cfam Property2002
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COMPACT_in_cfamProperty2011	TokenNameIdentifier	 FOLLOW  K  COMPACT in cfam Property2011
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000010000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_STORAGE_in_cfamProperty2013	TokenNameIdentifier	 FOLLOW  K  STORAGE in cfam Property2013
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_CLUSTERING_in_cfamProperty2023	TokenNameIdentifier	 FOLLOW  K  CLUSTERING in cfam Property2023
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000200L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ORDER_in_cfamProperty2025	TokenNameIdentifier	 FOLLOW  K  ORDER in cfam Property2025
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000400L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BY_in_cfamProperty2027	TokenNameIdentifier	 FOLLOW  K  BY in cfam Property2027
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_cfamProperty2029	TokenNameIdentifier	 FOLLOW 125 in cfam Property2029
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamOrdering_in_cfamProperty2031	TokenNameIdentifier	 FOLLOW cfam Ordering in cfam Property2031
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_cfamProperty2035	TokenNameIdentifier	 FOLLOW 127 in cfam Property2035
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfamOrdering_in_cfamProperty2037	TokenNameIdentifier	 FOLLOW cfam Ordering in cfam Property2037
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_cfamProperty2042	TokenNameIdentifier	 FOLLOW 126 in cfam Property2042
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_cfamOrdering2070	TokenNameIdentifier	 FOLLOW cident in cfam Ordering2070
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x00000000000C0000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ASC_in_cfamOrdering2073	TokenNameIdentifier	 FOLLOW  K  ASC in cfam Ordering2073
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DESC_in_cfamOrdering2077	TokenNameIdentifier	 FOLLOW  K  DESC in cfam Ordering2077
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_CREATE_in_createIndexStatement2106	TokenNameIdentifier	 FOLLOW  K  CREATE in create Index Statement2106
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000040000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_INDEX_in_createIndexStatement2108	TokenNameIdentifier	 FOLLOW  K  INDEX in create Index Statement2108
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000180000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IDENT_in_createIndexStatement2113	TokenNameIdentifier	 FOLLOW  IDENT in create Index Statement2113
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000100000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ON_in_createIndexStatement2117	TokenNameIdentifier	 FOLLOW  K  ON in create Index Statement2117
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_createIndexStatement2121	TokenNameIdentifier	 FOLLOW column Family Name in create Index Statement2121
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_createIndexStatement2123	TokenNameIdentifier	 FOLLOW 125 in create Index Statement2123
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_createIndexStatement2127	TokenNameIdentifier	 FOLLOW cident in create Index Statement2127
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_createIndexStatement2129	TokenNameIdentifier	 FOLLOW 126 in create Index Statement2129
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALTER_in_alterKeyspaceStatement2169	TokenNameIdentifier	 FOLLOW  K  ALTER in alter Keyspace Statement2169
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000400000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEYSPACE_in_alterKeyspaceStatement2171	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in alter Keyspace Statement2171
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspaceName_in_alterKeyspaceStatement2175	TokenNameIdentifier	 FOLLOW keyspace Name in alter Keyspace Statement2175
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000800000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WITH_in_alterKeyspaceStatement2185	TokenNameIdentifier	 FOLLOW  K  WITH in alter Keyspace Statement2185
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_properties_in_alterKeyspaceStatement2187	TokenNameIdentifier	 FOLLOW properties in alter Keyspace Statement2187
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALTER_in_alterTableStatement2223	TokenNameIdentifier	 FOLLOW  K  ALTER in alter Table Statement2223
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000001000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COLUMNFAMILY_in_alterTableStatement2225	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in alter Table Statement2225
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_alterTableStatement2229	TokenNameIdentifier	 FOLLOW column Family Name in alter Table Statement2229
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0001A00800000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALTER_in_alterTableStatement2243	TokenNameIdentifier	 FOLLOW  K  ALTER in alter Table Statement2243
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_alterTableStatement2247	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2247
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000400000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TYPE_in_alterTableStatement2249	TokenNameIdentifier	 FOLLOW  K  TYPE in alter Table Statement2249
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_alterTableStatement2253	TokenNameIdentifier	 FOLLOW comparator Type in alter Table Statement2253
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ADD_in_alterTableStatement2269	TokenNameIdentifier	 FOLLOW  K  ADD in alter Table Statement2269
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_alterTableStatement2275	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2275
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_alterTableStatement2279	TokenNameIdentifier	 FOLLOW comparator Type in alter Table Statement2279
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WITH_in_alterTableStatement2313	TokenNameIdentifier	 FOLLOW  K  WITH in alter Table Statement2313
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_properties_in_alterTableStatement2316	TokenNameIdentifier	 FOLLOW properties in alter Table Statement2316
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_RENAME_in_alterTableStatement2349	TokenNameIdentifier	 FOLLOW  K  RENAME in alter Table Statement2349
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_alterTableStatement2403	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2403
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0002000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TO_in_alterTableStatement2405	TokenNameIdentifier	 FOLLOW  K  TO in alter Table Statement2405
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_alterTableStatement2409	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2409
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_AND_in_alterTableStatement2430	TokenNameIdentifier	 FOLLOW  K  AND in alter Table Statement2430
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_alterTableStatement2434	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2434
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0002000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TO_in_alterTableStatement2436	TokenNameIdentifier	 FOLLOW  K  TO in alter Table Statement2436
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_alterTableStatement2440	TokenNameIdentifier	 FOLLOW cident in alter Table Statement2440
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DROP_in_dropKeyspaceStatement2486	TokenNameIdentifier	 FOLLOW  K  DROP in drop Keyspace Statement2486
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000400000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEYSPACE_in_dropKeyspaceStatement2488	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in drop Keyspace Statement2488
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspaceName_in_dropKeyspaceStatement2492	TokenNameIdentifier	 FOLLOW keyspace Name in drop Keyspace Statement2492
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DROP_in_dropColumnFamilyStatement2517	TokenNameIdentifier	 FOLLOW  K  DROP in drop Column Family Statement2517
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000001000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COLUMNFAMILY_in_dropColumnFamilyStatement2519	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in drop Column Family Statement2519
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_dropColumnFamilyStatement2523	TokenNameIdentifier	 FOLLOW column Family Name in drop Column Family Statement2523
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DROP_in_dropIndexStatement2554	TokenNameIdentifier	 FOLLOW  K  DROP in drop Index Statement2554
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000040000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_INDEX_in_dropIndexStatement2556	TokenNameIdentifier	 FOLLOW  K  INDEX in drop Index Statement2556
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IDENT_in_dropIndexStatement2560	TokenNameIdentifier	 FOLLOW  IDENT in drop Index Statement2560
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TRUNCATE_in_truncateStatement2591	TokenNameIdentifier	 FOLLOW  K  TRUNCATE in truncate Statement2591
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_truncateStatement2595	TokenNameIdentifier	 FOLLOW column Family Name in truncate Statement2595
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_GRANT_in_grantStatement2620	TokenNameIdentifier	 FOLLOW  K  GRANT in grant Statement2620
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0E04200200000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_permissionOrAll_in_grantStatement2632	TokenNameIdentifier	 FOLLOW permission Or All in grant Statement2632
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000100000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ON_in_grantStatement2640	TokenNameIdentifier	 FOLLOW  K  ON in grant Statement2640
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BD44141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_resource_in_grantStatement2652	TokenNameIdentifier	 FOLLOW resource in grant Statement2652
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0002000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TO_in_grantStatement2660	TokenNameIdentifier	 FOLLOW  K  TO in grant Statement2660
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_grantStatement2672	TokenNameIdentifier	 FOLLOW username in grant Statement2672
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_REVOKE_in_revokeStatement2703	TokenNameIdentifier	 FOLLOW  K  REVOKE in revoke Statement2703
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0E04200200000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_permissionOrAll_in_revokeStatement2715	TokenNameIdentifier	 FOLLOW permission Or All in revoke Statement2715
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000100000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ON_in_revokeStatement2723	TokenNameIdentifier	 FOLLOW  K  ON in revoke Statement2723
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BD44141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_resource_in_revokeStatement2735	TokenNameIdentifier	 FOLLOW resource in revoke Statement2735
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_FROM_in_revokeStatement2743	TokenNameIdentifier	 FOLLOW  K  FROM in revoke Statement2743
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_revokeStatement2755	TokenNameIdentifier	 FOLLOW username in revoke Statement2755
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_LIST_in_listPermissionsStatement2793	TokenNameIdentifier	 FOLLOW  K  LIST in list Permissions Statement2793
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0E04200200000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_permissionOrAll_in_listPermissionsStatement2805	TokenNameIdentifier	 FOLLOW permission Or All in list Permissions Statement2805
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0180100000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ON_in_listPermissionsStatement2815	TokenNameIdentifier	 FOLLOW  K  ON in list Permissions Statement2815
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BD44141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_resource_in_listPermissionsStatement2817	TokenNameIdentifier	 FOLLOW resource in list Permissions Statement2817
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0180000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_OF_in_listPermissionsStatement2832	TokenNameIdentifier	 FOLLOW  K  OF in list Permissions Statement2832
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_listPermissionsStatement2834	TokenNameIdentifier	 FOLLOW username in list Permissions Statement2834
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0100000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_NORECURSIVE_in_listPermissionsStatement2849	TokenNameIdentifier	 FOLLOW  K  NORECURSIVE in list Permissions Statement2849
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_permission2885	TokenNameIdentifier	 FOLLOW set in permission2885
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALL_in_permissionOrAll2934	TokenNameIdentifier	 FOLLOW  K  ALL in permission Or All2934
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x1000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_PERMISSIONS_in_permissionOrAll2938	TokenNameIdentifier	 FOLLOW  K  PERMISSIONS in permission Or All2938
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_permission_in_permissionOrAll2959	TokenNameIdentifier	 FOLLOW permission in permission Or All2959
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x2000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_PERMISSION_in_permissionOrAll2963	TokenNameIdentifier	 FOLLOW  K  PERMISSION in permission Or All2963
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_dataResource_in_resource2991	TokenNameIdentifier	 FOLLOW data Resource in resource2991
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALL_in_dataResource3014	TokenNameIdentifier	 FOLLOW  K  ALL in data Resource3014
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x4000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEYSPACES_in_dataResource3016	TokenNameIdentifier	 FOLLOW  K  KEYSPACES in data Resource3016
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_KEYSPACE_in_dataResource3026	TokenNameIdentifier	 FOLLOW  K  KEYSPACE in data Resource3026
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_keyspaceName_in_dataResource3032	TokenNameIdentifier	 FOLLOW keyspace Name in data Resource3032
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COLUMNFAMILY_in_dataResource3044	TokenNameIdentifier	 FOLLOW  K  COLUMNFAMILY in data Resource3044
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_columnFamilyName_in_dataResource3053	TokenNameIdentifier	 FOLLOW column Family Name in data Resource3053
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_CREATE_in_createUserStatement3093	TokenNameIdentifier	 FOLLOW  K  CREATE in create User Statement3093
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USER_in_createUserStatement3095	TokenNameIdentifier	 FOLLOW  K  USER in create User Statement3095
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_createUserStatement3097	TokenNameIdentifier	 FOLLOW username in create User Statement3097
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000800000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000003L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WITH_in_createUserStatement3107	TokenNameIdentifier	 FOLLOW  K  WITH in create User Statement3107
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_userOptions_in_createUserStatement3109	TokenNameIdentifier	 FOLLOW user Options in create User Statement3109
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000003L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_SUPERUSER_in_createUserStatement3123	TokenNameIdentifier	 FOLLOW  K  SUPERUSER in create User Statement3123
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_NOSUPERUSER_in_createUserStatement3129	TokenNameIdentifier	 FOLLOW  K  NOSUPERUSER in create User Statement3129
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ALTER_in_alterUserStatement3174	TokenNameIdentifier	 FOLLOW  K  ALTER in alter User Statement3174
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USER_in_alterUserStatement3176	TokenNameIdentifier	 FOLLOW  K  USER in alter User Statement3176
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_alterUserStatement3178	TokenNameIdentifier	 FOLLOW username in alter User Statement3178
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000800000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000003L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_WITH_in_alterUserStatement3188	TokenNameIdentifier	 FOLLOW  K  WITH in alter User Statement3188
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_userOptions_in_alterUserStatement3190	TokenNameIdentifier	 FOLLOW user Options in alter User Statement3190
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000003L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_SUPERUSER_in_alterUserStatement3204	TokenNameIdentifier	 FOLLOW  K  SUPERUSER in alter User Statement3204
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_NOSUPERUSER_in_alterUserStatement3210	TokenNameIdentifier	 FOLLOW  K  NOSUPERUSER in alter User Statement3210
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DROP_in_dropUserStatement3246	TokenNameIdentifier	 FOLLOW  K  DROP in drop User Statement3246
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USER_in_dropUserStatement3248	TokenNameIdentifier	 FOLLOW  K  USER in drop User Statement3248
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000080000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_username_in_dropUserStatement3250	TokenNameIdentifier	 FOLLOW username in drop User Statement3250
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_LIST_in_listUsersStatement3275	TokenNameIdentifier	 FOLLOW  K  LIST in list Users Statement3275
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_USERS_in_listUsersStatement3277	TokenNameIdentifier	 FOLLOW  K  USERS in list Users Statement3277
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_userOption_in_userOptions3297	TokenNameIdentifier	 FOLLOW user Option in user Options3297
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_PASSWORD_in_userOption3318	TokenNameIdentifier	 FOLLOW  K  PASSWORD in user Option3318
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_STRING_LITERAL_in_userOption3322	TokenNameIdentifier	 FOLLOW  STRING  LITERAL in user Option3322
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IDENT_in_cident3351	TokenNameIdentifier	 FOLLOW  IDENT in cident3351
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QUOTED_NAME_in_cident3376	TokenNameIdentifier	 FOLLOW  QUOTED  NAME in cident3376
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_unreserved_keyword_in_cident3395	TokenNameIdentifier	 FOLLOW unreserved keyword in cident3395
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfOrKsName_in_keyspaceName3428	TokenNameIdentifier	 FOLLOW cf Or Ks Name in keyspace Name3428
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfOrKsName_in_columnFamilyName3462	TokenNameIdentifier	 FOLLOW cf Or Ks Name in column Family Name3462
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000008L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_131_in_columnFamilyName3465	TokenNameIdentifier	 FOLLOW 131 in column Family Name3465
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cfOrKsName_in_columnFamilyName3469	TokenNameIdentifier	 FOLLOW cf Or Ks Name in column Family Name3469
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_IDENT_in_cfOrKsName3490	TokenNameIdentifier	 FOLLOW  IDENT in cf Or Ks Name3490
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QUOTED_NAME_in_cfOrKsName3515	TokenNameIdentifier	 FOLLOW  QUOTED  NAME in cf Or Ks Name3515
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_unreserved_keyword_in_cfOrKsName3534	TokenNameIdentifier	 FOLLOW unreserved keyword in cf Or Ks Name3534
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_set_operation3559	TokenNameIdentifier	 FOLLOW final Term in set operation3559
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QMARK_in_set_operation3574	TokenNameIdentifier	 FOLLOW  QMARK in set operation3574
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_map_literal_in_set_operation3592	TokenNameIdentifier	 FOLLOW map literal in set operation3592
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_list_literal_in_set_operation3605	TokenNameIdentifier	 FOLLOW list literal in set operation3605
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_literal_in_set_operation3617	TokenNameIdentifier	 FOLLOW set literal in set operation3617
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_129_in_list_literal3641	TokenNameIdentifier	 FOLLOW 129 in list literal3641
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_list_literal3649	TokenNameIdentifier	 FOLLOW final Term in list literal3649
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_list_literal3655	TokenNameIdentifier	 FOLLOW 127 in list literal3655
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_list_literal3659	TokenNameIdentifier	 FOLLOW final Term in list literal3659
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_130_in_list_literal3669	TokenNameIdentifier	 FOLLOW 130 in list literal3669
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_132_in_set_literal3692	TokenNameIdentifier	 FOLLOW 132 in set literal3692
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_set_literal3700	TokenNameIdentifier	 FOLLOW final Term in set literal3700
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_set_literal3706	TokenNameIdentifier	 FOLLOW 127 in set literal3706
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_set_literal3710	TokenNameIdentifier	 FOLLOW final Term in set literal3710
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_133_in_set_literal3720	TokenNameIdentifier	 FOLLOW 133 in set literal3720
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_132_in_map_literal3749	TokenNameIdentifier	 FOLLOW 132 in map literal3749
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_map_literal3765	TokenNameIdentifier	 FOLLOW final Term in map literal3765
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_134_in_map_literal3767	TokenNameIdentifier	 FOLLOW 134 in map literal3767
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_map_literal3771	TokenNameIdentifier	 FOLLOW final Term in map literal3771
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_map_literal3777	TokenNameIdentifier	 FOLLOW 127 in map literal3777
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_map_literal3781	TokenNameIdentifier	 FOLLOW final Term in map literal3781
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_134_in_map_literal3783	TokenNameIdentifier	 FOLLOW 134 in map literal3783
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000790L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_map_literal3787	TokenNameIdentifier	 FOLLOW final Term in map literal3787
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000020L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_133_in_map_literal3794	TokenNameIdentifier	 FOLLOW 133 in map literal3794
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_finalTerm3826	TokenNameIdentifier	 FOLLOW set in final Term3826
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_finalTerm_in_term3874	TokenNameIdentifier	 FOLLOW final Term in term3874
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QMARK_in_term3886	TokenNameIdentifier	 FOLLOW  QMARK in term3886
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_termPairWithOperation3913	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation3913
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_135_in_termPairWithOperation3915	TokenNameIdentifier	 FOLLOW 135 in term Pair With Operation3915
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141D040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE7FFL	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000012L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_operation_in_termPairWithOperation3929	TokenNameIdentifier	 FOLLOW set operation in term Pair With Operation3929
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_termPairWithOperation3945	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation3945
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000300L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_operation_in_termPairWithOperation3949	TokenNameIdentifier	 FOLLOW operation in term Pair With Operation3949
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_list_literal_in_termPairWithOperation3975	TokenNameIdentifier	 FOLLOW list literal in term Pair With Operation3975
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000100L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_termPairWithOperation3977	TokenNameIdentifier	 FOLLOW 136 in term Pair With Operation3977
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_termPairWithOperation3981	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation3981
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QMARK_in_termPairWithOperation4007	TokenNameIdentifier	 FOLLOW  QMARK in term Pair With Operation4007
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000100L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_termPairWithOperation4009	TokenNameIdentifier	 FOLLOW 136 in term Pair With Operation4009
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_termPairWithOperation4013	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation4013
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_termPairWithOperation4045	TokenNameIdentifier	 FOLLOW cident in term Pair With Operation4045
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_129_in_termPairWithOperation4047	TokenNameIdentifier	 FOLLOW 129 in term Pair With Operation4047
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_termPairWithOperation4051	TokenNameIdentifier	 FOLLOW term in term Pair With Operation4051
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000004L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_130_in_termPairWithOperation4053	TokenNameIdentifier	 FOLLOW 130 in term Pair With Operation4053
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_135_in_termPairWithOperation4055	TokenNameIdentifier	 FOLLOW 135 in term Pair With Operation4055
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_termPairWithOperation4059	TokenNameIdentifier	 FOLLOW term in term Pair With Operation4059
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_intTerm4090	TokenNameIdentifier	 FOLLOW  INTEGER in int Term4090
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QMARK_in_intTerm4102	TokenNameIdentifier	 FOLLOW  QMARK in int Term4102
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_operation4128	TokenNameIdentifier	 FOLLOW 136 in operation4128
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_operation4132	TokenNameIdentifier	 FOLLOW  INTEGER in operation4132
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_137_in_operation4144	TokenNameIdentifier	 FOLLOW 137 in operation4144
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_INTEGER_in_operation4149	TokenNameIdentifier	 FOLLOW  INTEGER in operation4149
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_operation4165	TokenNameIdentifier	 FOLLOW 136 in operation4165
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QMARK_in_operation4169	TokenNameIdentifier	 FOLLOW  QMARK in operation4169
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_137_in_operation4179	TokenNameIdentifier	 FOLLOW 137 in operation4179
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000040L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_QMARK_in_operation4183	TokenNameIdentifier	 FOLLOW  QMARK in operation4183
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_operation4194	TokenNameIdentifier	 FOLLOW 136 in operation4194
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_list_literal_in_operation4198	TokenNameIdentifier	 FOLLOW list literal in operation4198
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_137_in_operation4208	TokenNameIdentifier	 FOLLOW 137 in operation4208
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_list_literal_in_operation4212	TokenNameIdentifier	 FOLLOW list literal in operation4212
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_operation4223	TokenNameIdentifier	 FOLLOW 136 in operation4223
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000012L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_literal_in_operation4227	TokenNameIdentifier	 FOLLOW set literal in operation4227
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_137_in_operation4237	TokenNameIdentifier	 FOLLOW 137 in operation4237
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000012L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_literal_in_operation4241	TokenNameIdentifier	 FOLLOW set literal in operation4241
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_136_in_operation4252	TokenNameIdentifier	 FOLLOW 136 in operation4252
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_map_literal_in_operation4256	TokenNameIdentifier	 FOLLOW map literal in operation4256
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_property_in_properties4276	TokenNameIdentifier	 FOLLOW property in properties4276
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_AND_in_properties4280	TokenNameIdentifier	 FOLLOW  K  AND in properties4280
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_property_in_properties4282	TokenNameIdentifier	 FOLLOW property in properties4282
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000020002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_property4305	TokenNameIdentifier	 FOLLOW cident in property4305
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000080L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_135_in_property4307	TokenNameIdentifier	 FOLLOW 135 in property4307
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141D040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE73FL	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000010L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_propertyValue_in_property4312	TokenNameIdentifier	 FOLLOW property Value in property4312
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_map_literal_in_property4341	TokenNameIdentifier	 FOLLOW map literal in property4341
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_propertyValue4369	TokenNameIdentifier	 FOLLOW set in property Value4369
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_unreserved_keyword_in_propertyValue4403	TokenNameIdentifier	 FOLLOW unreserved keyword in property Value4403
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TOKEN_in_tokenDefinition4451	TokenNameIdentifier	 FOLLOW  K  TOKEN in token Definition4451
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_tokenDefinition4464	TokenNameIdentifier	 FOLLOW 125 in token Definition4464
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_tokenDefinition4468	TokenNameIdentifier	 FOLLOW term in token Definition4468
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_tokenDefinition4474	TokenNameIdentifier	 FOLLOW 127 in token Definition4474
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_tokenDefinition4478	TokenNameIdentifier	 FOLLOW term in token Definition4478
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_tokenDefinition4486	TokenNameIdentifier	 FOLLOW 126 in token Definition4486
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_STRING_LITERAL_in_tokenDefinition4498	TokenNameIdentifier	 FOLLOW  STRING  LITERAL in token Definition4498
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_relation4520	TokenNameIdentifier	 FOLLOW cident in relation4520
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000003C80L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_relation4524	TokenNameIdentifier	 FOLLOW set in relation4524
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_relation4546	TokenNameIdentifier	 FOLLOW term in relation4546
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TOKEN_in_relation4556	TokenNameIdentifier	 FOLLOW  K  TOKEN in relation4556
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_relation4567	TokenNameIdentifier	 FOLLOW 125 in relation4567
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_relation4571	TokenNameIdentifier	 FOLLOW cident in relation4571
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_relation4577	TokenNameIdentifier	 FOLLOW 127 in relation4577
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04141C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE02FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_relation4581	TokenNameIdentifier	 FOLLOW cident in relation4581
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_relation4587	TokenNameIdentifier	 FOLLOW 126 in relation4587
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000003C80L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_relation4602	TokenNameIdentifier	 FOLLOW set in relation4602
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000810L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_tokenDefinition_in_relation4623	TokenNameIdentifier	 FOLLOW token Definition in relation4623
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_cident_in_relation4642	TokenNameIdentifier	 FOLLOW cident in relation4642
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000001000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_IN_in_relation4644	TokenNameIdentifier	 FOLLOW  K  IN in relation4644
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x2000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_125_in_relation4655	TokenNameIdentifier	 FOLLOW 125 in relation4655
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_relation4659	TokenNameIdentifier	 FOLLOW term in relation4659
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_relation4664	TokenNameIdentifier	 FOLLOW 127 in relation4664
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000001000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x00000000000007D0L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_term_in_relation4668	TokenNameIdentifier	 FOLLOW term in relation4668
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0xC000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_126_in_relation4675	TokenNameIdentifier	 FOLLOW 126 in relation4675
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_native_type_in_comparatorType4700	TokenNameIdentifier	 FOLLOW native type in comparator Type4700
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_collection_type_in_comparatorType4716	TokenNameIdentifier	 FOLLOW collection type in comparator Type4716
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_STRING_LITERAL_in_comparatorType4728	TokenNameIdentifier	 FOLLOW  STRING  LITERAL in comparator Type4728
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_ASCII_in_native_type4757	TokenNameIdentifier	 FOLLOW  K  ASCII in native type4757
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BIGINT_in_native_type4771	TokenNameIdentifier	 FOLLOW  K  BIGINT in native type4771
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BLOB_in_native_type4784	TokenNameIdentifier	 FOLLOW  K  BLOB in native type4784
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_BOOLEAN_in_native_type4799	TokenNameIdentifier	 FOLLOW  K  BOOLEAN in native type4799
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_COUNTER_in_native_type4811	TokenNameIdentifier	 FOLLOW  K  COUNTER in native type4811
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DECIMAL_in_native_type4823	TokenNameIdentifier	 FOLLOW  K  DECIMAL in native type4823
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_DOUBLE_in_native_type4835	TokenNameIdentifier	 FOLLOW  K  DOUBLE in native type4835
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_FLOAT_in_native_type4848	TokenNameIdentifier	 FOLLOW  K  FLOAT in native type4848
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_INET_in_native_type4862	TokenNameIdentifier	 FOLLOW  K  INET in native type4862
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_INT_in_native_type4877	TokenNameIdentifier	 FOLLOW  K  INT in native type4877
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TEXT_in_native_type4893	TokenNameIdentifier	 FOLLOW  K  TEXT in native type4893
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TIMESTAMP_in_native_type4908	TokenNameIdentifier	 FOLLOW  K  TIMESTAMP in native type4908
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_UUID_in_native_type4918	TokenNameIdentifier	 FOLLOW  K  UUID in native type4918
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_VARCHAR_in_native_type4933	TokenNameIdentifier	 FOLLOW  K  VARCHAR in native type4933
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_VARINT_in_native_type4945	TokenNameIdentifier	 FOLLOW  K  VARINT in native type4945
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_TIMEUUID_in_native_type4958	TokenNameIdentifier	 FOLLOW  K  TIMEUUID in native type4958
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_MAP_in_collection_type4982	TokenNameIdentifier	 FOLLOW  K  MAP in collection type4982
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000400L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_138_in_collection_type4985	TokenNameIdentifier	 FOLLOW 138 in collection type4985
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_collection_type4989	TokenNameIdentifier	 FOLLOW comparator Type in collection type4989
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x8000000000000000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_127_in_collection_type4991	TokenNameIdentifier	 FOLLOW 127 in collection type4991
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_collection_type4995	TokenNameIdentifier	 FOLLOW comparator Type in collection type4995
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000002000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_141_in_collection_type4997	TokenNameIdentifier	 FOLLOW 141 in collection type4997
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_LIST_in_collection_type5015	TokenNameIdentifier	 FOLLOW  K  LIST in collection type5015
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000400L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_138_in_collection_type5017	TokenNameIdentifier	 FOLLOW 138 in collection type5017
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_collection_type5021	TokenNameIdentifier	 FOLLOW comparator Type in collection type5021
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000002000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_141_in_collection_type5023	TokenNameIdentifier	 FOLLOW 141 in collection type5023
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_K_SET_in_collection_type5041	TokenNameIdentifier	 FOLLOW  K  SET in collection type5041
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000400L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_138_in_collection_type5044	TokenNameIdentifier	 FOLLOW 138 in collection type5044
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0xF8404BC04541C040L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x000000000FFFE03FL	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_comparatorType_in_collection_type5048	TokenNameIdentifier	 FOLLOW comparator Type in collection type5048
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000000000L	TokenNameLongLiteral	
,	TokenNameCOMMA	
0x0000000000002000L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_141_in_collection_type5050	TokenNameIdentifier	 FOLLOW 141 in collection type5050
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_username0	TokenNameIdentifier	 FOLLOW set in username0
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_set_in_unreserved_keyword5108	TokenNameIdentifier	 FOLLOW set in unreserved keyword5108
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
public	TokenNamepublic	
static	TokenNamestatic	
final	TokenNamefinal	
BitSet	TokenNameIdentifier	 Bit Set
FOLLOW_native_type_in_unreserved_keyword5372	TokenNameIdentifier	 FOLLOW native type in unreserved keyword5372
=	TokenNameEQUAL	
new	TokenNamenew	
BitSet	TokenNameIdentifier	 Bit Set
(	TokenNameLPAREN	
new	TokenNamenew	
long	TokenNamelong	
[	TokenNameLBRACKET	
]	TokenNameRBRACKET	
{	TokenNameLBRACE	
0x0000000000000002L	TokenNameLongLiteral	
}	TokenNameRBRACE	
)	TokenNameRPAREN	
;	TokenNameSEMICOLON	
}	TokenNameRBRACE	
